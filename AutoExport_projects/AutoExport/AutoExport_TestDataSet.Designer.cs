//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace AutoExport {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("AutoExport_TestDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class AutoExport_TestDataSet : global::System.Data.DataSet {
        
        private AEExporterDataTable tableAEExporter;
        
        private AutoportExportVehiclesDataTable tableAutoportExportVehicles;
        
        private BillingDataTable tableBilling;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AutoExport_TestDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected AutoExport_TestDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["AEExporter"] != null)) {
                    base.Tables.Add(new AEExporterDataTable(ds.Tables["AEExporter"]));
                }
                if ((ds.Tables["AutoportExportVehicles"] != null)) {
                    base.Tables.Add(new AutoportExportVehiclesDataTable(ds.Tables["AutoportExportVehicles"]));
                }
                if ((ds.Tables["Billing"] != null)) {
                    base.Tables.Add(new BillingDataTable(ds.Tables["Billing"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AEExporterDataTable AEExporter {
            get {
                return this.tableAEExporter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AutoportExportVehiclesDataTable AutoportExportVehicles {
            get {
                return this.tableAutoportExportVehicles;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BillingDataTable Billing {
            get {
                return this.tableBilling;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            AutoExport_TestDataSet cln = ((AutoExport_TestDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["AEExporter"] != null)) {
                    base.Tables.Add(new AEExporterDataTable(ds.Tables["AEExporter"]));
                }
                if ((ds.Tables["AutoportExportVehicles"] != null)) {
                    base.Tables.Add(new AutoportExportVehiclesDataTable(ds.Tables["AutoportExportVehicles"]));
                }
                if ((ds.Tables["Billing"] != null)) {
                    base.Tables.Add(new BillingDataTable(ds.Tables["Billing"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableAEExporter = ((AEExporterDataTable)(base.Tables["AEExporter"]));
            if ((initTable == true)) {
                if ((this.tableAEExporter != null)) {
                    this.tableAEExporter.InitVars();
                }
            }
            this.tableAutoportExportVehicles = ((AutoportExportVehiclesDataTable)(base.Tables["AutoportExportVehicles"]));
            if ((initTable == true)) {
                if ((this.tableAutoportExportVehicles != null)) {
                    this.tableAutoportExportVehicles.InitVars();
                }
            }
            this.tableBilling = ((BillingDataTable)(base.Tables["Billing"]));
            if ((initTable == true)) {
                if ((this.tableBilling != null)) {
                    this.tableBilling.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "AutoExport_TestDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/AutoExport_TestDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAEExporter = new AEExporterDataTable();
            base.Tables.Add(this.tableAEExporter);
            this.tableAutoportExportVehicles = new AutoportExportVehiclesDataTable();
            base.Tables.Add(this.tableAutoportExportVehicles);
            this.tableBilling = new BillingDataTable();
            base.Tables.Add(this.tableBilling);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAEExporter() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAutoportExportVehicles() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeBilling() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            AutoExport_TestDataSet ds = new AutoExport_TestDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AEExporterRowChangeEventHandler(object sender, AEExporterRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AutoportExportVehiclesRowChangeEventHandler(object sender, AutoportExportVehiclesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void BillingRowChangeEventHandler(object sender, BillingRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AEExporterDataTable : global::System.Data.TypedTableBase<AEExporterRow> {
            
            private global::System.Data.DataColumn columnAEExporterID;
            
            private global::System.Data.DataColumn columnExporterName;
            
            private global::System.Data.DataColumn columnExporterShortName;
            
            private global::System.Data.DataColumn columnExporterAddressID;
            
            private global::System.Data.DataColumn columnNotes;
            
            private global::System.Data.DataColumn columnRecordStatus;
            
            private global::System.Data.DataColumn columnCreationDate;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnUpdatedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnAEFreightForwarderID;
            
            private global::System.Data.DataColumn columnCustomerExporterCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AEExporterDataTable() {
                this.TableName = "AEExporter";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AEExporterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AEExporterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AEExporterIDColumn {
                get {
                    return this.columnAEExporterID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExporterNameColumn {
                get {
                    return this.columnExporterName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExporterShortNameColumn {
                get {
                    return this.columnExporterShortName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExporterAddressIDColumn {
                get {
                    return this.columnExporterAddressID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NotesColumn {
                get {
                    return this.columnNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecordStatusColumn {
                get {
                    return this.columnRecordStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreationDateColumn {
                get {
                    return this.columnCreationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdatedDateColumn {
                get {
                    return this.columnUpdatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AEFreightForwarderIDColumn {
                get {
                    return this.columnAEFreightForwarderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerExporterCodeColumn {
                get {
                    return this.columnCustomerExporterCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AEExporterRow this[int index] {
                get {
                    return ((AEExporterRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AEExporterRowChangeEventHandler AEExporterRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AEExporterRowChangeEventHandler AEExporterRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AEExporterRowChangeEventHandler AEExporterRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AEExporterRowChangeEventHandler AEExporterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAEExporterRow(AEExporterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AEExporterRow AddAEExporterRow(string ExporterName, string ExporterShortName, int ExporterAddressID, string Notes, string RecordStatus, System.DateTime CreationDate, string CreatedBy, System.DateTime UpdatedDate, string UpdatedBy, int AEFreightForwarderID, string CustomerExporterCode) {
                AEExporterRow rowAEExporterRow = ((AEExporterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ExporterName,
                        ExporterShortName,
                        ExporterAddressID,
                        Notes,
                        RecordStatus,
                        CreationDate,
                        CreatedBy,
                        UpdatedDate,
                        UpdatedBy,
                        AEFreightForwarderID,
                        CustomerExporterCode};
                rowAEExporterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAEExporterRow);
                return rowAEExporterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AEExporterRow FindByAEExporterID(int AEExporterID) {
                return ((AEExporterRow)(this.Rows.Find(new object[] {
                            AEExporterID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AEExporterDataTable cln = ((AEExporterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AEExporterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAEExporterID = base.Columns["AEExporterID"];
                this.columnExporterName = base.Columns["ExporterName"];
                this.columnExporterShortName = base.Columns["ExporterShortName"];
                this.columnExporterAddressID = base.Columns["ExporterAddressID"];
                this.columnNotes = base.Columns["Notes"];
                this.columnRecordStatus = base.Columns["RecordStatus"];
                this.columnCreationDate = base.Columns["CreationDate"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnUpdatedDate = base.Columns["UpdatedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnAEFreightForwarderID = base.Columns["AEFreightForwarderID"];
                this.columnCustomerExporterCode = base.Columns["CustomerExporterCode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAEExporterID = new global::System.Data.DataColumn("AEExporterID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAEExporterID);
                this.columnExporterName = new global::System.Data.DataColumn("ExporterName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExporterName);
                this.columnExporterShortName = new global::System.Data.DataColumn("ExporterShortName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExporterShortName);
                this.columnExporterAddressID = new global::System.Data.DataColumn("ExporterAddressID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExporterAddressID);
                this.columnNotes = new global::System.Data.DataColumn("Notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotes);
                this.columnRecordStatus = new global::System.Data.DataColumn("RecordStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordStatus);
                this.columnCreationDate = new global::System.Data.DataColumn("CreationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreationDate);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnUpdatedDate = new global::System.Data.DataColumn("UpdatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnAEFreightForwarderID = new global::System.Data.DataColumn("AEFreightForwarderID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAEFreightForwarderID);
                this.columnCustomerExporterCode = new global::System.Data.DataColumn("CustomerExporterCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerExporterCode);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAEExporterID}, true));
                this.columnAEExporterID.AutoIncrement = true;
                this.columnAEExporterID.AutoIncrementSeed = -1;
                this.columnAEExporterID.AutoIncrementStep = -1;
                this.columnAEExporterID.AllowDBNull = false;
                this.columnAEExporterID.ReadOnly = true;
                this.columnAEExporterID.Unique = true;
                this.columnExporterName.MaxLength = 50;
                this.columnExporterShortName.MaxLength = 20;
                this.columnNotes.MaxLength = 1000;
                this.columnRecordStatus.MaxLength = 20;
                this.columnCreatedBy.MaxLength = 20;
                this.columnUpdatedBy.MaxLength = 20;
                this.columnCustomerExporterCode.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AEExporterRow NewAEExporterRow() {
                return ((AEExporterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AEExporterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AEExporterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AEExporterRowChanged != null)) {
                    this.AEExporterRowChanged(this, new AEExporterRowChangeEvent(((AEExporterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AEExporterRowChanging != null)) {
                    this.AEExporterRowChanging(this, new AEExporterRowChangeEvent(((AEExporterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AEExporterRowDeleted != null)) {
                    this.AEExporterRowDeleted(this, new AEExporterRowChangeEvent(((AEExporterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AEExporterRowDeleting != null)) {
                    this.AEExporterRowDeleting(this, new AEExporterRowChangeEvent(((AEExporterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAEExporterRow(AEExporterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutoExport_TestDataSet ds = new AutoExport_TestDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AEExporterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AutoportExportVehiclesDataTable : global::System.Data.TypedTableBase<AutoportExportVehiclesRow> {
            
            private global::System.Data.DataColumn columnAutoportExportVehiclesID;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnVehicleYear;
            
            private global::System.Data.DataColumn columnMake;
            
            private global::System.Data.DataColumn columnModel;
            
            private global::System.Data.DataColumn columnBodystyle;
            
            private global::System.Data.DataColumn columnVIN;
            
            private global::System.Data.DataColumn columnColor;
            
            private global::System.Data.DataColumn columnVehicleLength;
            
            private global::System.Data.DataColumn columnVehicleWidth;
            
            private global::System.Data.DataColumn columnVehicleHeight;
            
            private global::System.Data.DataColumn columnVehicleWeight;
            
            private global::System.Data.DataColumn columnVehicleCubicFeet;
            
            private global::System.Data.DataColumn columnVehicleStatus;
            
            private global::System.Data.DataColumn columnTitleNumber;
            
            private global::System.Data.DataColumn columnTitleState;
            
            private global::System.Data.DataColumn columnDestinationName;
            
            private global::System.Data.DataColumn columnExporterID;
            
            private global::System.Data.DataColumn columnFreightForwarderID;
            
            private global::System.Data.DataColumn columnVesselID;
            
            private global::System.Data.DataColumn columnBookingNumber;
            
            private global::System.Data.DataColumn columnVoyageNumber;
            
            private global::System.Data.DataColumn columnCustomerIdentification;
            
            private global::System.Data.DataColumn columnSizeClass;
            
            private global::System.Data.DataColumn columnBayLocation;
            
            private global::System.Data.DataColumn columnEntryRate;
            
            private global::System.Data.DataColumn columnEntryRateOverrideInd;
            
            private global::System.Data.DataColumn columnPerDiemGraceDays;
            
            private global::System.Data.DataColumn columnPerDiemGraceDaysOverrideInd;
            
            private global::System.Data.DataColumn columnTotalCharge;
            
            private global::System.Data.DataColumn columnDateReceived;
            
            private global::System.Data.DataColumn columnReceivedExceptionDate;
            
            private global::System.Data.DataColumn columnDateSubmittedCustoms;
            
            private global::System.Data.DataColumn columnCustomsExceptionDate;
            
            private global::System.Data.DataColumn columnCustomsApprovedDate;
            
            private global::System.Data.DataColumn columnDateShipped;
            
            private global::System.Data.DataColumn columnBilledInd;
            
            private global::System.Data.DataColumn columnBillingID;
            
            private global::System.Data.DataColumn columnDateBilled;
            
            private global::System.Data.DataColumn columnVINDecodedInd;
            
            private global::System.Data.DataColumn columnNote;
            
            private global::System.Data.DataColumn columnRecordStatus;
            
            private global::System.Data.DataColumn columnCreationDate;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnUpdatedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnCreditHoldInd;
            
            private global::System.Data.DataColumn columnCreditHoldBy;
            
            private global::System.Data.DataColumn columnCustomsApprovalPrintedInd;
            
            private global::System.Data.DataColumn columnVoyageID;
            
            private global::System.Data.DataColumn columnCustomsCoverSheetPrintedInd;
            
            private global::System.Data.DataColumn columnNoStartInd;
            
            private global::System.Data.DataColumn columnCustomsApprovalPrintedDate;
            
            private global::System.Data.DataColumn columnConsigneeID;
            
            private global::System.Data.DataColumn columnLastPhysicalDate;
            
            private global::System.Data.DataColumn columnHasAudioSystemInd;
            
            private global::System.Data.DataColumn columnHasNavigationSystemInd;
            
            private global::System.Data.DataColumn columnTransshipPortName;
            
            private global::System.Data.DataColumn columnSpecialInstructions;
            
            private global::System.Data.DataColumn columnCustomsApprovedCoverSheetPrintedInd;
            
            private global::System.Data.DataColumn columnPortReceiptNumber;
            
            private global::System.Data.DataColumn columnVoyageChangeHoldDate;
            
            private global::System.Data.DataColumn columnReceivedBy;
            
            private global::System.Data.DataColumn columnLastPhysicalBy;
            
            private global::System.Data.DataColumn columnBarCodeLabelPrintedInd;
            
            private global::System.Data.DataColumn columnVIVTagNumber;
            
            private global::System.Data.DataColumn columnBarCodeLabelPrintedDate;
            
            private global::System.Data.DataColumn columnMechanicalExceptionInd;
            
            private global::System.Data.DataColumn columnLeftBehindInd;
            
            private global::System.Data.DataColumn columnITNNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AutoportExportVehiclesDataTable() {
                this.TableName = "AutoportExportVehicles";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AutoportExportVehiclesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AutoportExportVehiclesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AutoportExportVehiclesIDColumn {
                get {
                    return this.columnAutoportExportVehiclesID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VehicleYearColumn {
                get {
                    return this.columnVehicleYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MakeColumn {
                get {
                    return this.columnMake;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModelColumn {
                get {
                    return this.columnModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BodystyleColumn {
                get {
                    return this.columnBodystyle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VINColumn {
                get {
                    return this.columnVIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ColorColumn {
                get {
                    return this.columnColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VehicleLengthColumn {
                get {
                    return this.columnVehicleLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VehicleWidthColumn {
                get {
                    return this.columnVehicleWidth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VehicleHeightColumn {
                get {
                    return this.columnVehicleHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VehicleWeightColumn {
                get {
                    return this.columnVehicleWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VehicleCubicFeetColumn {
                get {
                    return this.columnVehicleCubicFeet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VehicleStatusColumn {
                get {
                    return this.columnVehicleStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TitleNumberColumn {
                get {
                    return this.columnTitleNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TitleStateColumn {
                get {
                    return this.columnTitleState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DestinationNameColumn {
                get {
                    return this.columnDestinationName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExporterIDColumn {
                get {
                    return this.columnExporterID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreightForwarderIDColumn {
                get {
                    return this.columnFreightForwarderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VesselIDColumn {
                get {
                    return this.columnVesselID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingNumberColumn {
                get {
                    return this.columnBookingNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VoyageNumberColumn {
                get {
                    return this.columnVoyageNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerIdentificationColumn {
                get {
                    return this.columnCustomerIdentification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SizeClassColumn {
                get {
                    return this.columnSizeClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BayLocationColumn {
                get {
                    return this.columnBayLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EntryRateColumn {
                get {
                    return this.columnEntryRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EntryRateOverrideIndColumn {
                get {
                    return this.columnEntryRateOverrideInd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerDiemGraceDaysColumn {
                get {
                    return this.columnPerDiemGraceDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerDiemGraceDaysOverrideIndColumn {
                get {
                    return this.columnPerDiemGraceDaysOverrideInd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalChargeColumn {
                get {
                    return this.columnTotalCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateReceivedColumn {
                get {
                    return this.columnDateReceived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReceivedExceptionDateColumn {
                get {
                    return this.columnReceivedExceptionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateSubmittedCustomsColumn {
                get {
                    return this.columnDateSubmittedCustoms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomsExceptionDateColumn {
                get {
                    return this.columnCustomsExceptionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomsApprovedDateColumn {
                get {
                    return this.columnCustomsApprovedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateShippedColumn {
                get {
                    return this.columnDateShipped;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BilledIndColumn {
                get {
                    return this.columnBilledInd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BillingIDColumn {
                get {
                    return this.columnBillingID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateBilledColumn {
                get {
                    return this.columnDateBilled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VINDecodedIndColumn {
                get {
                    return this.columnVINDecodedInd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NoteColumn {
                get {
                    return this.columnNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecordStatusColumn {
                get {
                    return this.columnRecordStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreationDateColumn {
                get {
                    return this.columnCreationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdatedDateColumn {
                get {
                    return this.columnUpdatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreditHoldIndColumn {
                get {
                    return this.columnCreditHoldInd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreditHoldByColumn {
                get {
                    return this.columnCreditHoldBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomsApprovalPrintedIndColumn {
                get {
                    return this.columnCustomsApprovalPrintedInd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VoyageIDColumn {
                get {
                    return this.columnVoyageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomsCoverSheetPrintedIndColumn {
                get {
                    return this.columnCustomsCoverSheetPrintedInd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NoStartIndColumn {
                get {
                    return this.columnNoStartInd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomsApprovalPrintedDateColumn {
                get {
                    return this.columnCustomsApprovalPrintedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConsigneeIDColumn {
                get {
                    return this.columnConsigneeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastPhysicalDateColumn {
                get {
                    return this.columnLastPhysicalDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HasAudioSystemIndColumn {
                get {
                    return this.columnHasAudioSystemInd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HasNavigationSystemIndColumn {
                get {
                    return this.columnHasNavigationSystemInd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransshipPortNameColumn {
                get {
                    return this.columnTransshipPortName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpecialInstructionsColumn {
                get {
                    return this.columnSpecialInstructions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomsApprovedCoverSheetPrintedIndColumn {
                get {
                    return this.columnCustomsApprovedCoverSheetPrintedInd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PortReceiptNumberColumn {
                get {
                    return this.columnPortReceiptNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VoyageChangeHoldDateColumn {
                get {
                    return this.columnVoyageChangeHoldDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReceivedByColumn {
                get {
                    return this.columnReceivedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastPhysicalByColumn {
                get {
                    return this.columnLastPhysicalBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BarCodeLabelPrintedIndColumn {
                get {
                    return this.columnBarCodeLabelPrintedInd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VIVTagNumberColumn {
                get {
                    return this.columnVIVTagNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BarCodeLabelPrintedDateColumn {
                get {
                    return this.columnBarCodeLabelPrintedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MechanicalExceptionIndColumn {
                get {
                    return this.columnMechanicalExceptionInd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LeftBehindIndColumn {
                get {
                    return this.columnLeftBehindInd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ITNNumberColumn {
                get {
                    return this.columnITNNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AutoportExportVehiclesRow this[int index] {
                get {
                    return ((AutoportExportVehiclesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AutoportExportVehiclesRowChangeEventHandler AutoportExportVehiclesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AutoportExportVehiclesRowChangeEventHandler AutoportExportVehiclesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AutoportExportVehiclesRowChangeEventHandler AutoportExportVehiclesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AutoportExportVehiclesRowChangeEventHandler AutoportExportVehiclesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAutoportExportVehiclesRow(AutoportExportVehiclesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AutoportExportVehiclesRow AddAutoportExportVehiclesRow(
                        int CustomerID, 
                        string VehicleYear, 
                        string Make, 
                        string Model, 
                        string Bodystyle, 
                        string VIN, 
                        string Color, 
                        string VehicleLength, 
                        string VehicleWidth, 
                        string VehicleHeight, 
                        string VehicleWeight, 
                        string VehicleCubicFeet, 
                        string VehicleStatus, 
                        string TitleNumber, 
                        string TitleState, 
                        string DestinationName, 
                        int ExporterID, 
                        int FreightForwarderID, 
                        int VesselID, 
                        string BookingNumber, 
                        string VoyageNumber, 
                        string CustomerIdentification, 
                        string SizeClass, 
                        string BayLocation, 
                        decimal EntryRate, 
                        int EntryRateOverrideInd, 
                        int PerDiemGraceDays, 
                        int PerDiemGraceDaysOverrideInd, 
                        decimal TotalCharge, 
                        System.DateTime DateReceived, 
                        System.DateTime ReceivedExceptionDate, 
                        System.DateTime DateSubmittedCustoms, 
                        System.DateTime CustomsExceptionDate, 
                        System.DateTime CustomsApprovedDate, 
                        System.DateTime DateShipped, 
                        int BilledInd, 
                        int BillingID, 
                        System.DateTime DateBilled, 
                        int VINDecodedInd, 
                        string Note, 
                        string RecordStatus, 
                        System.DateTime CreationDate, 
                        string CreatedBy, 
                        System.DateTime UpdatedDate, 
                        string UpdatedBy, 
                        int CreditHoldInd, 
                        string CreditHoldBy, 
                        int CustomsApprovalPrintedInd, 
                        int VoyageID, 
                        int CustomsCoverSheetPrintedInd, 
                        int NoStartInd, 
                        System.DateTime CustomsApprovalPrintedDate, 
                        int ConsigneeID, 
                        System.DateTime LastPhysicalDate, 
                        int HasAudioSystemInd, 
                        int HasNavigationSystemInd, 
                        string TransshipPortName, 
                        string SpecialInstructions, 
                        int CustomsApprovedCoverSheetPrintedInd, 
                        string PortReceiptNumber, 
                        System.DateTime VoyageChangeHoldDate, 
                        string ReceivedBy, 
                        string LastPhysicalBy, 
                        int BarCodeLabelPrintedInd, 
                        string VIVTagNumber, 
                        System.DateTime BarCodeLabelPrintedDate, 
                        int MechanicalExceptionInd, 
                        int LeftBehindInd, 
                        string ITNNumber) {
                AutoportExportVehiclesRow rowAutoportExportVehiclesRow = ((AutoportExportVehiclesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CustomerID,
                        VehicleYear,
                        Make,
                        Model,
                        Bodystyle,
                        VIN,
                        Color,
                        VehicleLength,
                        VehicleWidth,
                        VehicleHeight,
                        VehicleWeight,
                        VehicleCubicFeet,
                        VehicleStatus,
                        TitleNumber,
                        TitleState,
                        DestinationName,
                        ExporterID,
                        FreightForwarderID,
                        VesselID,
                        BookingNumber,
                        VoyageNumber,
                        CustomerIdentification,
                        SizeClass,
                        BayLocation,
                        EntryRate,
                        EntryRateOverrideInd,
                        PerDiemGraceDays,
                        PerDiemGraceDaysOverrideInd,
                        TotalCharge,
                        DateReceived,
                        ReceivedExceptionDate,
                        DateSubmittedCustoms,
                        CustomsExceptionDate,
                        CustomsApprovedDate,
                        DateShipped,
                        BilledInd,
                        BillingID,
                        DateBilled,
                        VINDecodedInd,
                        Note,
                        RecordStatus,
                        CreationDate,
                        CreatedBy,
                        UpdatedDate,
                        UpdatedBy,
                        CreditHoldInd,
                        CreditHoldBy,
                        CustomsApprovalPrintedInd,
                        VoyageID,
                        CustomsCoverSheetPrintedInd,
                        NoStartInd,
                        CustomsApprovalPrintedDate,
                        ConsigneeID,
                        LastPhysicalDate,
                        HasAudioSystemInd,
                        HasNavigationSystemInd,
                        TransshipPortName,
                        SpecialInstructions,
                        CustomsApprovedCoverSheetPrintedInd,
                        PortReceiptNumber,
                        VoyageChangeHoldDate,
                        ReceivedBy,
                        LastPhysicalBy,
                        BarCodeLabelPrintedInd,
                        VIVTagNumber,
                        BarCodeLabelPrintedDate,
                        MechanicalExceptionInd,
                        LeftBehindInd,
                        ITNNumber};
                rowAutoportExportVehiclesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAutoportExportVehiclesRow);
                return rowAutoportExportVehiclesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AutoportExportVehiclesRow FindByAutoportExportVehiclesID(int AutoportExportVehiclesID) {
                return ((AutoportExportVehiclesRow)(this.Rows.Find(new object[] {
                            AutoportExportVehiclesID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AutoportExportVehiclesDataTable cln = ((AutoportExportVehiclesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AutoportExportVehiclesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAutoportExportVehiclesID = base.Columns["AutoportExportVehiclesID"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnVehicleYear = base.Columns["VehicleYear"];
                this.columnMake = base.Columns["Make"];
                this.columnModel = base.Columns["Model"];
                this.columnBodystyle = base.Columns["Bodystyle"];
                this.columnVIN = base.Columns["VIN"];
                this.columnColor = base.Columns["Color"];
                this.columnVehicleLength = base.Columns["VehicleLength"];
                this.columnVehicleWidth = base.Columns["VehicleWidth"];
                this.columnVehicleHeight = base.Columns["VehicleHeight"];
                this.columnVehicleWeight = base.Columns["VehicleWeight"];
                this.columnVehicleCubicFeet = base.Columns["VehicleCubicFeet"];
                this.columnVehicleStatus = base.Columns["VehicleStatus"];
                this.columnTitleNumber = base.Columns["TitleNumber"];
                this.columnTitleState = base.Columns["TitleState"];
                this.columnDestinationName = base.Columns["DestinationName"];
                this.columnExporterID = base.Columns["ExporterID"];
                this.columnFreightForwarderID = base.Columns["FreightForwarderID"];
                this.columnVesselID = base.Columns["VesselID"];
                this.columnBookingNumber = base.Columns["BookingNumber"];
                this.columnVoyageNumber = base.Columns["VoyageNumber"];
                this.columnCustomerIdentification = base.Columns["CustomerIdentification"];
                this.columnSizeClass = base.Columns["SizeClass"];
                this.columnBayLocation = base.Columns["BayLocation"];
                this.columnEntryRate = base.Columns["EntryRate"];
                this.columnEntryRateOverrideInd = base.Columns["EntryRateOverrideInd"];
                this.columnPerDiemGraceDays = base.Columns["PerDiemGraceDays"];
                this.columnPerDiemGraceDaysOverrideInd = base.Columns["PerDiemGraceDaysOverrideInd"];
                this.columnTotalCharge = base.Columns["TotalCharge"];
                this.columnDateReceived = base.Columns["DateReceived"];
                this.columnReceivedExceptionDate = base.Columns["ReceivedExceptionDate"];
                this.columnDateSubmittedCustoms = base.Columns["DateSubmittedCustoms"];
                this.columnCustomsExceptionDate = base.Columns["CustomsExceptionDate"];
                this.columnCustomsApprovedDate = base.Columns["CustomsApprovedDate"];
                this.columnDateShipped = base.Columns["DateShipped"];
                this.columnBilledInd = base.Columns["BilledInd"];
                this.columnBillingID = base.Columns["BillingID"];
                this.columnDateBilled = base.Columns["DateBilled"];
                this.columnVINDecodedInd = base.Columns["VINDecodedInd"];
                this.columnNote = base.Columns["Note"];
                this.columnRecordStatus = base.Columns["RecordStatus"];
                this.columnCreationDate = base.Columns["CreationDate"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnUpdatedDate = base.Columns["UpdatedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnCreditHoldInd = base.Columns["CreditHoldInd"];
                this.columnCreditHoldBy = base.Columns["CreditHoldBy"];
                this.columnCustomsApprovalPrintedInd = base.Columns["CustomsApprovalPrintedInd"];
                this.columnVoyageID = base.Columns["VoyageID"];
                this.columnCustomsCoverSheetPrintedInd = base.Columns["CustomsCoverSheetPrintedInd"];
                this.columnNoStartInd = base.Columns["NoStartInd"];
                this.columnCustomsApprovalPrintedDate = base.Columns["CustomsApprovalPrintedDate"];
                this.columnConsigneeID = base.Columns["ConsigneeID"];
                this.columnLastPhysicalDate = base.Columns["LastPhysicalDate"];
                this.columnHasAudioSystemInd = base.Columns["HasAudioSystemInd"];
                this.columnHasNavigationSystemInd = base.Columns["HasNavigationSystemInd"];
                this.columnTransshipPortName = base.Columns["TransshipPortName"];
                this.columnSpecialInstructions = base.Columns["SpecialInstructions"];
                this.columnCustomsApprovedCoverSheetPrintedInd = base.Columns["CustomsApprovedCoverSheetPrintedInd"];
                this.columnPortReceiptNumber = base.Columns["PortReceiptNumber"];
                this.columnVoyageChangeHoldDate = base.Columns["VoyageChangeHoldDate"];
                this.columnReceivedBy = base.Columns["ReceivedBy"];
                this.columnLastPhysicalBy = base.Columns["LastPhysicalBy"];
                this.columnBarCodeLabelPrintedInd = base.Columns["BarCodeLabelPrintedInd"];
                this.columnVIVTagNumber = base.Columns["VIVTagNumber"];
                this.columnBarCodeLabelPrintedDate = base.Columns["BarCodeLabelPrintedDate"];
                this.columnMechanicalExceptionInd = base.Columns["MechanicalExceptionInd"];
                this.columnLeftBehindInd = base.Columns["LeftBehindInd"];
                this.columnITNNumber = base.Columns["ITNNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAutoportExportVehiclesID = new global::System.Data.DataColumn("AutoportExportVehiclesID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoportExportVehiclesID);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnVehicleYear = new global::System.Data.DataColumn("VehicleYear", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicleYear);
                this.columnMake = new global::System.Data.DataColumn("Make", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMake);
                this.columnModel = new global::System.Data.DataColumn("Model", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModel);
                this.columnBodystyle = new global::System.Data.DataColumn("Bodystyle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBodystyle);
                this.columnVIN = new global::System.Data.DataColumn("VIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVIN);
                this.columnColor = new global::System.Data.DataColumn("Color", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColor);
                this.columnVehicleLength = new global::System.Data.DataColumn("VehicleLength", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicleLength);
                this.columnVehicleWidth = new global::System.Data.DataColumn("VehicleWidth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicleWidth);
                this.columnVehicleHeight = new global::System.Data.DataColumn("VehicleHeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicleHeight);
                this.columnVehicleWeight = new global::System.Data.DataColumn("VehicleWeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicleWeight);
                this.columnVehicleCubicFeet = new global::System.Data.DataColumn("VehicleCubicFeet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicleCubicFeet);
                this.columnVehicleStatus = new global::System.Data.DataColumn("VehicleStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicleStatus);
                this.columnTitleNumber = new global::System.Data.DataColumn("TitleNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitleNumber);
                this.columnTitleState = new global::System.Data.DataColumn("TitleState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitleState);
                this.columnDestinationName = new global::System.Data.DataColumn("DestinationName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestinationName);
                this.columnExporterID = new global::System.Data.DataColumn("ExporterID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExporterID);
                this.columnFreightForwarderID = new global::System.Data.DataColumn("FreightForwarderID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreightForwarderID);
                this.columnVesselID = new global::System.Data.DataColumn("VesselID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVesselID);
                this.columnBookingNumber = new global::System.Data.DataColumn("BookingNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingNumber);
                this.columnVoyageNumber = new global::System.Data.DataColumn("VoyageNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoyageNumber);
                this.columnCustomerIdentification = new global::System.Data.DataColumn("CustomerIdentification", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerIdentification);
                this.columnSizeClass = new global::System.Data.DataColumn("SizeClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSizeClass);
                this.columnBayLocation = new global::System.Data.DataColumn("BayLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBayLocation);
                this.columnEntryRate = new global::System.Data.DataColumn("EntryRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntryRate);
                this.columnEntryRateOverrideInd = new global::System.Data.DataColumn("EntryRateOverrideInd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntryRateOverrideInd);
                this.columnPerDiemGraceDays = new global::System.Data.DataColumn("PerDiemGraceDays", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerDiemGraceDays);
                this.columnPerDiemGraceDaysOverrideInd = new global::System.Data.DataColumn("PerDiemGraceDaysOverrideInd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerDiemGraceDaysOverrideInd);
                this.columnTotalCharge = new global::System.Data.DataColumn("TotalCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCharge);
                this.columnDateReceived = new global::System.Data.DataColumn("DateReceived", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateReceived);
                this.columnReceivedExceptionDate = new global::System.Data.DataColumn("ReceivedExceptionDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivedExceptionDate);
                this.columnDateSubmittedCustoms = new global::System.Data.DataColumn("DateSubmittedCustoms", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateSubmittedCustoms);
                this.columnCustomsExceptionDate = new global::System.Data.DataColumn("CustomsExceptionDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomsExceptionDate);
                this.columnCustomsApprovedDate = new global::System.Data.DataColumn("CustomsApprovedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomsApprovedDate);
                this.columnDateShipped = new global::System.Data.DataColumn("DateShipped", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateShipped);
                this.columnBilledInd = new global::System.Data.DataColumn("BilledInd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBilledInd);
                this.columnBillingID = new global::System.Data.DataColumn("BillingID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillingID);
                this.columnDateBilled = new global::System.Data.DataColumn("DateBilled", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateBilled);
                this.columnVINDecodedInd = new global::System.Data.DataColumn("VINDecodedInd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVINDecodedInd);
                this.columnNote = new global::System.Data.DataColumn("Note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNote);
                this.columnRecordStatus = new global::System.Data.DataColumn("RecordStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordStatus);
                this.columnCreationDate = new global::System.Data.DataColumn("CreationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreationDate);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnUpdatedDate = new global::System.Data.DataColumn("UpdatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnCreditHoldInd = new global::System.Data.DataColumn("CreditHoldInd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditHoldInd);
                this.columnCreditHoldBy = new global::System.Data.DataColumn("CreditHoldBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditHoldBy);
                this.columnCustomsApprovalPrintedInd = new global::System.Data.DataColumn("CustomsApprovalPrintedInd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomsApprovalPrintedInd);
                this.columnVoyageID = new global::System.Data.DataColumn("VoyageID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoyageID);
                this.columnCustomsCoverSheetPrintedInd = new global::System.Data.DataColumn("CustomsCoverSheetPrintedInd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomsCoverSheetPrintedInd);
                this.columnNoStartInd = new global::System.Data.DataColumn("NoStartInd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoStartInd);
                this.columnCustomsApprovalPrintedDate = new global::System.Data.DataColumn("CustomsApprovalPrintedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomsApprovalPrintedDate);
                this.columnConsigneeID = new global::System.Data.DataColumn("ConsigneeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsigneeID);
                this.columnLastPhysicalDate = new global::System.Data.DataColumn("LastPhysicalDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastPhysicalDate);
                this.columnHasAudioSystemInd = new global::System.Data.DataColumn("HasAudioSystemInd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasAudioSystemInd);
                this.columnHasNavigationSystemInd = new global::System.Data.DataColumn("HasNavigationSystemInd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasNavigationSystemInd);
                this.columnTransshipPortName = new global::System.Data.DataColumn("TransshipPortName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransshipPortName);
                this.columnSpecialInstructions = new global::System.Data.DataColumn("SpecialInstructions", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialInstructions);
                this.columnCustomsApprovedCoverSheetPrintedInd = new global::System.Data.DataColumn("CustomsApprovedCoverSheetPrintedInd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomsApprovedCoverSheetPrintedInd);
                this.columnPortReceiptNumber = new global::System.Data.DataColumn("PortReceiptNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPortReceiptNumber);
                this.columnVoyageChangeHoldDate = new global::System.Data.DataColumn("VoyageChangeHoldDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoyageChangeHoldDate);
                this.columnReceivedBy = new global::System.Data.DataColumn("ReceivedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivedBy);
                this.columnLastPhysicalBy = new global::System.Data.DataColumn("LastPhysicalBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastPhysicalBy);
                this.columnBarCodeLabelPrintedInd = new global::System.Data.DataColumn("BarCodeLabelPrintedInd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarCodeLabelPrintedInd);
                this.columnVIVTagNumber = new global::System.Data.DataColumn("VIVTagNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVIVTagNumber);
                this.columnBarCodeLabelPrintedDate = new global::System.Data.DataColumn("BarCodeLabelPrintedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarCodeLabelPrintedDate);
                this.columnMechanicalExceptionInd = new global::System.Data.DataColumn("MechanicalExceptionInd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMechanicalExceptionInd);
                this.columnLeftBehindInd = new global::System.Data.DataColumn("LeftBehindInd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeftBehindInd);
                this.columnITNNumber = new global::System.Data.DataColumn("ITNNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITNNumber);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAutoportExportVehiclesID}, true));
                this.columnAutoportExportVehiclesID.AutoIncrement = true;
                this.columnAutoportExportVehiclesID.AutoIncrementSeed = -1;
                this.columnAutoportExportVehiclesID.AutoIncrementStep = -1;
                this.columnAutoportExportVehiclesID.AllowDBNull = false;
                this.columnAutoportExportVehiclesID.ReadOnly = true;
                this.columnAutoportExportVehiclesID.Unique = true;
                this.columnVehicleYear.MaxLength = 6;
                this.columnMake.MaxLength = 50;
                this.columnModel.MaxLength = 50;
                this.columnBodystyle.MaxLength = 50;
                this.columnVIN.MaxLength = 17;
                this.columnColor.MaxLength = 20;
                this.columnVehicleLength.MaxLength = 10;
                this.columnVehicleWidth.MaxLength = 10;
                this.columnVehicleHeight.MaxLength = 10;
                this.columnVehicleWeight.MaxLength = 10;
                this.columnVehicleCubicFeet.MaxLength = 10;
                this.columnVehicleStatus.MaxLength = 20;
                this.columnTitleNumber.MaxLength = 20;
                this.columnTitleState.MaxLength = 2;
                this.columnDestinationName.MaxLength = 20;
                this.columnBookingNumber.MaxLength = 20;
                this.columnVoyageNumber.MaxLength = 20;
                this.columnCustomerIdentification.MaxLength = 20;
                this.columnSizeClass.MaxLength = 10;
                this.columnBayLocation.MaxLength = 20;
                this.columnNote.MaxLength = 1000;
                this.columnRecordStatus.MaxLength = 20;
                this.columnCreatedBy.MaxLength = 20;
                this.columnUpdatedBy.MaxLength = 20;
                this.columnCreditHoldBy.MaxLength = 20;
                this.columnTransshipPortName.MaxLength = 20;
                this.columnSpecialInstructions.MaxLength = 1000;
                this.columnPortReceiptNumber.MaxLength = 20;
                this.columnReceivedBy.MaxLength = 30;
                this.columnLastPhysicalBy.MaxLength = 30;
                this.columnVIVTagNumber.MaxLength = 10;
                this.columnITNNumber.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AutoportExportVehiclesRow NewAutoportExportVehiclesRow() {
                return ((AutoportExportVehiclesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AutoportExportVehiclesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AutoportExportVehiclesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AutoportExportVehiclesRowChanged != null)) {
                    this.AutoportExportVehiclesRowChanged(this, new AutoportExportVehiclesRowChangeEvent(((AutoportExportVehiclesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AutoportExportVehiclesRowChanging != null)) {
                    this.AutoportExportVehiclesRowChanging(this, new AutoportExportVehiclesRowChangeEvent(((AutoportExportVehiclesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AutoportExportVehiclesRowDeleted != null)) {
                    this.AutoportExportVehiclesRowDeleted(this, new AutoportExportVehiclesRowChangeEvent(((AutoportExportVehiclesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AutoportExportVehiclesRowDeleting != null)) {
                    this.AutoportExportVehiclesRowDeleting(this, new AutoportExportVehiclesRowChangeEvent(((AutoportExportVehiclesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAutoportExportVehiclesRow(AutoportExportVehiclesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutoExport_TestDataSet ds = new AutoExport_TestDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AutoportExportVehiclesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BillingDataTable : global::System.Data.TypedTableBase<BillingRow> {
            
            private global::System.Data.DataColumn columnBillingID;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnOutsideCarrierInvoiceInd;
            
            private global::System.Data.DataColumn columnOutsideCarrierID;
            
            private global::System.Data.DataColumn columnRunID;
            
            private global::System.Data.DataColumn columnInvoiceDate;
            
            private global::System.Data.DataColumn columnInvoiceNumber;
            
            private global::System.Data.DataColumn columnInvoiceType;
            
            private global::System.Data.DataColumn columnPaymentMethod;
            
            private global::System.Data.DataColumn columnTransportCharges;
            
            private global::System.Data.DataColumn columnFuelSurchargeRate;
            
            private global::System.Data.DataColumn columnFuelSurchargeRateOverrideInd;
            
            private global::System.Data.DataColumn columnFuelSurcharge;
            
            private global::System.Data.DataColumn columnFuelSurchargeOverrideInd;
            
            private global::System.Data.DataColumn columnOtherCharge1;
            
            private global::System.Data.DataColumn columnOtherCharge1Description;
            
            private global::System.Data.DataColumn columnOtherCharge2;
            
            private global::System.Data.DataColumn columnOtherCharge2Description;
            
            private global::System.Data.DataColumn columnOtherCharge3;
            
            private global::System.Data.DataColumn columnOtherCharge3Description;
            
            private global::System.Data.DataColumn columnOtherCharge4;
            
            private global::System.Data.DataColumn columnOtherCharge4Description;
            
            private global::System.Data.DataColumn columnInvoiceAmount;
            
            private global::System.Data.DataColumn columnAmountPaid;
            
            private global::System.Data.DataColumn columnCreditsIssued;
            
            private global::System.Data.DataColumn columnBalanceDue;
            
            private global::System.Data.DataColumn columnDueToOutsideCarriers;
            
            private global::System.Data.DataColumn columnDueFromOutsideCarriers;
            
            private global::System.Data.DataColumn columnPaidInFullInd;
            
            private global::System.Data.DataColumn columnPaidInFullDate;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnInvoiceStatus;
            
            private global::System.Data.DataColumn columnPrintedInd;
            
            private global::System.Data.DataColumn columnDatePrinted;
            
            private global::System.Data.DataColumn columnCreditMemoInd;
            
            private global::System.Data.DataColumn columnCreditedOutInd;
            
            private global::System.Data.DataColumn columnCreditMemoID;
            
            private global::System.Data.DataColumn columnExportedInd;
            
            private global::System.Data.DataColumn columnDateExported;
            
            private global::System.Data.DataColumn columnCreationDate;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnUpdatedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnCreditedOutBy;
            
            private global::System.Data.DataColumn columnStorageCharges;
            
            private global::System.Data.DataColumn columnDATBillingID;
            
            private global::System.Data.DataColumn columnDATBillingPercentage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BillingDataTable() {
                this.TableName = "Billing";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BillingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected BillingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BillingIDColumn {
                get {
                    return this.columnBillingID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutsideCarrierInvoiceIndColumn {
                get {
                    return this.columnOutsideCarrierInvoiceInd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutsideCarrierIDColumn {
                get {
                    return this.columnOutsideCarrierID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RunIDColumn {
                get {
                    return this.columnRunID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceDateColumn {
                get {
                    return this.columnInvoiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceNumberColumn {
                get {
                    return this.columnInvoiceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceTypeColumn {
                get {
                    return this.columnInvoiceType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentMethodColumn {
                get {
                    return this.columnPaymentMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransportChargesColumn {
                get {
                    return this.columnTransportCharges;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FuelSurchargeRateColumn {
                get {
                    return this.columnFuelSurchargeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FuelSurchargeRateOverrideIndColumn {
                get {
                    return this.columnFuelSurchargeRateOverrideInd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FuelSurchargeColumn {
                get {
                    return this.columnFuelSurcharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FuelSurchargeOverrideIndColumn {
                get {
                    return this.columnFuelSurchargeOverrideInd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherCharge1Column {
                get {
                    return this.columnOtherCharge1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherCharge1DescriptionColumn {
                get {
                    return this.columnOtherCharge1Description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherCharge2Column {
                get {
                    return this.columnOtherCharge2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherCharge2DescriptionColumn {
                get {
                    return this.columnOtherCharge2Description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherCharge3Column {
                get {
                    return this.columnOtherCharge3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherCharge3DescriptionColumn {
                get {
                    return this.columnOtherCharge3Description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherCharge4Column {
                get {
                    return this.columnOtherCharge4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherCharge4DescriptionColumn {
                get {
                    return this.columnOtherCharge4Description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceAmountColumn {
                get {
                    return this.columnInvoiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmountPaidColumn {
                get {
                    return this.columnAmountPaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreditsIssuedColumn {
                get {
                    return this.columnCreditsIssued;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BalanceDueColumn {
                get {
                    return this.columnBalanceDue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DueToOutsideCarriersColumn {
                get {
                    return this.columnDueToOutsideCarriers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DueFromOutsideCarriersColumn {
                get {
                    return this.columnDueFromOutsideCarriers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaidInFullIndColumn {
                get {
                    return this.columnPaidInFullInd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaidInFullDateColumn {
                get {
                    return this.columnPaidInFullDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceStatusColumn {
                get {
                    return this.columnInvoiceStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrintedIndColumn {
                get {
                    return this.columnPrintedInd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DatePrintedColumn {
                get {
                    return this.columnDatePrinted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreditMemoIndColumn {
                get {
                    return this.columnCreditMemoInd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreditedOutIndColumn {
                get {
                    return this.columnCreditedOutInd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreditMemoIDColumn {
                get {
                    return this.columnCreditMemoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExportedIndColumn {
                get {
                    return this.columnExportedInd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateExportedColumn {
                get {
                    return this.columnDateExported;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreationDateColumn {
                get {
                    return this.columnCreationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdatedDateColumn {
                get {
                    return this.columnUpdatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreditedOutByColumn {
                get {
                    return this.columnCreditedOutBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StorageChargesColumn {
                get {
                    return this.columnStorageCharges;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DATBillingIDColumn {
                get {
                    return this.columnDATBillingID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DATBillingPercentageColumn {
                get {
                    return this.columnDATBillingPercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BillingRow this[int index] {
                get {
                    return ((BillingRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BillingRowChangeEventHandler BillingRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BillingRowChangeEventHandler BillingRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BillingRowChangeEventHandler BillingRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BillingRowChangeEventHandler BillingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddBillingRow(BillingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BillingRow AddBillingRow(
                        int CustomerID, 
                        int OutsideCarrierInvoiceInd, 
                        int OutsideCarrierID, 
                        int RunID, 
                        System.DateTime InvoiceDate, 
                        string InvoiceNumber, 
                        string InvoiceType, 
                        string PaymentMethod, 
                        decimal TransportCharges, 
                        decimal FuelSurchargeRate, 
                        int FuelSurchargeRateOverrideInd, 
                        decimal FuelSurcharge, 
                        int FuelSurchargeOverrideInd, 
                        decimal OtherCharge1, 
                        string OtherCharge1Description, 
                        decimal OtherCharge2, 
                        string OtherCharge2Description, 
                        decimal OtherCharge3, 
                        string OtherCharge3Description, 
                        decimal OtherCharge4, 
                        string OtherCharge4Description, 
                        decimal InvoiceAmount, 
                        decimal AmountPaid, 
                        decimal CreditsIssued, 
                        decimal BalanceDue, 
                        decimal DueToOutsideCarriers, 
                        decimal DueFromOutsideCarriers, 
                        int PaidInFullInd, 
                        System.DateTime PaidInFullDate, 
                        string Comments, 
                        string InvoiceStatus, 
                        int PrintedInd, 
                        System.DateTime DatePrinted, 
                        int CreditMemoInd, 
                        int CreditedOutInd, 
                        int CreditMemoID, 
                        int ExportedInd, 
                        System.DateTime DateExported, 
                        System.DateTime CreationDate, 
                        string CreatedBy, 
                        System.DateTime UpdatedDate, 
                        string UpdatedBy, 
                        string CreditedOutBy, 
                        decimal StorageCharges, 
                        int DATBillingID, 
                        decimal DATBillingPercentage) {
                BillingRow rowBillingRow = ((BillingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CustomerID,
                        OutsideCarrierInvoiceInd,
                        OutsideCarrierID,
                        RunID,
                        InvoiceDate,
                        InvoiceNumber,
                        InvoiceType,
                        PaymentMethod,
                        TransportCharges,
                        FuelSurchargeRate,
                        FuelSurchargeRateOverrideInd,
                        FuelSurcharge,
                        FuelSurchargeOverrideInd,
                        OtherCharge1,
                        OtherCharge1Description,
                        OtherCharge2,
                        OtherCharge2Description,
                        OtherCharge3,
                        OtherCharge3Description,
                        OtherCharge4,
                        OtherCharge4Description,
                        InvoiceAmount,
                        AmountPaid,
                        CreditsIssued,
                        BalanceDue,
                        DueToOutsideCarriers,
                        DueFromOutsideCarriers,
                        PaidInFullInd,
                        PaidInFullDate,
                        Comments,
                        InvoiceStatus,
                        PrintedInd,
                        DatePrinted,
                        CreditMemoInd,
                        CreditedOutInd,
                        CreditMemoID,
                        ExportedInd,
                        DateExported,
                        CreationDate,
                        CreatedBy,
                        UpdatedDate,
                        UpdatedBy,
                        CreditedOutBy,
                        StorageCharges,
                        DATBillingID,
                        DATBillingPercentage};
                rowBillingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBillingRow);
                return rowBillingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BillingRow FindByBillingID(int BillingID) {
                return ((BillingRow)(this.Rows.Find(new object[] {
                            BillingID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BillingDataTable cln = ((BillingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BillingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnBillingID = base.Columns["BillingID"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnOutsideCarrierInvoiceInd = base.Columns["OutsideCarrierInvoiceInd"];
                this.columnOutsideCarrierID = base.Columns["OutsideCarrierID"];
                this.columnRunID = base.Columns["RunID"];
                this.columnInvoiceDate = base.Columns["InvoiceDate"];
                this.columnInvoiceNumber = base.Columns["InvoiceNumber"];
                this.columnInvoiceType = base.Columns["InvoiceType"];
                this.columnPaymentMethod = base.Columns["PaymentMethod"];
                this.columnTransportCharges = base.Columns["TransportCharges"];
                this.columnFuelSurchargeRate = base.Columns["FuelSurchargeRate"];
                this.columnFuelSurchargeRateOverrideInd = base.Columns["FuelSurchargeRateOverrideInd"];
                this.columnFuelSurcharge = base.Columns["FuelSurcharge"];
                this.columnFuelSurchargeOverrideInd = base.Columns["FuelSurchargeOverrideInd"];
                this.columnOtherCharge1 = base.Columns["OtherCharge1"];
                this.columnOtherCharge1Description = base.Columns["OtherCharge1Description"];
                this.columnOtherCharge2 = base.Columns["OtherCharge2"];
                this.columnOtherCharge2Description = base.Columns["OtherCharge2Description"];
                this.columnOtherCharge3 = base.Columns["OtherCharge3"];
                this.columnOtherCharge3Description = base.Columns["OtherCharge3Description"];
                this.columnOtherCharge4 = base.Columns["OtherCharge4"];
                this.columnOtherCharge4Description = base.Columns["OtherCharge4Description"];
                this.columnInvoiceAmount = base.Columns["InvoiceAmount"];
                this.columnAmountPaid = base.Columns["AmountPaid"];
                this.columnCreditsIssued = base.Columns["CreditsIssued"];
                this.columnBalanceDue = base.Columns["BalanceDue"];
                this.columnDueToOutsideCarriers = base.Columns["DueToOutsideCarriers"];
                this.columnDueFromOutsideCarriers = base.Columns["DueFromOutsideCarriers"];
                this.columnPaidInFullInd = base.Columns["PaidInFullInd"];
                this.columnPaidInFullDate = base.Columns["PaidInFullDate"];
                this.columnComments = base.Columns["Comments"];
                this.columnInvoiceStatus = base.Columns["InvoiceStatus"];
                this.columnPrintedInd = base.Columns["PrintedInd"];
                this.columnDatePrinted = base.Columns["DatePrinted"];
                this.columnCreditMemoInd = base.Columns["CreditMemoInd"];
                this.columnCreditedOutInd = base.Columns["CreditedOutInd"];
                this.columnCreditMemoID = base.Columns["CreditMemoID"];
                this.columnExportedInd = base.Columns["ExportedInd"];
                this.columnDateExported = base.Columns["DateExported"];
                this.columnCreationDate = base.Columns["CreationDate"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnUpdatedDate = base.Columns["UpdatedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnCreditedOutBy = base.Columns["CreditedOutBy"];
                this.columnStorageCharges = base.Columns["StorageCharges"];
                this.columnDATBillingID = base.Columns["DATBillingID"];
                this.columnDATBillingPercentage = base.Columns["DATBillingPercentage"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnBillingID = new global::System.Data.DataColumn("BillingID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillingID);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnOutsideCarrierInvoiceInd = new global::System.Data.DataColumn("OutsideCarrierInvoiceInd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutsideCarrierInvoiceInd);
                this.columnOutsideCarrierID = new global::System.Data.DataColumn("OutsideCarrierID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutsideCarrierID);
                this.columnRunID = new global::System.Data.DataColumn("RunID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunID);
                this.columnInvoiceDate = new global::System.Data.DataColumn("InvoiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceDate);
                this.columnInvoiceNumber = new global::System.Data.DataColumn("InvoiceNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNumber);
                this.columnInvoiceType = new global::System.Data.DataColumn("InvoiceType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceType);
                this.columnPaymentMethod = new global::System.Data.DataColumn("PaymentMethod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentMethod);
                this.columnTransportCharges = new global::System.Data.DataColumn("TransportCharges", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransportCharges);
                this.columnFuelSurchargeRate = new global::System.Data.DataColumn("FuelSurchargeRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFuelSurchargeRate);
                this.columnFuelSurchargeRateOverrideInd = new global::System.Data.DataColumn("FuelSurchargeRateOverrideInd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFuelSurchargeRateOverrideInd);
                this.columnFuelSurcharge = new global::System.Data.DataColumn("FuelSurcharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFuelSurcharge);
                this.columnFuelSurchargeOverrideInd = new global::System.Data.DataColumn("FuelSurchargeOverrideInd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFuelSurchargeOverrideInd);
                this.columnOtherCharge1 = new global::System.Data.DataColumn("OtherCharge1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherCharge1);
                this.columnOtherCharge1Description = new global::System.Data.DataColumn("OtherCharge1Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherCharge1Description);
                this.columnOtherCharge2 = new global::System.Data.DataColumn("OtherCharge2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherCharge2);
                this.columnOtherCharge2Description = new global::System.Data.DataColumn("OtherCharge2Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherCharge2Description);
                this.columnOtherCharge3 = new global::System.Data.DataColumn("OtherCharge3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherCharge3);
                this.columnOtherCharge3Description = new global::System.Data.DataColumn("OtherCharge3Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherCharge3Description);
                this.columnOtherCharge4 = new global::System.Data.DataColumn("OtherCharge4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherCharge4);
                this.columnOtherCharge4Description = new global::System.Data.DataColumn("OtherCharge4Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherCharge4Description);
                this.columnInvoiceAmount = new global::System.Data.DataColumn("InvoiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceAmount);
                this.columnAmountPaid = new global::System.Data.DataColumn("AmountPaid", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountPaid);
                this.columnCreditsIssued = new global::System.Data.DataColumn("CreditsIssued", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditsIssued);
                this.columnBalanceDue = new global::System.Data.DataColumn("BalanceDue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalanceDue);
                this.columnDueToOutsideCarriers = new global::System.Data.DataColumn("DueToOutsideCarriers", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDueToOutsideCarriers);
                this.columnDueFromOutsideCarriers = new global::System.Data.DataColumn("DueFromOutsideCarriers", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDueFromOutsideCarriers);
                this.columnPaidInFullInd = new global::System.Data.DataColumn("PaidInFullInd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidInFullInd);
                this.columnPaidInFullDate = new global::System.Data.DataColumn("PaidInFullDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidInFullDate);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnInvoiceStatus = new global::System.Data.DataColumn("InvoiceStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceStatus);
                this.columnPrintedInd = new global::System.Data.DataColumn("PrintedInd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintedInd);
                this.columnDatePrinted = new global::System.Data.DataColumn("DatePrinted", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatePrinted);
                this.columnCreditMemoInd = new global::System.Data.DataColumn("CreditMemoInd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditMemoInd);
                this.columnCreditedOutInd = new global::System.Data.DataColumn("CreditedOutInd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditedOutInd);
                this.columnCreditMemoID = new global::System.Data.DataColumn("CreditMemoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditMemoID);
                this.columnExportedInd = new global::System.Data.DataColumn("ExportedInd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExportedInd);
                this.columnDateExported = new global::System.Data.DataColumn("DateExported", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateExported);
                this.columnCreationDate = new global::System.Data.DataColumn("CreationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreationDate);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnUpdatedDate = new global::System.Data.DataColumn("UpdatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnCreditedOutBy = new global::System.Data.DataColumn("CreditedOutBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditedOutBy);
                this.columnStorageCharges = new global::System.Data.DataColumn("StorageCharges", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageCharges);
                this.columnDATBillingID = new global::System.Data.DataColumn("DATBillingID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATBillingID);
                this.columnDATBillingPercentage = new global::System.Data.DataColumn("DATBillingPercentage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATBillingPercentage);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBillingID}, true));
                this.columnBillingID.AutoIncrement = true;
                this.columnBillingID.AutoIncrementSeed = -1;
                this.columnBillingID.AutoIncrementStep = -1;
                this.columnBillingID.AllowDBNull = false;
                this.columnBillingID.ReadOnly = true;
                this.columnBillingID.Unique = true;
                this.columnInvoiceNumber.MaxLength = 20;
                this.columnInvoiceType.MaxLength = 20;
                this.columnPaymentMethod.MaxLength = 20;
                this.columnOtherCharge1Description.MaxLength = 20;
                this.columnOtherCharge2Description.MaxLength = 20;
                this.columnOtherCharge3Description.MaxLength = 20;
                this.columnOtherCharge4Description.MaxLength = 20;
                this.columnComments.MaxLength = 1000;
                this.columnInvoiceStatus.MaxLength = 20;
                this.columnCreatedBy.MaxLength = 20;
                this.columnUpdatedBy.MaxLength = 20;
                this.columnCreditedOutBy.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BillingRow NewBillingRow() {
                return ((BillingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BillingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BillingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BillingRowChanged != null)) {
                    this.BillingRowChanged(this, new BillingRowChangeEvent(((BillingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BillingRowChanging != null)) {
                    this.BillingRowChanging(this, new BillingRowChangeEvent(((BillingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BillingRowDeleted != null)) {
                    this.BillingRowDeleted(this, new BillingRowChangeEvent(((BillingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BillingRowDeleting != null)) {
                    this.BillingRowDeleting(this, new BillingRowChangeEvent(((BillingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveBillingRow(BillingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutoExport_TestDataSet ds = new AutoExport_TestDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BillingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AEExporterRow : global::System.Data.DataRow {
            
            private AEExporterDataTable tableAEExporter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AEExporterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAEExporter = ((AEExporterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AEExporterID {
                get {
                    return ((int)(this[this.tableAEExporter.AEExporterIDColumn]));
                }
                set {
                    this[this.tableAEExporter.AEExporterIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExporterName {
                get {
                    try {
                        return ((string)(this[this.tableAEExporter.ExporterNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExporterName\' in table \'AEExporter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAEExporter.ExporterNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExporterShortName {
                get {
                    try {
                        return ((string)(this[this.tableAEExporter.ExporterShortNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExporterShortName\' in table \'AEExporter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAEExporter.ExporterShortNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ExporterAddressID {
                get {
                    try {
                        return ((int)(this[this.tableAEExporter.ExporterAddressIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExporterAddressID\' in table \'AEExporter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAEExporter.ExporterAddressIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Notes {
                get {
                    try {
                        return ((string)(this[this.tableAEExporter.NotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Notes\' in table \'AEExporter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAEExporter.NotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RecordStatus {
                get {
                    try {
                        return ((string)(this[this.tableAEExporter.RecordStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordStatus\' in table \'AEExporter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAEExporter.RecordStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAEExporter.CreationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreationDate\' in table \'AEExporter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAEExporter.CreationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CreatedBy {
                get {
                    try {
                        return ((string)(this[this.tableAEExporter.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'AEExporter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAEExporter.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAEExporter.UpdatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedDate\' in table \'AEExporter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAEExporter.UpdatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdatedBy {
                get {
                    try {
                        return ((string)(this[this.tableAEExporter.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'AEExporter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAEExporter.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AEFreightForwarderID {
                get {
                    try {
                        return ((int)(this[this.tableAEExporter.AEFreightForwarderIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AEFreightForwarderID\' in table \'AEExporter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAEExporter.AEFreightForwarderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerExporterCode {
                get {
                    try {
                        return ((string)(this[this.tableAEExporter.CustomerExporterCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerExporterCode\' in table \'AEExporter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAEExporter.CustomerExporterCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExporterNameNull() {
                return this.IsNull(this.tableAEExporter.ExporterNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExporterNameNull() {
                this[this.tableAEExporter.ExporterNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExporterShortNameNull() {
                return this.IsNull(this.tableAEExporter.ExporterShortNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExporterShortNameNull() {
                this[this.tableAEExporter.ExporterShortNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExporterAddressIDNull() {
                return this.IsNull(this.tableAEExporter.ExporterAddressIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExporterAddressIDNull() {
                this[this.tableAEExporter.ExporterAddressIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNotesNull() {
                return this.IsNull(this.tableAEExporter.NotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNotesNull() {
                this[this.tableAEExporter.NotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRecordStatusNull() {
                return this.IsNull(this.tableAEExporter.RecordStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRecordStatusNull() {
                this[this.tableAEExporter.RecordStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreationDateNull() {
                return this.IsNull(this.tableAEExporter.CreationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreationDateNull() {
                this[this.tableAEExporter.CreationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableAEExporter.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatedByNull() {
                this[this.tableAEExporter.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdatedDateNull() {
                return this.IsNull(this.tableAEExporter.UpdatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdatedDateNull() {
                this[this.tableAEExporter.UpdatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tableAEExporter.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdatedByNull() {
                this[this.tableAEExporter.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAEFreightForwarderIDNull() {
                return this.IsNull(this.tableAEExporter.AEFreightForwarderIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAEFreightForwarderIDNull() {
                this[this.tableAEExporter.AEFreightForwarderIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerExporterCodeNull() {
                return this.IsNull(this.tableAEExporter.CustomerExporterCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerExporterCodeNull() {
                this[this.tableAEExporter.CustomerExporterCodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AutoportExportVehiclesRow : global::System.Data.DataRow {
            
            private AutoportExportVehiclesDataTable tableAutoportExportVehicles;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AutoportExportVehiclesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAutoportExportVehicles = ((AutoportExportVehiclesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AutoportExportVehiclesID {
                get {
                    return ((int)(this[this.tableAutoportExportVehicles.AutoportExportVehiclesIDColumn]));
                }
                set {
                    this[this.tableAutoportExportVehicles.AutoportExportVehiclesIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CustomerID {
                get {
                    try {
                        return ((int)(this[this.tableAutoportExportVehicles.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VehicleYear {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.VehicleYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VehicleYear\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.VehicleYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Make {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.MakeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Make\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.MakeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Model {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.ModelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Model\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.ModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Bodystyle {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.BodystyleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bodystyle\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.BodystyleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VIN {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.VINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VIN\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.VINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Color {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.ColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Color\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.ColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VehicleLength {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.VehicleLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VehicleLength\' in table \'AutoportExportVehicles\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.VehicleLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VehicleWidth {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.VehicleWidthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VehicleWidth\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.VehicleWidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VehicleHeight {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.VehicleHeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VehicleHeight\' in table \'AutoportExportVehicles\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.VehicleHeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VehicleWeight {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.VehicleWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VehicleWeight\' in table \'AutoportExportVehicles\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.VehicleWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VehicleCubicFeet {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.VehicleCubicFeetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VehicleCubicFeet\' in table \'AutoportExportVehicles\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.VehicleCubicFeetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VehicleStatus {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.VehicleStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VehicleStatus\' in table \'AutoportExportVehicles\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.VehicleStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TitleNumber {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.TitleNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TitleNumber\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.TitleNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TitleState {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.TitleStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TitleState\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.TitleStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DestinationName {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.DestinationNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DestinationName\' in table \'AutoportExportVehicles\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.DestinationNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ExporterID {
                get {
                    try {
                        return ((int)(this[this.tableAutoportExportVehicles.ExporterIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExporterID\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.ExporterIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreightForwarderID {
                get {
                    try {
                        return ((int)(this[this.tableAutoportExportVehicles.FreightForwarderIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FreightForwarderID\' in table \'AutoportExportVehicles\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.FreightForwarderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VesselID {
                get {
                    try {
                        return ((int)(this[this.tableAutoportExportVehicles.VesselIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VesselID\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.VesselIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BookingNumber {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.BookingNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BookingNumber\' in table \'AutoportExportVehicles\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.BookingNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VoyageNumber {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.VoyageNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoyageNumber\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.VoyageNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerIdentification {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.CustomerIdentificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerIdentification\' in table \'AutoportExportVehicles\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.CustomerIdentificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SizeClass {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.SizeClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SizeClass\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.SizeClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BayLocation {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.BayLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BayLocation\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.BayLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EntryRate {
                get {
                    try {
                        return ((decimal)(this[this.tableAutoportExportVehicles.EntryRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EntryRate\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.EntryRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EntryRateOverrideInd {
                get {
                    try {
                        return ((int)(this[this.tableAutoportExportVehicles.EntryRateOverrideIndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EntryRateOverrideInd\' in table \'AutoportExportVehicles\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.EntryRateOverrideIndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PerDiemGraceDays {
                get {
                    try {
                        return ((int)(this[this.tableAutoportExportVehicles.PerDiemGraceDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerDiemGraceDays\' in table \'AutoportExportVehicles\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.PerDiemGraceDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PerDiemGraceDaysOverrideInd {
                get {
                    try {
                        return ((int)(this[this.tableAutoportExportVehicles.PerDiemGraceDaysOverrideIndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerDiemGraceDaysOverrideInd\' in table \'AutoportExportVehicl" +
                                "es\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.PerDiemGraceDaysOverrideIndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalCharge {
                get {
                    try {
                        return ((decimal)(this[this.tableAutoportExportVehicles.TotalChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalCharge\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.TotalChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateReceived {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAutoportExportVehicles.DateReceivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateReceived\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.DateReceivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ReceivedExceptionDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAutoportExportVehicles.ReceivedExceptionDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivedExceptionDate\' in table \'AutoportExportVehicles\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.ReceivedExceptionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateSubmittedCustoms {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAutoportExportVehicles.DateSubmittedCustomsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateSubmittedCustoms\' in table \'AutoportExportVehicles\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.DateSubmittedCustomsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CustomsExceptionDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAutoportExportVehicles.CustomsExceptionDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomsExceptionDate\' in table \'AutoportExportVehicles\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.CustomsExceptionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CustomsApprovedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAutoportExportVehicles.CustomsApprovedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomsApprovedDate\' in table \'AutoportExportVehicles\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.CustomsApprovedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateShipped {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAutoportExportVehicles.DateShippedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateShipped\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.DateShippedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BilledInd {
                get {
                    try {
                        return ((int)(this[this.tableAutoportExportVehicles.BilledIndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BilledInd\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.BilledIndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BillingID {
                get {
                    try {
                        return ((int)(this[this.tableAutoportExportVehicles.BillingIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillingID\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.BillingIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateBilled {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAutoportExportVehicles.DateBilledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateBilled\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.DateBilledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VINDecodedInd {
                get {
                    try {
                        return ((int)(this[this.tableAutoportExportVehicles.VINDecodedIndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VINDecodedInd\' in table \'AutoportExportVehicles\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.VINDecodedIndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Note {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.NoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Note\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.NoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RecordStatus {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.RecordStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordStatus\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.RecordStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAutoportExportVehicles.CreationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreationDate\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.CreationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CreatedBy {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAutoportExportVehicles.UpdatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedDate\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.UpdatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdatedBy {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CreditHoldInd {
                get {
                    try {
                        return ((int)(this[this.tableAutoportExportVehicles.CreditHoldIndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreditHoldInd\' in table \'AutoportExportVehicles\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.CreditHoldIndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CreditHoldBy {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.CreditHoldByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreditHoldBy\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.CreditHoldByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CustomsApprovalPrintedInd {
                get {
                    try {
                        return ((int)(this[this.tableAutoportExportVehicles.CustomsApprovalPrintedIndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomsApprovalPrintedInd\' in table \'AutoportExportVehicles" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.CustomsApprovalPrintedIndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VoyageID {
                get {
                    try {
                        return ((int)(this[this.tableAutoportExportVehicles.VoyageIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoyageID\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.VoyageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CustomsCoverSheetPrintedInd {
                get {
                    try {
                        return ((int)(this[this.tableAutoportExportVehicles.CustomsCoverSheetPrintedIndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomsCoverSheetPrintedInd\' in table \'AutoportExportVehicl" +
                                "es\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.CustomsCoverSheetPrintedIndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NoStartInd {
                get {
                    try {
                        return ((int)(this[this.tableAutoportExportVehicles.NoStartIndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoStartInd\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.NoStartIndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CustomsApprovalPrintedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAutoportExportVehicles.CustomsApprovalPrintedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomsApprovalPrintedDate\' in table \'AutoportExportVehicle" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.CustomsApprovalPrintedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ConsigneeID {
                get {
                    try {
                        return ((int)(this[this.tableAutoportExportVehicles.ConsigneeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsigneeID\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.ConsigneeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LastPhysicalDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAutoportExportVehicles.LastPhysicalDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastPhysicalDate\' in table \'AutoportExportVehicles\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.LastPhysicalDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int HasAudioSystemInd {
                get {
                    try {
                        return ((int)(this[this.tableAutoportExportVehicles.HasAudioSystemIndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HasAudioSystemInd\' in table \'AutoportExportVehicles\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.HasAudioSystemIndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int HasNavigationSystemInd {
                get {
                    try {
                        return ((int)(this[this.tableAutoportExportVehicles.HasNavigationSystemIndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HasNavigationSystemInd\' in table \'AutoportExportVehicles\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.HasNavigationSystemIndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TransshipPortName {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.TransshipPortNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransshipPortName\' in table \'AutoportExportVehicles\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.TransshipPortNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SpecialInstructions {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.SpecialInstructionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecialInstructions\' in table \'AutoportExportVehicles\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.SpecialInstructionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CustomsApprovedCoverSheetPrintedInd {
                get {
                    try {
                        return ((int)(this[this.tableAutoportExportVehicles.CustomsApprovedCoverSheetPrintedIndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomsApprovedCoverSheetPrintedInd\' in table \'AutoportExpo" +
                                "rtVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.CustomsApprovedCoverSheetPrintedIndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PortReceiptNumber {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.PortReceiptNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PortReceiptNumber\' in table \'AutoportExportVehicles\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.PortReceiptNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime VoyageChangeHoldDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAutoportExportVehicles.VoyageChangeHoldDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoyageChangeHoldDate\' in table \'AutoportExportVehicles\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.VoyageChangeHoldDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ReceivedBy {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.ReceivedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivedBy\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.ReceivedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LastPhysicalBy {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.LastPhysicalByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastPhysicalBy\' in table \'AutoportExportVehicles\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.LastPhysicalByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BarCodeLabelPrintedInd {
                get {
                    try {
                        return ((int)(this[this.tableAutoportExportVehicles.BarCodeLabelPrintedIndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BarCodeLabelPrintedInd\' in table \'AutoportExportVehicles\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.BarCodeLabelPrintedIndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VIVTagNumber {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.VIVTagNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VIVTagNumber\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.VIVTagNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime BarCodeLabelPrintedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAutoportExportVehicles.BarCodeLabelPrintedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BarCodeLabelPrintedDate\' in table \'AutoportExportVehicles\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.BarCodeLabelPrintedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MechanicalExceptionInd {
                get {
                    try {
                        return ((int)(this[this.tableAutoportExportVehicles.MechanicalExceptionIndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MechanicalExceptionInd\' in table \'AutoportExportVehicles\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.MechanicalExceptionIndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LeftBehindInd {
                get {
                    try {
                        return ((int)(this[this.tableAutoportExportVehicles.LeftBehindIndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeftBehindInd\' in table \'AutoportExportVehicles\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.LeftBehindIndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ITNNumber {
                get {
                    try {
                        return ((string)(this[this.tableAutoportExportVehicles.ITNNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ITNNumber\' in table \'AutoportExportVehicles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoportExportVehicles.ITNNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tableAutoportExportVehicles.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerIDNull() {
                this[this.tableAutoportExportVehicles.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVehicleYearNull() {
                return this.IsNull(this.tableAutoportExportVehicles.VehicleYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVehicleYearNull() {
                this[this.tableAutoportExportVehicles.VehicleYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMakeNull() {
                return this.IsNull(this.tableAutoportExportVehicles.MakeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMakeNull() {
                this[this.tableAutoportExportVehicles.MakeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModelNull() {
                return this.IsNull(this.tableAutoportExportVehicles.ModelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModelNull() {
                this[this.tableAutoportExportVehicles.ModelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBodystyleNull() {
                return this.IsNull(this.tableAutoportExportVehicles.BodystyleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBodystyleNull() {
                this[this.tableAutoportExportVehicles.BodystyleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVINNull() {
                return this.IsNull(this.tableAutoportExportVehicles.VINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVINNull() {
                this[this.tableAutoportExportVehicles.VINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsColorNull() {
                return this.IsNull(this.tableAutoportExportVehicles.ColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetColorNull() {
                this[this.tableAutoportExportVehicles.ColorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVehicleLengthNull() {
                return this.IsNull(this.tableAutoportExportVehicles.VehicleLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVehicleLengthNull() {
                this[this.tableAutoportExportVehicles.VehicleLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVehicleWidthNull() {
                return this.IsNull(this.tableAutoportExportVehicles.VehicleWidthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVehicleWidthNull() {
                this[this.tableAutoportExportVehicles.VehicleWidthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVehicleHeightNull() {
                return this.IsNull(this.tableAutoportExportVehicles.VehicleHeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVehicleHeightNull() {
                this[this.tableAutoportExportVehicles.VehicleHeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVehicleWeightNull() {
                return this.IsNull(this.tableAutoportExportVehicles.VehicleWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVehicleWeightNull() {
                this[this.tableAutoportExportVehicles.VehicleWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVehicleCubicFeetNull() {
                return this.IsNull(this.tableAutoportExportVehicles.VehicleCubicFeetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVehicleCubicFeetNull() {
                this[this.tableAutoportExportVehicles.VehicleCubicFeetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVehicleStatusNull() {
                return this.IsNull(this.tableAutoportExportVehicles.VehicleStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVehicleStatusNull() {
                this[this.tableAutoportExportVehicles.VehicleStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTitleNumberNull() {
                return this.IsNull(this.tableAutoportExportVehicles.TitleNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTitleNumberNull() {
                this[this.tableAutoportExportVehicles.TitleNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTitleStateNull() {
                return this.IsNull(this.tableAutoportExportVehicles.TitleStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTitleStateNull() {
                this[this.tableAutoportExportVehicles.TitleStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDestinationNameNull() {
                return this.IsNull(this.tableAutoportExportVehicles.DestinationNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDestinationNameNull() {
                this[this.tableAutoportExportVehicles.DestinationNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExporterIDNull() {
                return this.IsNull(this.tableAutoportExportVehicles.ExporterIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExporterIDNull() {
                this[this.tableAutoportExportVehicles.ExporterIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreightForwarderIDNull() {
                return this.IsNull(this.tableAutoportExportVehicles.FreightForwarderIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreightForwarderIDNull() {
                this[this.tableAutoportExportVehicles.FreightForwarderIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVesselIDNull() {
                return this.IsNull(this.tableAutoportExportVehicles.VesselIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVesselIDNull() {
                this[this.tableAutoportExportVehicles.VesselIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBookingNumberNull() {
                return this.IsNull(this.tableAutoportExportVehicles.BookingNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBookingNumberNull() {
                this[this.tableAutoportExportVehicles.BookingNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVoyageNumberNull() {
                return this.IsNull(this.tableAutoportExportVehicles.VoyageNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVoyageNumberNull() {
                this[this.tableAutoportExportVehicles.VoyageNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerIdentificationNull() {
                return this.IsNull(this.tableAutoportExportVehicles.CustomerIdentificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerIdentificationNull() {
                this[this.tableAutoportExportVehicles.CustomerIdentificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSizeClassNull() {
                return this.IsNull(this.tableAutoportExportVehicles.SizeClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSizeClassNull() {
                this[this.tableAutoportExportVehicles.SizeClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBayLocationNull() {
                return this.IsNull(this.tableAutoportExportVehicles.BayLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBayLocationNull() {
                this[this.tableAutoportExportVehicles.BayLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEntryRateNull() {
                return this.IsNull(this.tableAutoportExportVehicles.EntryRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEntryRateNull() {
                this[this.tableAutoportExportVehicles.EntryRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEntryRateOverrideIndNull() {
                return this.IsNull(this.tableAutoportExportVehicles.EntryRateOverrideIndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEntryRateOverrideIndNull() {
                this[this.tableAutoportExportVehicles.EntryRateOverrideIndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPerDiemGraceDaysNull() {
                return this.IsNull(this.tableAutoportExportVehicles.PerDiemGraceDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPerDiemGraceDaysNull() {
                this[this.tableAutoportExportVehicles.PerDiemGraceDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPerDiemGraceDaysOverrideIndNull() {
                return this.IsNull(this.tableAutoportExportVehicles.PerDiemGraceDaysOverrideIndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPerDiemGraceDaysOverrideIndNull() {
                this[this.tableAutoportExportVehicles.PerDiemGraceDaysOverrideIndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalChargeNull() {
                return this.IsNull(this.tableAutoportExportVehicles.TotalChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalChargeNull() {
                this[this.tableAutoportExportVehicles.TotalChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateReceivedNull() {
                return this.IsNull(this.tableAutoportExportVehicles.DateReceivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateReceivedNull() {
                this[this.tableAutoportExportVehicles.DateReceivedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReceivedExceptionDateNull() {
                return this.IsNull(this.tableAutoportExportVehicles.ReceivedExceptionDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReceivedExceptionDateNull() {
                this[this.tableAutoportExportVehicles.ReceivedExceptionDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateSubmittedCustomsNull() {
                return this.IsNull(this.tableAutoportExportVehicles.DateSubmittedCustomsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateSubmittedCustomsNull() {
                this[this.tableAutoportExportVehicles.DateSubmittedCustomsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomsExceptionDateNull() {
                return this.IsNull(this.tableAutoportExportVehicles.CustomsExceptionDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomsExceptionDateNull() {
                this[this.tableAutoportExportVehicles.CustomsExceptionDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomsApprovedDateNull() {
                return this.IsNull(this.tableAutoportExportVehicles.CustomsApprovedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomsApprovedDateNull() {
                this[this.tableAutoportExportVehicles.CustomsApprovedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateShippedNull() {
                return this.IsNull(this.tableAutoportExportVehicles.DateShippedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateShippedNull() {
                this[this.tableAutoportExportVehicles.DateShippedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBilledIndNull() {
                return this.IsNull(this.tableAutoportExportVehicles.BilledIndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBilledIndNull() {
                this[this.tableAutoportExportVehicles.BilledIndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBillingIDNull() {
                return this.IsNull(this.tableAutoportExportVehicles.BillingIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBillingIDNull() {
                this[this.tableAutoportExportVehicles.BillingIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateBilledNull() {
                return this.IsNull(this.tableAutoportExportVehicles.DateBilledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateBilledNull() {
                this[this.tableAutoportExportVehicles.DateBilledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVINDecodedIndNull() {
                return this.IsNull(this.tableAutoportExportVehicles.VINDecodedIndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVINDecodedIndNull() {
                this[this.tableAutoportExportVehicles.VINDecodedIndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNoteNull() {
                return this.IsNull(this.tableAutoportExportVehicles.NoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNoteNull() {
                this[this.tableAutoportExportVehicles.NoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRecordStatusNull() {
                return this.IsNull(this.tableAutoportExportVehicles.RecordStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRecordStatusNull() {
                this[this.tableAutoportExportVehicles.RecordStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreationDateNull() {
                return this.IsNull(this.tableAutoportExportVehicles.CreationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreationDateNull() {
                this[this.tableAutoportExportVehicles.CreationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableAutoportExportVehicles.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatedByNull() {
                this[this.tableAutoportExportVehicles.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdatedDateNull() {
                return this.IsNull(this.tableAutoportExportVehicles.UpdatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdatedDateNull() {
                this[this.tableAutoportExportVehicles.UpdatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tableAutoportExportVehicles.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdatedByNull() {
                this[this.tableAutoportExportVehicles.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreditHoldIndNull() {
                return this.IsNull(this.tableAutoportExportVehicles.CreditHoldIndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreditHoldIndNull() {
                this[this.tableAutoportExportVehicles.CreditHoldIndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreditHoldByNull() {
                return this.IsNull(this.tableAutoportExportVehicles.CreditHoldByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreditHoldByNull() {
                this[this.tableAutoportExportVehicles.CreditHoldByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomsApprovalPrintedIndNull() {
                return this.IsNull(this.tableAutoportExportVehicles.CustomsApprovalPrintedIndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomsApprovalPrintedIndNull() {
                this[this.tableAutoportExportVehicles.CustomsApprovalPrintedIndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVoyageIDNull() {
                return this.IsNull(this.tableAutoportExportVehicles.VoyageIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVoyageIDNull() {
                this[this.tableAutoportExportVehicles.VoyageIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomsCoverSheetPrintedIndNull() {
                return this.IsNull(this.tableAutoportExportVehicles.CustomsCoverSheetPrintedIndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomsCoverSheetPrintedIndNull() {
                this[this.tableAutoportExportVehicles.CustomsCoverSheetPrintedIndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNoStartIndNull() {
                return this.IsNull(this.tableAutoportExportVehicles.NoStartIndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNoStartIndNull() {
                this[this.tableAutoportExportVehicles.NoStartIndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomsApprovalPrintedDateNull() {
                return this.IsNull(this.tableAutoportExportVehicles.CustomsApprovalPrintedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomsApprovalPrintedDateNull() {
                this[this.tableAutoportExportVehicles.CustomsApprovalPrintedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConsigneeIDNull() {
                return this.IsNull(this.tableAutoportExportVehicles.ConsigneeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConsigneeIDNull() {
                this[this.tableAutoportExportVehicles.ConsigneeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastPhysicalDateNull() {
                return this.IsNull(this.tableAutoportExportVehicles.LastPhysicalDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastPhysicalDateNull() {
                this[this.tableAutoportExportVehicles.LastPhysicalDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHasAudioSystemIndNull() {
                return this.IsNull(this.tableAutoportExportVehicles.HasAudioSystemIndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHasAudioSystemIndNull() {
                this[this.tableAutoportExportVehicles.HasAudioSystemIndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHasNavigationSystemIndNull() {
                return this.IsNull(this.tableAutoportExportVehicles.HasNavigationSystemIndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHasNavigationSystemIndNull() {
                this[this.tableAutoportExportVehicles.HasNavigationSystemIndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransshipPortNameNull() {
                return this.IsNull(this.tableAutoportExportVehicles.TransshipPortNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransshipPortNameNull() {
                this[this.tableAutoportExportVehicles.TransshipPortNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpecialInstructionsNull() {
                return this.IsNull(this.tableAutoportExportVehicles.SpecialInstructionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpecialInstructionsNull() {
                this[this.tableAutoportExportVehicles.SpecialInstructionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomsApprovedCoverSheetPrintedIndNull() {
                return this.IsNull(this.tableAutoportExportVehicles.CustomsApprovedCoverSheetPrintedIndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomsApprovedCoverSheetPrintedIndNull() {
                this[this.tableAutoportExportVehicles.CustomsApprovedCoverSheetPrintedIndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPortReceiptNumberNull() {
                return this.IsNull(this.tableAutoportExportVehicles.PortReceiptNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPortReceiptNumberNull() {
                this[this.tableAutoportExportVehicles.PortReceiptNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVoyageChangeHoldDateNull() {
                return this.IsNull(this.tableAutoportExportVehicles.VoyageChangeHoldDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVoyageChangeHoldDateNull() {
                this[this.tableAutoportExportVehicles.VoyageChangeHoldDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReceivedByNull() {
                return this.IsNull(this.tableAutoportExportVehicles.ReceivedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReceivedByNull() {
                this[this.tableAutoportExportVehicles.ReceivedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastPhysicalByNull() {
                return this.IsNull(this.tableAutoportExportVehicles.LastPhysicalByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastPhysicalByNull() {
                this[this.tableAutoportExportVehicles.LastPhysicalByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBarCodeLabelPrintedIndNull() {
                return this.IsNull(this.tableAutoportExportVehicles.BarCodeLabelPrintedIndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBarCodeLabelPrintedIndNull() {
                this[this.tableAutoportExportVehicles.BarCodeLabelPrintedIndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVIVTagNumberNull() {
                return this.IsNull(this.tableAutoportExportVehicles.VIVTagNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVIVTagNumberNull() {
                this[this.tableAutoportExportVehicles.VIVTagNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBarCodeLabelPrintedDateNull() {
                return this.IsNull(this.tableAutoportExportVehicles.BarCodeLabelPrintedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBarCodeLabelPrintedDateNull() {
                this[this.tableAutoportExportVehicles.BarCodeLabelPrintedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMechanicalExceptionIndNull() {
                return this.IsNull(this.tableAutoportExportVehicles.MechanicalExceptionIndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMechanicalExceptionIndNull() {
                this[this.tableAutoportExportVehicles.MechanicalExceptionIndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLeftBehindIndNull() {
                return this.IsNull(this.tableAutoportExportVehicles.LeftBehindIndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLeftBehindIndNull() {
                this[this.tableAutoportExportVehicles.LeftBehindIndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsITNNumberNull() {
                return this.IsNull(this.tableAutoportExportVehicles.ITNNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetITNNumberNull() {
                this[this.tableAutoportExportVehicles.ITNNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BillingRow : global::System.Data.DataRow {
            
            private BillingDataTable tableBilling;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BillingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBilling = ((BillingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BillingID {
                get {
                    return ((int)(this[this.tableBilling.BillingIDColumn]));
                }
                set {
                    this[this.tableBilling.BillingIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CustomerID {
                get {
                    try {
                        return ((int)(this[this.tableBilling.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OutsideCarrierInvoiceInd {
                get {
                    try {
                        return ((int)(this[this.tableBilling.OutsideCarrierInvoiceIndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutsideCarrierInvoiceInd\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.OutsideCarrierInvoiceIndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OutsideCarrierID {
                get {
                    try {
                        return ((int)(this[this.tableBilling.OutsideCarrierIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutsideCarrierID\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.OutsideCarrierIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RunID {
                get {
                    try {
                        return ((int)(this[this.tableBilling.RunIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RunID\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.RunIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InvoiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBilling.InvoiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceDate\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.InvoiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceNumber {
                get {
                    try {
                        return ((string)(this[this.tableBilling.InvoiceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceNumber\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.InvoiceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceType {
                get {
                    try {
                        return ((string)(this[this.tableBilling.InvoiceTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceType\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.InvoiceTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PaymentMethod {
                get {
                    try {
                        return ((string)(this[this.tableBilling.PaymentMethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentMethod\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.PaymentMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TransportCharges {
                get {
                    try {
                        return ((decimal)(this[this.tableBilling.TransportChargesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransportCharges\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.TransportChargesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FuelSurchargeRate {
                get {
                    try {
                        return ((decimal)(this[this.tableBilling.FuelSurchargeRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FuelSurchargeRate\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.FuelSurchargeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FuelSurchargeRateOverrideInd {
                get {
                    try {
                        return ((int)(this[this.tableBilling.FuelSurchargeRateOverrideIndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FuelSurchargeRateOverrideInd\' in table \'Billing\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableBilling.FuelSurchargeRateOverrideIndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FuelSurcharge {
                get {
                    try {
                        return ((decimal)(this[this.tableBilling.FuelSurchargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FuelSurcharge\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.FuelSurchargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FuelSurchargeOverrideInd {
                get {
                    try {
                        return ((int)(this[this.tableBilling.FuelSurchargeOverrideIndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FuelSurchargeOverrideInd\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.FuelSurchargeOverrideIndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OtherCharge1 {
                get {
                    try {
                        return ((decimal)(this[this.tableBilling.OtherCharge1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherCharge1\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.OtherCharge1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OtherCharge1Description {
                get {
                    try {
                        return ((string)(this[this.tableBilling.OtherCharge1DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherCharge1Description\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.OtherCharge1DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OtherCharge2 {
                get {
                    try {
                        return ((decimal)(this[this.tableBilling.OtherCharge2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherCharge2\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.OtherCharge2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OtherCharge2Description {
                get {
                    try {
                        return ((string)(this[this.tableBilling.OtherCharge2DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherCharge2Description\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.OtherCharge2DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OtherCharge3 {
                get {
                    try {
                        return ((decimal)(this[this.tableBilling.OtherCharge3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherCharge3\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.OtherCharge3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OtherCharge3Description {
                get {
                    try {
                        return ((string)(this[this.tableBilling.OtherCharge3DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherCharge3Description\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.OtherCharge3DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OtherCharge4 {
                get {
                    try {
                        return ((decimal)(this[this.tableBilling.OtherCharge4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherCharge4\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.OtherCharge4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OtherCharge4Description {
                get {
                    try {
                        return ((string)(this[this.tableBilling.OtherCharge4DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherCharge4Description\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.OtherCharge4DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal InvoiceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableBilling.InvoiceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceAmount\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.InvoiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AmountPaid {
                get {
                    try {
                        return ((decimal)(this[this.tableBilling.AmountPaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountPaid\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.AmountPaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CreditsIssued {
                get {
                    try {
                        return ((decimal)(this[this.tableBilling.CreditsIssuedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreditsIssued\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.CreditsIssuedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BalanceDue {
                get {
                    try {
                        return ((decimal)(this[this.tableBilling.BalanceDueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BalanceDue\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.BalanceDueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DueToOutsideCarriers {
                get {
                    try {
                        return ((decimal)(this[this.tableBilling.DueToOutsideCarriersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DueToOutsideCarriers\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.DueToOutsideCarriersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DueFromOutsideCarriers {
                get {
                    try {
                        return ((decimal)(this[this.tableBilling.DueFromOutsideCarriersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DueFromOutsideCarriers\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.DueFromOutsideCarriersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PaidInFullInd {
                get {
                    try {
                        return ((int)(this[this.tableBilling.PaidInFullIndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidInFullInd\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.PaidInFullIndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PaidInFullDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBilling.PaidInFullDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidInFullDate\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.PaidInFullDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableBilling.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceStatus {
                get {
                    try {
                        return ((string)(this[this.tableBilling.InvoiceStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceStatus\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.InvoiceStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PrintedInd {
                get {
                    try {
                        return ((int)(this[this.tableBilling.PrintedIndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrintedInd\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.PrintedIndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DatePrinted {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBilling.DatePrintedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DatePrinted\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.DatePrintedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CreditMemoInd {
                get {
                    try {
                        return ((int)(this[this.tableBilling.CreditMemoIndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreditMemoInd\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.CreditMemoIndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CreditedOutInd {
                get {
                    try {
                        return ((int)(this[this.tableBilling.CreditedOutIndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreditedOutInd\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.CreditedOutIndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CreditMemoID {
                get {
                    try {
                        return ((int)(this[this.tableBilling.CreditMemoIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreditMemoID\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.CreditMemoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ExportedInd {
                get {
                    try {
                        return ((int)(this[this.tableBilling.ExportedIndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExportedInd\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.ExportedIndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateExported {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBilling.DateExportedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateExported\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.DateExportedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBilling.CreationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreationDate\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.CreationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CreatedBy {
                get {
                    try {
                        return ((string)(this[this.tableBilling.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBilling.UpdatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedDate\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.UpdatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdatedBy {
                get {
                    try {
                        return ((string)(this[this.tableBilling.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CreditedOutBy {
                get {
                    try {
                        return ((string)(this[this.tableBilling.CreditedOutByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreditedOutBy\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.CreditedOutByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal StorageCharges {
                get {
                    try {
                        return ((decimal)(this[this.tableBilling.StorageChargesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StorageCharges\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.StorageChargesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DATBillingID {
                get {
                    try {
                        return ((int)(this[this.tableBilling.DATBillingIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATBillingID\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.DATBillingIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DATBillingPercentage {
                get {
                    try {
                        return ((decimal)(this[this.tableBilling.DATBillingPercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATBillingPercentage\' in table \'Billing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBilling.DATBillingPercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tableBilling.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerIDNull() {
                this[this.tableBilling.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutsideCarrierInvoiceIndNull() {
                return this.IsNull(this.tableBilling.OutsideCarrierInvoiceIndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutsideCarrierInvoiceIndNull() {
                this[this.tableBilling.OutsideCarrierInvoiceIndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutsideCarrierIDNull() {
                return this.IsNull(this.tableBilling.OutsideCarrierIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutsideCarrierIDNull() {
                this[this.tableBilling.OutsideCarrierIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRunIDNull() {
                return this.IsNull(this.tableBilling.RunIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRunIDNull() {
                this[this.tableBilling.RunIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceDateNull() {
                return this.IsNull(this.tableBilling.InvoiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceDateNull() {
                this[this.tableBilling.InvoiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceNumberNull() {
                return this.IsNull(this.tableBilling.InvoiceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceNumberNull() {
                this[this.tableBilling.InvoiceNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceTypeNull() {
                return this.IsNull(this.tableBilling.InvoiceTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceTypeNull() {
                this[this.tableBilling.InvoiceTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaymentMethodNull() {
                return this.IsNull(this.tableBilling.PaymentMethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaymentMethodNull() {
                this[this.tableBilling.PaymentMethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransportChargesNull() {
                return this.IsNull(this.tableBilling.TransportChargesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransportChargesNull() {
                this[this.tableBilling.TransportChargesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFuelSurchargeRateNull() {
                return this.IsNull(this.tableBilling.FuelSurchargeRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFuelSurchargeRateNull() {
                this[this.tableBilling.FuelSurchargeRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFuelSurchargeRateOverrideIndNull() {
                return this.IsNull(this.tableBilling.FuelSurchargeRateOverrideIndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFuelSurchargeRateOverrideIndNull() {
                this[this.tableBilling.FuelSurchargeRateOverrideIndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFuelSurchargeNull() {
                return this.IsNull(this.tableBilling.FuelSurchargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFuelSurchargeNull() {
                this[this.tableBilling.FuelSurchargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFuelSurchargeOverrideIndNull() {
                return this.IsNull(this.tableBilling.FuelSurchargeOverrideIndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFuelSurchargeOverrideIndNull() {
                this[this.tableBilling.FuelSurchargeOverrideIndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherCharge1Null() {
                return this.IsNull(this.tableBilling.OtherCharge1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherCharge1Null() {
                this[this.tableBilling.OtherCharge1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherCharge1DescriptionNull() {
                return this.IsNull(this.tableBilling.OtherCharge1DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherCharge1DescriptionNull() {
                this[this.tableBilling.OtherCharge1DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherCharge2Null() {
                return this.IsNull(this.tableBilling.OtherCharge2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherCharge2Null() {
                this[this.tableBilling.OtherCharge2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherCharge2DescriptionNull() {
                return this.IsNull(this.tableBilling.OtherCharge2DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherCharge2DescriptionNull() {
                this[this.tableBilling.OtherCharge2DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherCharge3Null() {
                return this.IsNull(this.tableBilling.OtherCharge3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherCharge3Null() {
                this[this.tableBilling.OtherCharge3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherCharge3DescriptionNull() {
                return this.IsNull(this.tableBilling.OtherCharge3DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherCharge3DescriptionNull() {
                this[this.tableBilling.OtherCharge3DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherCharge4Null() {
                return this.IsNull(this.tableBilling.OtherCharge4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherCharge4Null() {
                this[this.tableBilling.OtherCharge4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherCharge4DescriptionNull() {
                return this.IsNull(this.tableBilling.OtherCharge4DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherCharge4DescriptionNull() {
                this[this.tableBilling.OtherCharge4DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceAmountNull() {
                return this.IsNull(this.tableBilling.InvoiceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceAmountNull() {
                this[this.tableBilling.InvoiceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAmountPaidNull() {
                return this.IsNull(this.tableBilling.AmountPaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAmountPaidNull() {
                this[this.tableBilling.AmountPaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreditsIssuedNull() {
                return this.IsNull(this.tableBilling.CreditsIssuedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreditsIssuedNull() {
                this[this.tableBilling.CreditsIssuedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBalanceDueNull() {
                return this.IsNull(this.tableBilling.BalanceDueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBalanceDueNull() {
                this[this.tableBilling.BalanceDueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDueToOutsideCarriersNull() {
                return this.IsNull(this.tableBilling.DueToOutsideCarriersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDueToOutsideCarriersNull() {
                this[this.tableBilling.DueToOutsideCarriersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDueFromOutsideCarriersNull() {
                return this.IsNull(this.tableBilling.DueFromOutsideCarriersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDueFromOutsideCarriersNull() {
                this[this.tableBilling.DueFromOutsideCarriersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaidInFullIndNull() {
                return this.IsNull(this.tableBilling.PaidInFullIndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaidInFullIndNull() {
                this[this.tableBilling.PaidInFullIndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaidInFullDateNull() {
                return this.IsNull(this.tableBilling.PaidInFullDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaidInFullDateNull() {
                this[this.tableBilling.PaidInFullDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableBilling.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommentsNull() {
                this[this.tableBilling.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceStatusNull() {
                return this.IsNull(this.tableBilling.InvoiceStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceStatusNull() {
                this[this.tableBilling.InvoiceStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrintedIndNull() {
                return this.IsNull(this.tableBilling.PrintedIndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrintedIndNull() {
                this[this.tableBilling.PrintedIndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDatePrintedNull() {
                return this.IsNull(this.tableBilling.DatePrintedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDatePrintedNull() {
                this[this.tableBilling.DatePrintedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreditMemoIndNull() {
                return this.IsNull(this.tableBilling.CreditMemoIndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreditMemoIndNull() {
                this[this.tableBilling.CreditMemoIndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreditedOutIndNull() {
                return this.IsNull(this.tableBilling.CreditedOutIndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreditedOutIndNull() {
                this[this.tableBilling.CreditedOutIndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreditMemoIDNull() {
                return this.IsNull(this.tableBilling.CreditMemoIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreditMemoIDNull() {
                this[this.tableBilling.CreditMemoIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExportedIndNull() {
                return this.IsNull(this.tableBilling.ExportedIndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExportedIndNull() {
                this[this.tableBilling.ExportedIndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateExportedNull() {
                return this.IsNull(this.tableBilling.DateExportedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateExportedNull() {
                this[this.tableBilling.DateExportedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreationDateNull() {
                return this.IsNull(this.tableBilling.CreationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreationDateNull() {
                this[this.tableBilling.CreationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableBilling.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatedByNull() {
                this[this.tableBilling.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdatedDateNull() {
                return this.IsNull(this.tableBilling.UpdatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdatedDateNull() {
                this[this.tableBilling.UpdatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tableBilling.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdatedByNull() {
                this[this.tableBilling.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreditedOutByNull() {
                return this.IsNull(this.tableBilling.CreditedOutByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreditedOutByNull() {
                this[this.tableBilling.CreditedOutByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStorageChargesNull() {
                return this.IsNull(this.tableBilling.StorageChargesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStorageChargesNull() {
                this[this.tableBilling.StorageChargesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDATBillingIDNull() {
                return this.IsNull(this.tableBilling.DATBillingIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDATBillingIDNull() {
                this[this.tableBilling.DATBillingIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDATBillingPercentageNull() {
                return this.IsNull(this.tableBilling.DATBillingPercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDATBillingPercentageNull() {
                this[this.tableBilling.DATBillingPercentageColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AEExporterRowChangeEvent : global::System.EventArgs {
            
            private AEExporterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AEExporterRowChangeEvent(AEExporterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AEExporterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AutoportExportVehiclesRowChangeEvent : global::System.EventArgs {
            
            private AutoportExportVehiclesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AutoportExportVehiclesRowChangeEvent(AutoportExportVehiclesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AutoportExportVehiclesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class BillingRowChangeEvent : global::System.EventArgs {
            
            private BillingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BillingRowChangeEvent(BillingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BillingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace AutoExport.AutoExport_TestDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AEExporterTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AEExporterTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AEExporter";
            tableMapping.ColumnMappings.Add("AEExporterID", "AEExporterID");
            tableMapping.ColumnMappings.Add("ExporterName", "ExporterName");
            tableMapping.ColumnMappings.Add("ExporterShortName", "ExporterShortName");
            tableMapping.ColumnMappings.Add("ExporterAddressID", "ExporterAddressID");
            tableMapping.ColumnMappings.Add("Notes", "Notes");
            tableMapping.ColumnMappings.Add("RecordStatus", "RecordStatus");
            tableMapping.ColumnMappings.Add("CreationDate", "CreationDate");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("UpdatedDate", "UpdatedDate");
            tableMapping.ColumnMappings.Add("UpdatedBy", "UpdatedBy");
            tableMapping.ColumnMappings.Add("AEFreightForwarderID", "AEFreightForwarderID");
            tableMapping.ColumnMappings.Add("CustomerExporterCode", "CustomerExporterCode");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[AEExporter] WHERE (([AEExporterID] = @Original_AEExporterID) AND ((@IsNull_ExporterName = 1 AND [ExporterName] IS NULL) OR ([ExporterName] = @Original_ExporterName)) AND ((@IsNull_ExporterShortName = 1 AND [ExporterShortName] IS NULL) OR ([ExporterShortName] = @Original_ExporterShortName)) AND ((@IsNull_ExporterAddressID = 1 AND [ExporterAddressID] IS NULL) OR ([ExporterAddressID] = @Original_ExporterAddressID)) AND ((@IsNull_Notes = 1 AND [Notes] IS NULL) OR ([Notes] = @Original_Notes)) AND ((@IsNull_RecordStatus = 1 AND [RecordStatus] IS NULL) OR ([RecordStatus] = @Original_RecordStatus)) AND ((@IsNull_CreationDate = 1 AND [CreationDate] IS NULL) OR ([CreationDate] = @Original_CreationDate)) AND ((@IsNull_CreatedBy = 1 AND [CreatedBy] IS NULL) OR ([CreatedBy] = @Original_CreatedBy)) AND ((@IsNull_UpdatedDate = 1 AND [UpdatedDate] IS NULL) OR ([UpdatedDate] = @Original_UpdatedDate)) AND ((@IsNull_UpdatedBy = 1 AND [UpdatedBy] IS NULL) OR ([UpdatedBy] = @Original_UpdatedBy)) AND ((@IsNull_AEFreightForwarderID = 1 AND [AEFreightForwarderID] IS NULL) OR ([AEFreightForwarderID] = @Original_AEFreightForwarderID)) AND ((@IsNull_CustomerExporterCode = 1 AND [CustomerExporterCode] IS NULL) OR ([CustomerExporterCode] = @Original_CustomerExporterCode)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AEExporterID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AEExporterID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExporterName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExporterName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExporterName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExporterName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExporterShortName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExporterShortName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExporterShortName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExporterShortName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExporterAddressID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExporterAddressID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExporterAddressID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExporterAddressID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Notes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Notes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RecordStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreationDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UpdatedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UpdatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AEFreightForwarderID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AEFreightForwarderID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AEFreightForwarderID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AEFreightForwarderID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomerExporterCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerExporterCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerExporterCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerExporterCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[AEExporter] ([ExporterName], [ExporterShortName], [ExporterAddressID], [Notes], [RecordStatus], [CreationDate], [CreatedBy], [UpdatedDate], [UpdatedBy], [AEFreightForwarderID], [CustomerExporterCode]) VALUES (@ExporterName, @ExporterShortName, @ExporterAddressID, @Notes, @RecordStatus, @CreationDate, @CreatedBy, @UpdatedDate, @UpdatedBy, @AEFreightForwarderID, @CustomerExporterCode);
SELECT AEExporterID, ExporterName, ExporterShortName, ExporterAddressID, Notes, RecordStatus, CreationDate, CreatedBy, UpdatedDate, UpdatedBy, AEFreightForwarderID, CustomerExporterCode FROM AEExporter WHERE (AEExporterID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExporterName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExporterName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExporterShortName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExporterShortName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExporterAddressID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExporterAddressID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Notes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AEFreightForwarderID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AEFreightForwarderID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerExporterCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerExporterCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[AEExporter] SET [ExporterName] = @ExporterName, [ExporterShortName]" +
                " = @ExporterShortName, [ExporterAddressID] = @ExporterAddressID, [Notes] = @Note" +
                "s, [RecordStatus] = @RecordStatus, [CreationDate] = @CreationDate, [CreatedBy] =" +
                " @CreatedBy, [UpdatedDate] = @UpdatedDate, [UpdatedBy] = @UpdatedBy, [AEFreightF" +
                "orwarderID] = @AEFreightForwarderID, [CustomerExporterCode] = @CustomerExporterC" +
                "ode WHERE (([AEExporterID] = @Original_AEExporterID) AND ((@IsNull_ExporterName " +
                "= 1 AND [ExporterName] IS NULL) OR ([ExporterName] = @Original_ExporterName)) AN" +
                "D ((@IsNull_ExporterShortName = 1 AND [ExporterShortName] IS NULL) OR ([Exporter" +
                "ShortName] = @Original_ExporterShortName)) AND ((@IsNull_ExporterAddressID = 1 A" +
                "ND [ExporterAddressID] IS NULL) OR ([ExporterAddressID] = @Original_ExporterAddr" +
                "essID)) AND ((@IsNull_Notes = 1 AND [Notes] IS NULL) OR ([Notes] = @Original_Not" +
                "es)) AND ((@IsNull_RecordStatus = 1 AND [RecordStatus] IS NULL) OR ([RecordStatu" +
                "s] = @Original_RecordStatus)) AND ((@IsNull_CreationDate = 1 AND [CreationDate] " +
                "IS NULL) OR ([CreationDate] = @Original_CreationDate)) AND ((@IsNull_CreatedBy =" +
                " 1 AND [CreatedBy] IS NULL) OR ([CreatedBy] = @Original_CreatedBy)) AND ((@IsNul" +
                "l_UpdatedDate = 1 AND [UpdatedDate] IS NULL) OR ([UpdatedDate] = @Original_Updat" +
                "edDate)) AND ((@IsNull_UpdatedBy = 1 AND [UpdatedBy] IS NULL) OR ([UpdatedBy] = " +
                "@Original_UpdatedBy)) AND ((@IsNull_AEFreightForwarderID = 1 AND [AEFreightForwa" +
                "rderID] IS NULL) OR ([AEFreightForwarderID] = @Original_AEFreightForwarderID)) A" +
                "ND ((@IsNull_CustomerExporterCode = 1 AND [CustomerExporterCode] IS NULL) OR ([C" +
                "ustomerExporterCode] = @Original_CustomerExporterCode)));\r\nSELECT AEExporterID, " +
                "ExporterName, ExporterShortName, ExporterAddressID, Notes, RecordStatus, Creatio" +
                "nDate, CreatedBy, UpdatedDate, UpdatedBy, AEFreightForwarderID, CustomerExporter" +
                "Code FROM AEExporter WHERE (AEExporterID = @AEExporterID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExporterName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExporterName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExporterShortName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExporterShortName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExporterAddressID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExporterAddressID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Notes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AEFreightForwarderID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AEFreightForwarderID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerExporterCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerExporterCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AEExporterID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AEExporterID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExporterName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExporterName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExporterName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExporterName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExporterShortName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExporterShortName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExporterShortName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExporterShortName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExporterAddressID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExporterAddressID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExporterAddressID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExporterAddressID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Notes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Notes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RecordStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreationDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UpdatedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UpdatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AEFreightForwarderID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AEFreightForwarderID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AEFreightForwarderID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AEFreightForwarderID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomerExporterCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerExporterCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerExporterCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerExporterCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AEExporterID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AEExporterID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutoExport.Properties.Settings.Default.AutoExport_TestConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT AEExporterID, ExporterName, ExporterShortName, ExporterAddressID, Notes, R" +
                "ecordStatus, CreationDate, CreatedBy, UpdatedDate, UpdatedBy, AEFreightForwarder" +
                "ID, CustomerExporterCode FROM dbo.AEExporter";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutoExport_TestDataSet.AEExporterDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutoExport_TestDataSet.AEExporterDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutoExport_TestDataSet.AEExporterDataTable dataTable = new AutoExport_TestDataSet.AEExporterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoExport_TestDataSet.AEExporterDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoExport_TestDataSet dataSet) {
            return this.Adapter.Update(dataSet, "AEExporter");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_AEExporterID, string Original_ExporterName, string Original_ExporterShortName, global::System.Nullable<int> Original_ExporterAddressID, string Original_Notes, string Original_RecordStatus, global::System.Nullable<global::System.DateTime> Original_CreationDate, string Original_CreatedBy, global::System.Nullable<global::System.DateTime> Original_UpdatedDate, string Original_UpdatedBy, global::System.Nullable<int> Original_AEFreightForwarderID, string Original_CustomerExporterCode) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_AEExporterID));
            if ((Original_ExporterName == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ExporterName));
            }
            if ((Original_ExporterShortName == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ExporterShortName));
            }
            if ((Original_ExporterAddressID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_ExporterAddressID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_Notes == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Notes));
            }
            if ((Original_RecordStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_RecordStatus));
            }
            if ((Original_CreationDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_CreationDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_CreatedBy == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_CreatedBy));
            }
            if ((Original_UpdatedDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_UpdatedDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_UpdatedBy == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_UpdatedBy));
            }
            if ((Original_AEFreightForwarderID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_AEFreightForwarderID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_CustomerExporterCode == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_CustomerExporterCode));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ExporterName, string ExporterShortName, global::System.Nullable<int> ExporterAddressID, string Notes, string RecordStatus, global::System.Nullable<global::System.DateTime> CreationDate, string CreatedBy, global::System.Nullable<global::System.DateTime> UpdatedDate, string UpdatedBy, global::System.Nullable<int> AEFreightForwarderID, string CustomerExporterCode) {
            if ((ExporterName == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ExporterName));
            }
            if ((ExporterShortName == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ExporterShortName));
            }
            if ((ExporterAddressID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(ExporterAddressID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Notes == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Notes));
            }
            if ((RecordStatus == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(RecordStatus));
            }
            if ((CreationDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(CreationDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((CreatedBy == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(CreatedBy));
            }
            if ((UpdatedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(UpdatedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((UpdatedBy == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(UpdatedBy));
            }
            if ((AEFreightForwarderID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(AEFreightForwarderID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((CustomerExporterCode == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(CustomerExporterCode));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ExporterName, 
                    string ExporterShortName, 
                    global::System.Nullable<int> ExporterAddressID, 
                    string Notes, 
                    string RecordStatus, 
                    global::System.Nullable<global::System.DateTime> CreationDate, 
                    string CreatedBy, 
                    global::System.Nullable<global::System.DateTime> UpdatedDate, 
                    string UpdatedBy, 
                    global::System.Nullable<int> AEFreightForwarderID, 
                    string CustomerExporterCode, 
                    int Original_AEExporterID, 
                    string Original_ExporterName, 
                    string Original_ExporterShortName, 
                    global::System.Nullable<int> Original_ExporterAddressID, 
                    string Original_Notes, 
                    string Original_RecordStatus, 
                    global::System.Nullable<global::System.DateTime> Original_CreationDate, 
                    string Original_CreatedBy, 
                    global::System.Nullable<global::System.DateTime> Original_UpdatedDate, 
                    string Original_UpdatedBy, 
                    global::System.Nullable<int> Original_AEFreightForwarderID, 
                    string Original_CustomerExporterCode, 
                    int AEExporterID) {
            if ((ExporterName == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ExporterName));
            }
            if ((ExporterShortName == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ExporterShortName));
            }
            if ((ExporterAddressID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(ExporterAddressID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Notes == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Notes));
            }
            if ((RecordStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(RecordStatus));
            }
            if ((CreationDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(CreationDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((CreatedBy == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(CreatedBy));
            }
            if ((UpdatedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(UpdatedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((UpdatedBy == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(UpdatedBy));
            }
            if ((AEFreightForwarderID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(AEFreightForwarderID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((CustomerExporterCode == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(CustomerExporterCode));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_AEExporterID));
            if ((Original_ExporterName == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_ExporterName));
            }
            if ((Original_ExporterShortName == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_ExporterShortName));
            }
            if ((Original_ExporterAddressID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_ExporterAddressID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Notes == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Notes));
            }
            if ((Original_RecordStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_RecordStatus));
            }
            if ((Original_CreationDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_CreationDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_CreatedBy == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_CreatedBy));
            }
            if ((Original_UpdatedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(Original_UpdatedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_UpdatedBy == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_UpdatedBy));
            }
            if ((Original_AEFreightForwarderID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(Original_AEFreightForwarderID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_CustomerExporterCode == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_CustomerExporterCode));
            }
            this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(AEExporterID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ExporterName, 
                    string ExporterShortName, 
                    global::System.Nullable<int> ExporterAddressID, 
                    string Notes, 
                    string RecordStatus, 
                    global::System.Nullable<global::System.DateTime> CreationDate, 
                    string CreatedBy, 
                    global::System.Nullable<global::System.DateTime> UpdatedDate, 
                    string UpdatedBy, 
                    global::System.Nullable<int> AEFreightForwarderID, 
                    string CustomerExporterCode, 
                    int Original_AEExporterID, 
                    string Original_ExporterName, 
                    string Original_ExporterShortName, 
                    global::System.Nullable<int> Original_ExporterAddressID, 
                    string Original_Notes, 
                    string Original_RecordStatus, 
                    global::System.Nullable<global::System.DateTime> Original_CreationDate, 
                    string Original_CreatedBy, 
                    global::System.Nullable<global::System.DateTime> Original_UpdatedDate, 
                    string Original_UpdatedBy, 
                    global::System.Nullable<int> Original_AEFreightForwarderID, 
                    string Original_CustomerExporterCode) {
            return this.Update(ExporterName, ExporterShortName, ExporterAddressID, Notes, RecordStatus, CreationDate, CreatedBy, UpdatedDate, UpdatedBy, AEFreightForwarderID, CustomerExporterCode, Original_AEExporterID, Original_ExporterName, Original_ExporterShortName, Original_ExporterAddressID, Original_Notes, Original_RecordStatus, Original_CreationDate, Original_CreatedBy, Original_UpdatedDate, Original_UpdatedBy, Original_AEFreightForwarderID, Original_CustomerExporterCode, Original_AEExporterID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AutoportExportVehiclesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AutoportExportVehiclesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AutoportExportVehicles";
            tableMapping.ColumnMappings.Add("AutoportExportVehiclesID", "AutoportExportVehiclesID");
            tableMapping.ColumnMappings.Add("CustomerID", "CustomerID");
            tableMapping.ColumnMappings.Add("VehicleYear", "VehicleYear");
            tableMapping.ColumnMappings.Add("Make", "Make");
            tableMapping.ColumnMappings.Add("Model", "Model");
            tableMapping.ColumnMappings.Add("Bodystyle", "Bodystyle");
            tableMapping.ColumnMappings.Add("VIN", "VIN");
            tableMapping.ColumnMappings.Add("Color", "Color");
            tableMapping.ColumnMappings.Add("VehicleLength", "VehicleLength");
            tableMapping.ColumnMappings.Add("VehicleWidth", "VehicleWidth");
            tableMapping.ColumnMappings.Add("VehicleHeight", "VehicleHeight");
            tableMapping.ColumnMappings.Add("VehicleWeight", "VehicleWeight");
            tableMapping.ColumnMappings.Add("VehicleCubicFeet", "VehicleCubicFeet");
            tableMapping.ColumnMappings.Add("VehicleStatus", "VehicleStatus");
            tableMapping.ColumnMappings.Add("TitleNumber", "TitleNumber");
            tableMapping.ColumnMappings.Add("TitleState", "TitleState");
            tableMapping.ColumnMappings.Add("DestinationName", "DestinationName");
            tableMapping.ColumnMappings.Add("ExporterID", "ExporterID");
            tableMapping.ColumnMappings.Add("FreightForwarderID", "FreightForwarderID");
            tableMapping.ColumnMappings.Add("VesselID", "VesselID");
            tableMapping.ColumnMappings.Add("BookingNumber", "BookingNumber");
            tableMapping.ColumnMappings.Add("VoyageNumber", "VoyageNumber");
            tableMapping.ColumnMappings.Add("CustomerIdentification", "CustomerIdentification");
            tableMapping.ColumnMappings.Add("SizeClass", "SizeClass");
            tableMapping.ColumnMappings.Add("BayLocation", "BayLocation");
            tableMapping.ColumnMappings.Add("EntryRate", "EntryRate");
            tableMapping.ColumnMappings.Add("EntryRateOverrideInd", "EntryRateOverrideInd");
            tableMapping.ColumnMappings.Add("PerDiemGraceDays", "PerDiemGraceDays");
            tableMapping.ColumnMappings.Add("PerDiemGraceDaysOverrideInd", "PerDiemGraceDaysOverrideInd");
            tableMapping.ColumnMappings.Add("TotalCharge", "TotalCharge");
            tableMapping.ColumnMappings.Add("DateReceived", "DateReceived");
            tableMapping.ColumnMappings.Add("ReceivedExceptionDate", "ReceivedExceptionDate");
            tableMapping.ColumnMappings.Add("DateSubmittedCustoms", "DateSubmittedCustoms");
            tableMapping.ColumnMappings.Add("CustomsExceptionDate", "CustomsExceptionDate");
            tableMapping.ColumnMappings.Add("CustomsApprovedDate", "CustomsApprovedDate");
            tableMapping.ColumnMappings.Add("DateShipped", "DateShipped");
            tableMapping.ColumnMappings.Add("BilledInd", "BilledInd");
            tableMapping.ColumnMappings.Add("BillingID", "BillingID");
            tableMapping.ColumnMappings.Add("DateBilled", "DateBilled");
            tableMapping.ColumnMappings.Add("VINDecodedInd", "VINDecodedInd");
            tableMapping.ColumnMappings.Add("Note", "Note");
            tableMapping.ColumnMappings.Add("RecordStatus", "RecordStatus");
            tableMapping.ColumnMappings.Add("CreationDate", "CreationDate");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("UpdatedDate", "UpdatedDate");
            tableMapping.ColumnMappings.Add("UpdatedBy", "UpdatedBy");
            tableMapping.ColumnMappings.Add("CreditHoldInd", "CreditHoldInd");
            tableMapping.ColumnMappings.Add("CreditHoldBy", "CreditHoldBy");
            tableMapping.ColumnMappings.Add("CustomsApprovalPrintedInd", "CustomsApprovalPrintedInd");
            tableMapping.ColumnMappings.Add("VoyageID", "VoyageID");
            tableMapping.ColumnMappings.Add("CustomsCoverSheetPrintedInd", "CustomsCoverSheetPrintedInd");
            tableMapping.ColumnMappings.Add("NoStartInd", "NoStartInd");
            tableMapping.ColumnMappings.Add("CustomsApprovalPrintedDate", "CustomsApprovalPrintedDate");
            tableMapping.ColumnMappings.Add("ConsigneeID", "ConsigneeID");
            tableMapping.ColumnMappings.Add("LastPhysicalDate", "LastPhysicalDate");
            tableMapping.ColumnMappings.Add("HasAudioSystemInd", "HasAudioSystemInd");
            tableMapping.ColumnMappings.Add("HasNavigationSystemInd", "HasNavigationSystemInd");
            tableMapping.ColumnMappings.Add("TransshipPortName", "TransshipPortName");
            tableMapping.ColumnMappings.Add("SpecialInstructions", "SpecialInstructions");
            tableMapping.ColumnMappings.Add("CustomsApprovedCoverSheetPrintedInd", "CustomsApprovedCoverSheetPrintedInd");
            tableMapping.ColumnMappings.Add("PortReceiptNumber", "PortReceiptNumber");
            tableMapping.ColumnMappings.Add("VoyageChangeHoldDate", "VoyageChangeHoldDate");
            tableMapping.ColumnMappings.Add("ReceivedBy", "ReceivedBy");
            tableMapping.ColumnMappings.Add("LastPhysicalBy", "LastPhysicalBy");
            tableMapping.ColumnMappings.Add("BarCodeLabelPrintedInd", "BarCodeLabelPrintedInd");
            tableMapping.ColumnMappings.Add("VIVTagNumber", "VIVTagNumber");
            tableMapping.ColumnMappings.Add("BarCodeLabelPrintedDate", "BarCodeLabelPrintedDate");
            tableMapping.ColumnMappings.Add("MechanicalExceptionInd", "MechanicalExceptionInd");
            tableMapping.ColumnMappings.Add("LeftBehindInd", "LeftBehindInd");
            tableMapping.ColumnMappings.Add("ITNNumber", "ITNNumber");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[AutoportExportVehicles] WHERE (([AutoportExportVehiclesID] = @" +
                "Original_AutoportExportVehiclesID) AND ((@IsNull_CustomerID = 1 AND [CustomerID]" +
                " IS NULL) OR ([CustomerID] = @Original_CustomerID)) AND ((@IsNull_VehicleYear = " +
                "1 AND [VehicleYear] IS NULL) OR ([VehicleYear] = @Original_VehicleYear)) AND ((@" +
                "IsNull_Make = 1 AND [Make] IS NULL) OR ([Make] = @Original_Make)) AND ((@IsNull_" +
                "Model = 1 AND [Model] IS NULL) OR ([Model] = @Original_Model)) AND ((@IsNull_Bod" +
                "ystyle = 1 AND [Bodystyle] IS NULL) OR ([Bodystyle] = @Original_Bodystyle)) AND " +
                "((@IsNull_VIN = 1 AND [VIN] IS NULL) OR ([VIN] = @Original_VIN)) AND ((@IsNull_C" +
                "olor = 1 AND [Color] IS NULL) OR ([Color] = @Original_Color)) AND ((@IsNull_Vehi" +
                "cleLength = 1 AND [VehicleLength] IS NULL) OR ([VehicleLength] = @Original_Vehic" +
                "leLength)) AND ((@IsNull_VehicleWidth = 1 AND [VehicleWidth] IS NULL) OR ([Vehic" +
                "leWidth] = @Original_VehicleWidth)) AND ((@IsNull_VehicleHeight = 1 AND [Vehicle" +
                "Height] IS NULL) OR ([VehicleHeight] = @Original_VehicleHeight)) AND ((@IsNull_V" +
                "ehicleWeight = 1 AND [VehicleWeight] IS NULL) OR ([VehicleWeight] = @Original_Ve" +
                "hicleWeight)) AND ((@IsNull_VehicleCubicFeet = 1 AND [VehicleCubicFeet] IS NULL)" +
                " OR ([VehicleCubicFeet] = @Original_VehicleCubicFeet)) AND ((@IsNull_VehicleStat" +
                "us = 1 AND [VehicleStatus] IS NULL) OR ([VehicleStatus] = @Original_VehicleStatu" +
                "s)) AND ((@IsNull_TitleNumber = 1 AND [TitleNumber] IS NULL) OR ([TitleNumber] =" +
                " @Original_TitleNumber)) AND ((@IsNull_TitleState = 1 AND [TitleState] IS NULL) " +
                "OR ([TitleState] = @Original_TitleState)) AND ((@IsNull_DestinationName = 1 AND " +
                "[DestinationName] IS NULL) OR ([DestinationName] = @Original_DestinationName)) A" +
                "ND ((@IsNull_ExporterID = 1 AND [ExporterID] IS NULL) OR ([ExporterID] = @Origin" +
                "al_ExporterID)) AND ((@IsNull_FreightForwarderID = 1 AND [FreightForwarderID] IS" +
                " NULL) OR ([FreightForwarderID] = @Original_FreightForwarderID)) AND ((@IsNull_V" +
                "esselID = 1 AND [VesselID] IS NULL) OR ([VesselID] = @Original_VesselID)) AND ((" +
                "@IsNull_BookingNumber = 1 AND [BookingNumber] IS NULL) OR ([BookingNumber] = @Or" +
                "iginal_BookingNumber)) AND ((@IsNull_VoyageNumber = 1 AND [VoyageNumber] IS NULL" +
                ") OR ([VoyageNumber] = @Original_VoyageNumber)) AND ((@IsNull_CustomerIdentifica" +
                "tion = 1 AND [CustomerIdentification] IS NULL) OR ([CustomerIdentification] = @O" +
                "riginal_CustomerIdentification)) AND ((@IsNull_SizeClass = 1 AND [SizeClass] IS " +
                "NULL) OR ([SizeClass] = @Original_SizeClass)) AND ((@IsNull_BayLocation = 1 AND " +
                "[BayLocation] IS NULL) OR ([BayLocation] = @Original_BayLocation)) AND ((@IsNull" +
                "_EntryRate = 1 AND [EntryRate] IS NULL) OR ([EntryRate] = @Original_EntryRate)) " +
                "AND ((@IsNull_EntryRateOverrideInd = 1 AND [EntryRateOverrideInd] IS NULL) OR ([" +
                "EntryRateOverrideInd] = @Original_EntryRateOverrideInd)) AND ((@IsNull_PerDiemGr" +
                "aceDays = 1 AND [PerDiemGraceDays] IS NULL) OR ([PerDiemGraceDays] = @Original_P" +
                "erDiemGraceDays)) AND ((@IsNull_PerDiemGraceDaysOverrideInd = 1 AND [PerDiemGrac" +
                "eDaysOverrideInd] IS NULL) OR ([PerDiemGraceDaysOverrideInd] = @Original_PerDiem" +
                "GraceDaysOverrideInd)) AND ((@IsNull_TotalCharge = 1 AND [TotalCharge] IS NULL) " +
                "OR ([TotalCharge] = @Original_TotalCharge)) AND ((@IsNull_DateReceived = 1 AND [" +
                "DateReceived] IS NULL) OR ([DateReceived] = @Original_DateReceived)) AND ((@IsNu" +
                "ll_ReceivedExceptionDate = 1 AND [ReceivedExceptionDate] IS NULL) OR ([ReceivedE" +
                "xceptionDate] = @Original_ReceivedExceptionDate)) AND ((@IsNull_DateSubmittedCus" +
                "toms = 1 AND [DateSubmittedCustoms] IS NULL) OR ([DateSubmittedCustoms] = @Origi" +
                "nal_DateSubmittedCustoms)) AND ((@IsNull_CustomsExceptionDate = 1 AND [CustomsEx" +
                "ceptionDate] IS NULL) OR ([CustomsExceptionDate] = @Original_CustomsExceptionDat" +
                "e)) AND ((@IsNull_CustomsApprovedDate = 1 AND [CustomsApprovedDate] IS NULL) OR " +
                "([CustomsApprovedDate] = @Original_CustomsApprovedDate)) AND ((@IsNull_DateShipp" +
                "ed = 1 AND [DateShipped] IS NULL) OR ([DateShipped] = @Original_DateShipped)) AN" +
                "D ((@IsNull_BilledInd = 1 AND [BilledInd] IS NULL) OR ([BilledInd] = @Original_B" +
                "illedInd)) AND ((@IsNull_BillingID = 1 AND [BillingID] IS NULL) OR ([BillingID] " +
                "= @Original_BillingID)) AND ((@IsNull_DateBilled = 1 AND [DateBilled] IS NULL) O" +
                "R ([DateBilled] = @Original_DateBilled)) AND ((@IsNull_VINDecodedInd = 1 AND [VI" +
                "NDecodedInd] IS NULL) OR ([VINDecodedInd] = @Original_VINDecodedInd)) AND ((@IsN" +
                "ull_Note = 1 AND [Note] IS NULL) OR ([Note] = @Original_Note)) AND ((@IsNull_Rec" +
                "ordStatus = 1 AND [RecordStatus] IS NULL) OR ([RecordStatus] = @Original_RecordS" +
                "tatus)) AND ((@IsNull_CreationDate = 1 AND [CreationDate] IS NULL) OR ([Creation" +
                "Date] = @Original_CreationDate)) AND ((@IsNull_CreatedBy = 1 AND [CreatedBy] IS " +
                "NULL) OR ([CreatedBy] = @Original_CreatedBy)) AND ((@IsNull_UpdatedDate = 1 AND " +
                "[UpdatedDate] IS NULL) OR ([UpdatedDate] = @Original_UpdatedDate)) AND ((@IsNull" +
                "_UpdatedBy = 1 AND [UpdatedBy] IS NULL) OR ([UpdatedBy] = @Original_UpdatedBy)) " +
                "AND ((@IsNull_CreditHoldInd = 1 AND [CreditHoldInd] IS NULL) OR ([CreditHoldInd]" +
                " = @Original_CreditHoldInd)) AND ((@IsNull_CreditHoldBy = 1 AND [CreditHoldBy] I" +
                "S NULL) OR ([CreditHoldBy] = @Original_CreditHoldBy)) AND ((@IsNull_CustomsAppro" +
                "valPrintedInd = 1 AND [CustomsApprovalPrintedInd] IS NULL) OR ([CustomsApprovalP" +
                "rintedInd] = @Original_CustomsApprovalPrintedInd)) AND ((@IsNull_VoyageID = 1 AN" +
                "D [VoyageID] IS NULL) OR ([VoyageID] = @Original_VoyageID)) AND ((@IsNull_Custom" +
                "sCoverSheetPrintedInd = 1 AND [CustomsCoverSheetPrintedInd] IS NULL) OR ([Custom" +
                "sCoverSheetPrintedInd] = @Original_CustomsCoverSheetPrintedInd)) AND ((@IsNull_N" +
                "oStartInd = 1 AND [NoStartInd] IS NULL) OR ([NoStartInd] = @Original_NoStartInd)" +
                ") AND ((@IsNull_CustomsApprovalPrintedDate = 1 AND [CustomsApprovalPrintedDate] " +
                "IS NULL) OR ([CustomsApprovalPrintedDate] = @Original_CustomsApprovalPrintedDate" +
                ")) AND ((@IsNull_ConsigneeID = 1 AND [ConsigneeID] IS NULL) OR ([ConsigneeID] = " +
                "@Original_ConsigneeID)) AND ((@IsNull_LastPhysicalDate = 1 AND [LastPhysicalDate" +
                "] IS NULL) OR ([LastPhysicalDate] = @Original_LastPhysicalDate)) AND ((@IsNull_H" +
                "asAudioSystemInd = 1 AND [HasAudioSystemInd] IS NULL) OR ([HasAudioSystemInd] = " +
                "@Original_HasAudioSystemInd)) AND ((@IsNull_HasNavigationSystemInd = 1 AND [HasN" +
                "avigationSystemInd] IS NULL) OR ([HasNavigationSystemInd] = @Original_HasNavigat" +
                "ionSystemInd)) AND ((@IsNull_TransshipPortName = 1 AND [TransshipPortName] IS NU" +
                "LL) OR ([TransshipPortName] = @Original_TransshipPortName)) AND ((@IsNull_Specia" +
                "lInstructions = 1 AND [SpecialInstructions] IS NULL) OR ([SpecialInstructions] =" +
                " @Original_SpecialInstructions)) AND ((@IsNull_CustomsApprovedCoverSheetPrintedI" +
                "nd = 1 AND [CustomsApprovedCoverSheetPrintedInd] IS NULL) OR ([CustomsApprovedCo" +
                "verSheetPrintedInd] = @Original_CustomsApprovedCoverSheetPrintedInd)) AND ((@IsN" +
                "ull_PortReceiptNumber = 1 AND [PortReceiptNumber] IS NULL) OR ([PortReceiptNumbe" +
                "r] = @Original_PortReceiptNumber)) AND ((@IsNull_VoyageChangeHoldDate = 1 AND [V" +
                "oyageChangeHoldDate] IS NULL) OR ([VoyageChangeHoldDate] = @Original_VoyageChang" +
                "eHoldDate)) AND ((@IsNull_ReceivedBy = 1 AND [ReceivedBy] IS NULL) OR ([Received" +
                "By] = @Original_ReceivedBy)) AND ((@IsNull_LastPhysicalBy = 1 AND [LastPhysicalB" +
                "y] IS NULL) OR ([LastPhysicalBy] = @Original_LastPhysicalBy)) AND ((@IsNull_BarC" +
                "odeLabelPrintedInd = 1 AND [BarCodeLabelPrintedInd] IS NULL) OR ([BarCodeLabelPr" +
                "intedInd] = @Original_BarCodeLabelPrintedInd)) AND ((@IsNull_VIVTagNumber = 1 AN" +
                "D [VIVTagNumber] IS NULL) OR ([VIVTagNumber] = @Original_VIVTagNumber)) AND ((@I" +
                "sNull_BarCodeLabelPrintedDate = 1 AND [BarCodeLabelPrintedDate] IS NULL) OR ([Ba" +
                "rCodeLabelPrintedDate] = @Original_BarCodeLabelPrintedDate)) AND ((@IsNull_Mecha" +
                "nicalExceptionInd = 1 AND [MechanicalExceptionInd] IS NULL) OR ([MechanicalExcep" +
                "tionInd] = @Original_MechanicalExceptionInd)) AND ((@IsNull_LeftBehindInd = 1 AN" +
                "D [LeftBehindInd] IS NULL) OR ([LeftBehindInd] = @Original_LeftBehindInd)) AND (" +
                "(@IsNull_ITNNumber = 1 AND [ITNNumber] IS NULL) OR ([ITNNumber] = @Original_ITNN" +
                "umber)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AutoportExportVehiclesID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutoportExportVehiclesID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VehicleYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleYear", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleYear", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Make", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Make", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Make", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Make", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Model", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Model", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bodystyle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bodystyle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bodystyle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bodystyle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VIN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Color", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Color", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VehicleLength", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleLength", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleLength", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleLength", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VehicleWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleWidth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleWidth", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleWidth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VehicleHeight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleHeight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleHeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleHeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VehicleWeight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleWeight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleWeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VehicleCubicFeet", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleCubicFeet", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleCubicFeet", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleCubicFeet", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VehicleStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TitleNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TitleNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TitleNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TitleNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TitleState", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TitleState", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TitleState", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TitleState", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DestinationName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DestinationName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DestinationName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DestinationName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExporterID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExporterID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExporterID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExporterID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FreightForwarderID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreightForwarderID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FreightForwarderID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreightForwarderID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VesselID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VesselID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VesselID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VesselID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BookingNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BookingNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BookingNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BookingNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VoyageNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoyageNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VoyageNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoyageNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomerIdentification", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerIdentification", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerIdentification", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerIdentification", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SizeClass", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SizeClass", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SizeClass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SizeClass", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BayLocation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BayLocation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BayLocation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BayLocation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EntryRate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryRate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EntryRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "EntryRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EntryRateOverrideInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryRateOverrideInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EntryRateOverrideInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryRateOverrideInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PerDiemGraceDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PerDiemGraceDays", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PerDiemGraceDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PerDiemGraceDays", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PerDiemGraceDaysOverrideInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PerDiemGraceDaysOverrideInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PerDiemGraceDaysOverrideInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PerDiemGraceDaysOverrideInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TotalCharge", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalCharge", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalCharge", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "TotalCharge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateReceived", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateReceived", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateReceived", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateReceived", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReceivedExceptionDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedExceptionDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReceivedExceptionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedExceptionDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateSubmittedCustoms", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateSubmittedCustoms", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateSubmittedCustoms", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateSubmittedCustoms", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomsExceptionDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsExceptionDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomsExceptionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsExceptionDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomsApprovedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsApprovedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomsApprovedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsApprovedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateShipped", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateShipped", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateShipped", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateShipped", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BilledInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BilledInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BilledInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BilledInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BillingID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillingID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BillingID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillingID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateBilled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateBilled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateBilled", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateBilled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VINDecodedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VINDecodedInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VINDecodedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VINDecodedInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Note", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Note", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Note", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Note", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RecordStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreationDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UpdatedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UpdatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreditHoldInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditHoldInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreditHoldInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditHoldInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreditHoldBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditHoldBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreditHoldBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditHoldBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomsApprovalPrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsApprovalPrintedInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomsApprovalPrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsApprovalPrintedInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VoyageID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoyageID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VoyageID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoyageID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomsCoverSheetPrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsCoverSheetPrintedInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomsCoverSheetPrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsCoverSheetPrintedInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoStartInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoStartInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoStartInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoStartInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomsApprovalPrintedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsApprovalPrintedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomsApprovalPrintedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsApprovalPrintedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConsigneeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsigneeID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConsigneeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsigneeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastPhysicalDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPhysicalDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastPhysicalDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPhysicalDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HasAudioSystemInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasAudioSystemInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HasAudioSystemInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasAudioSystemInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HasNavigationSystemInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasNavigationSystemInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HasNavigationSystemInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasNavigationSystemInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TransshipPortName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransshipPortName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransshipPortName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransshipPortName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SpecialInstructions", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialInstructions", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SpecialInstructions", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialInstructions", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomsApprovedCoverSheetPrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsApprovedCoverSheetPrintedInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomsApprovedCoverSheetPrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsApprovedCoverSheetPrintedInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PortReceiptNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PortReceiptNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PortReceiptNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PortReceiptNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VoyageChangeHoldDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoyageChangeHoldDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VoyageChangeHoldDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoyageChangeHoldDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReceivedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReceivedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastPhysicalBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPhysicalBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastPhysicalBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPhysicalBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BarCodeLabelPrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BarCodeLabelPrintedInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BarCodeLabelPrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BarCodeLabelPrintedInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VIVTagNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIVTagNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VIVTagNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIVTagNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BarCodeLabelPrintedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BarCodeLabelPrintedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BarCodeLabelPrintedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BarCodeLabelPrintedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MechanicalExceptionInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MechanicalExceptionInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MechanicalExceptionInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MechanicalExceptionInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LeftBehindInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeftBehindInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LeftBehindInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeftBehindInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ITNNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITNNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ITNNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITNNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[AutoportExportVehicles] ([CustomerID], [VehicleYear], [Make], " +
                "[Model], [Bodystyle], [VIN], [Color], [VehicleLength], [VehicleWidth], [VehicleH" +
                "eight], [VehicleWeight], [VehicleCubicFeet], [VehicleStatus], [TitleNumber], [Ti" +
                "tleState], [DestinationName], [ExporterID], [FreightForwarderID], [VesselID], [B" +
                "ookingNumber], [VoyageNumber], [CustomerIdentification], [SizeClass], [BayLocati" +
                "on], [EntryRate], [EntryRateOverrideInd], [PerDiemGraceDays], [PerDiemGraceDaysO" +
                "verrideInd], [TotalCharge], [DateReceived], [ReceivedExceptionDate], [DateSubmit" +
                "tedCustoms], [CustomsExceptionDate], [CustomsApprovedDate], [DateShipped], [Bill" +
                "edInd], [BillingID], [DateBilled], [VINDecodedInd], [Note], [RecordStatus], [Cre" +
                "ationDate], [CreatedBy], [UpdatedDate], [UpdatedBy], [CreditHoldInd], [CreditHol" +
                "dBy], [CustomsApprovalPrintedInd], [VoyageID], [CustomsCoverSheetPrintedInd], [N" +
                "oStartInd], [CustomsApprovalPrintedDate], [ConsigneeID], [LastPhysicalDate], [Ha" +
                "sAudioSystemInd], [HasNavigationSystemInd], [TransshipPortName], [SpecialInstruc" +
                "tions], [CustomsApprovedCoverSheetPrintedInd], [PortReceiptNumber], [VoyageChang" +
                "eHoldDate], [ReceivedBy], [LastPhysicalBy], [BarCodeLabelPrintedInd], [VIVTagNum" +
                "ber], [BarCodeLabelPrintedDate], [MechanicalExceptionInd], [LeftBehindInd], [ITN" +
                "Number]) VALUES (@CustomerID, @VehicleYear, @Make, @Model, @Bodystyle, @VIN, @Co" +
                "lor, @VehicleLength, @VehicleWidth, @VehicleHeight, @VehicleWeight, @VehicleCubi" +
                "cFeet, @VehicleStatus, @TitleNumber, @TitleState, @DestinationName, @ExporterID," +
                " @FreightForwarderID, @VesselID, @BookingNumber, @VoyageNumber, @CustomerIdentif" +
                "ication, @SizeClass, @BayLocation, @EntryRate, @EntryRateOverrideInd, @PerDiemGr" +
                "aceDays, @PerDiemGraceDaysOverrideInd, @TotalCharge, @DateReceived, @ReceivedExc" +
                "eptionDate, @DateSubmittedCustoms, @CustomsExceptionDate, @CustomsApprovedDate, " +
                "@DateShipped, @BilledInd, @BillingID, @DateBilled, @VINDecodedInd, @Note, @Recor" +
                "dStatus, @CreationDate, @CreatedBy, @UpdatedDate, @UpdatedBy, @CreditHoldInd, @C" +
                "reditHoldBy, @CustomsApprovalPrintedInd, @VoyageID, @CustomsCoverSheetPrintedInd" +
                ", @NoStartInd, @CustomsApprovalPrintedDate, @ConsigneeID, @LastPhysicalDate, @Ha" +
                "sAudioSystemInd, @HasNavigationSystemInd, @TransshipPortName, @SpecialInstructio" +
                "ns, @CustomsApprovedCoverSheetPrintedInd, @PortReceiptNumber, @VoyageChangeHoldD" +
                "ate, @ReceivedBy, @LastPhysicalBy, @BarCodeLabelPrintedInd, @VIVTagNumber, @BarC" +
                "odeLabelPrintedDate, @MechanicalExceptionInd, @LeftBehindInd, @ITNNumber);\r\nSELE" +
                "CT AutoportExportVehiclesID, CustomerID, VehicleYear, Make, Model, Bodystyle, VI" +
                "N, Color, VehicleLength, VehicleWidth, VehicleHeight, VehicleWeight, VehicleCubi" +
                "cFeet, VehicleStatus, TitleNumber, TitleState, DestinationName, ExporterID, Frei" +
                "ghtForwarderID, VesselID, BookingNumber, VoyageNumber, CustomerIdentification, S" +
                "izeClass, BayLocation, EntryRate, EntryRateOverrideInd, PerDiemGraceDays, PerDie" +
                "mGraceDaysOverrideInd, TotalCharge, DateReceived, ReceivedExceptionDate, DateSub" +
                "mittedCustoms, CustomsExceptionDate, CustomsApprovedDate, DateShipped, BilledInd" +
                ", BillingID, DateBilled, VINDecodedInd, Note, RecordStatus, CreationDate, Create" +
                "dBy, UpdatedDate, UpdatedBy, CreditHoldInd, CreditHoldBy, CustomsApprovalPrinted" +
                "Ind, VoyageID, CustomsCoverSheetPrintedInd, NoStartInd, CustomsApprovalPrintedDa" +
                "te, ConsigneeID, LastPhysicalDate, HasAudioSystemInd, HasNavigationSystemInd, Tr" +
                "ansshipPortName, SpecialInstructions, CustomsApprovedCoverSheetPrintedInd, PortR" +
                "eceiptNumber, VoyageChangeHoldDate, ReceivedBy, LastPhysicalBy, BarCodeLabelPrin" +
                "tedInd, VIVTagNumber, BarCodeLabelPrintedDate, MechanicalExceptionInd, LeftBehin" +
                "dInd, ITNNumber FROM AutoportExportVehicles WHERE (AutoportExportVehiclesID = SC" +
                "OPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleYear", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Make", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Make", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Model", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bodystyle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bodystyle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Color", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleLength", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleLength", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleWidth", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleWidth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleHeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleHeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleWeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleCubicFeet", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleCubicFeet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TitleNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TitleNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TitleState", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TitleState", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DestinationName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DestinationName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExporterID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExporterID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FreightForwarderID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreightForwarderID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VesselID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VesselID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BookingNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BookingNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VoyageNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoyageNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerIdentification", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerIdentification", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SizeClass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SizeClass", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BayLocation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BayLocation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "EntryRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryRateOverrideInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryRateOverrideInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PerDiemGraceDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PerDiemGraceDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PerDiemGraceDaysOverrideInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PerDiemGraceDaysOverrideInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalCharge", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "TotalCharge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateReceived", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateReceived", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivedExceptionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedExceptionDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateSubmittedCustoms", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateSubmittedCustoms", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomsExceptionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsExceptionDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomsApprovedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsApprovedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateShipped", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateShipped", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BilledInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BilledInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillingID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillingID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateBilled", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateBilled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VINDecodedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VINDecodedInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Note", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Note", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreditHoldInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditHoldInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreditHoldBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditHoldBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomsApprovalPrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsApprovalPrintedInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VoyageID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoyageID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomsCoverSheetPrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsCoverSheetPrintedInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoStartInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoStartInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomsApprovalPrintedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsApprovalPrintedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConsigneeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsigneeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastPhysicalDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPhysicalDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasAudioSystemInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasAudioSystemInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasNavigationSystemInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasNavigationSystemInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransshipPortName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransshipPortName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpecialInstructions", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialInstructions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomsApprovedCoverSheetPrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsApprovedCoverSheetPrintedInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PortReceiptNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PortReceiptNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VoyageChangeHoldDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoyageChangeHoldDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastPhysicalBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPhysicalBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BarCodeLabelPrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BarCodeLabelPrintedInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIVTagNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIVTagNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BarCodeLabelPrintedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BarCodeLabelPrintedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MechanicalExceptionInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MechanicalExceptionInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LeftBehindInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeftBehindInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ITNNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITNNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[AutoportExportVehicles] SET [CustomerID] = @CustomerID, [VehicleYea" +
                "r] = @VehicleYear, [Make] = @Make, [Model] = @Model, [Bodystyle] = @Bodystyle, [" +
                "VIN] = @VIN, [Color] = @Color, [VehicleLength] = @VehicleLength, [VehicleWidth] " +
                "= @VehicleWidth, [VehicleHeight] = @VehicleHeight, [VehicleWeight] = @VehicleWei" +
                "ght, [VehicleCubicFeet] = @VehicleCubicFeet, [VehicleStatus] = @VehicleStatus, [" +
                "TitleNumber] = @TitleNumber, [TitleState] = @TitleState, [DestinationName] = @De" +
                "stinationName, [ExporterID] = @ExporterID, [FreightForwarderID] = @FreightForwar" +
                "derID, [VesselID] = @VesselID, [BookingNumber] = @BookingNumber, [VoyageNumber] " +
                "= @VoyageNumber, [CustomerIdentification] = @CustomerIdentification, [SizeClass]" +
                " = @SizeClass, [BayLocation] = @BayLocation, [EntryRate] = @EntryRate, [EntryRat" +
                "eOverrideInd] = @EntryRateOverrideInd, [PerDiemGraceDays] = @PerDiemGraceDays, [" +
                "PerDiemGraceDaysOverrideInd] = @PerDiemGraceDaysOverrideInd, [TotalCharge] = @To" +
                "talCharge, [DateReceived] = @DateReceived, [ReceivedExceptionDate] = @ReceivedEx" +
                "ceptionDate, [DateSubmittedCustoms] = @DateSubmittedCustoms, [CustomsExceptionDa" +
                "te] = @CustomsExceptionDate, [CustomsApprovedDate] = @CustomsApprovedDate, [Date" +
                "Shipped] = @DateShipped, [BilledInd] = @BilledInd, [BillingID] = @BillingID, [Da" +
                "teBilled] = @DateBilled, [VINDecodedInd] = @VINDecodedInd, [Note] = @Note, [Reco" +
                "rdStatus] = @RecordStatus, [CreationDate] = @CreationDate, [CreatedBy] = @Create" +
                "dBy, [UpdatedDate] = @UpdatedDate, [UpdatedBy] = @UpdatedBy, [CreditHoldInd] = @" +
                "CreditHoldInd, [CreditHoldBy] = @CreditHoldBy, [CustomsApprovalPrintedInd] = @Cu" +
                "stomsApprovalPrintedInd, [VoyageID] = @VoyageID, [CustomsCoverSheetPrintedInd] =" +
                " @CustomsCoverSheetPrintedInd, [NoStartInd] = @NoStartInd, [CustomsApprovalPrint" +
                "edDate] = @CustomsApprovalPrintedDate, [ConsigneeID] = @ConsigneeID, [LastPhysic" +
                "alDate] = @LastPhysicalDate, [HasAudioSystemInd] = @HasAudioSystemInd, [HasNavig" +
                "ationSystemInd] = @HasNavigationSystemInd, [TransshipPortName] = @TransshipPortN" +
                "ame, [SpecialInstructions] = @SpecialInstructions, [CustomsApprovedCoverSheetPri" +
                "ntedInd] = @CustomsApprovedCoverSheetPrintedInd, [PortReceiptNumber] = @PortRece" +
                "iptNumber, [VoyageChangeHoldDate] = @VoyageChangeHoldDate, [ReceivedBy] = @Recei" +
                "vedBy, [LastPhysicalBy] = @LastPhysicalBy, [BarCodeLabelPrintedInd] = @BarCodeLa" +
                "belPrintedInd, [VIVTagNumber] = @VIVTagNumber, [BarCodeLabelPrintedDate] = @BarC" +
                "odeLabelPrintedDate, [MechanicalExceptionInd] = @MechanicalExceptionInd, [LeftBe" +
                "hindInd] = @LeftBehindInd, [ITNNumber] = @ITNNumber WHERE (([AutoportExportVehic" +
                "lesID] = @Original_AutoportExportVehiclesID) AND ((@IsNull_CustomerID = 1 AND [C" +
                "ustomerID] IS NULL) OR ([CustomerID] = @Original_CustomerID)) AND ((@IsNull_Vehi" +
                "cleYear = 1 AND [VehicleYear] IS NULL) OR ([VehicleYear] = @Original_VehicleYear" +
                ")) AND ((@IsNull_Make = 1 AND [Make] IS NULL) OR ([Make] = @Original_Make)) AND " +
                "((@IsNull_Model = 1 AND [Model] IS NULL) OR ([Model] = @Original_Model)) AND ((@" +
                "IsNull_Bodystyle = 1 AND [Bodystyle] IS NULL) OR ([Bodystyle] = @Original_Bodyst" +
                "yle)) AND ((@IsNull_VIN = 1 AND [VIN] IS NULL) OR ([VIN] = @Original_VIN)) AND (" +
                "(@IsNull_Color = 1 AND [Color] IS NULL) OR ([Color] = @Original_Color)) AND ((@I" +
                "sNull_VehicleLength = 1 AND [VehicleLength] IS NULL) OR ([VehicleLength] = @Orig" +
                "inal_VehicleLength)) AND ((@IsNull_VehicleWidth = 1 AND [VehicleWidth] IS NULL) " +
                "OR ([VehicleWidth] = @Original_VehicleWidth)) AND ((@IsNull_VehicleHeight = 1 AN" +
                "D [VehicleHeight] IS NULL) OR ([VehicleHeight] = @Original_VehicleHeight)) AND (" +
                "(@IsNull_VehicleWeight = 1 AND [VehicleWeight] IS NULL) OR ([VehicleWeight] = @O" +
                "riginal_VehicleWeight)) AND ((@IsNull_VehicleCubicFeet = 1 AND [VehicleCubicFeet" +
                "] IS NULL) OR ([VehicleCubicFeet] = @Original_VehicleCubicFeet)) AND ((@IsNull_V" +
                "ehicleStatus = 1 AND [VehicleStatus] IS NULL) OR ([VehicleStatus] = @Original_Ve" +
                "hicleStatus)) AND ((@IsNull_TitleNumber = 1 AND [TitleNumber] IS NULL) OR ([Titl" +
                "eNumber] = @Original_TitleNumber)) AND ((@IsNull_TitleState = 1 AND [TitleState]" +
                " IS NULL) OR ([TitleState] = @Original_TitleState)) AND ((@IsNull_DestinationNam" +
                "e = 1 AND [DestinationName] IS NULL) OR ([DestinationName] = @Original_Destinati" +
                "onName)) AND ((@IsNull_ExporterID = 1 AND [ExporterID] IS NULL) OR ([ExporterID]" +
                " = @Original_ExporterID)) AND ((@IsNull_FreightForwarderID = 1 AND [FreightForwa" +
                "rderID] IS NULL) OR ([FreightForwarderID] = @Original_FreightForwarderID)) AND (" +
                "(@IsNull_VesselID = 1 AND [VesselID] IS NULL) OR ([VesselID] = @Original_VesselI" +
                "D)) AND ((@IsNull_BookingNumber = 1 AND [BookingNumber] IS NULL) OR ([BookingNum" +
                "ber] = @Original_BookingNumber)) AND ((@IsNull_VoyageNumber = 1 AND [VoyageNumbe" +
                "r] IS NULL) OR ([VoyageNumber] = @Original_VoyageNumber)) AND ((@IsNull_Customer" +
                "Identification = 1 AND [CustomerIdentification] IS NULL) OR ([CustomerIdentifica" +
                "tion] = @Original_CustomerIdentification)) AND ((@IsNull_SizeClass = 1 AND [Size" +
                "Class] IS NULL) OR ([SizeClass] = @Original_SizeClass)) AND ((@IsNull_BayLocatio" +
                "n = 1 AND [BayLocation] IS NULL) OR ([BayLocation] = @Original_BayLocation)) AND" +
                " ((@IsNull_EntryRate = 1 AND [EntryRate] IS NULL) OR ([EntryRate] = @Original_En" +
                "tryRate)) AND ((@IsNull_EntryRateOverrideInd = 1 AND [EntryRateOverrideInd] IS N" +
                "ULL) OR ([EntryRateOverrideInd] = @Original_EntryRateOverrideInd)) AND ((@IsNull" +
                "_PerDiemGraceDays = 1 AND [PerDiemGraceDays] IS NULL) OR ([PerDiemGraceDays] = @" +
                "Original_PerDiemGraceDays)) AND ((@IsNull_PerDiemGraceDaysOverrideInd = 1 AND [P" +
                "erDiemGraceDaysOverrideInd] IS NULL) OR ([PerDiemGraceDaysOverrideInd] = @Origin" +
                "al_PerDiemGraceDaysOverrideInd)) AND ((@IsNull_TotalCharge = 1 AND [TotalCharge]" +
                " IS NULL) OR ([TotalCharge] = @Original_TotalCharge)) AND ((@IsNull_DateReceived" +
                " = 1 AND [DateReceived] IS NULL) OR ([DateReceived] = @Original_DateReceived)) A" +
                "ND ((@IsNull_ReceivedExceptionDate = 1 AND [ReceivedExceptionDate] IS NULL) OR (" +
                "[ReceivedExceptionDate] = @Original_ReceivedExceptionDate)) AND ((@IsNull_DateSu" +
                "bmittedCustoms = 1 AND [DateSubmittedCustoms] IS NULL) OR ([DateSubmittedCustoms" +
                "] = @Original_DateSubmittedCustoms)) AND ((@IsNull_CustomsExceptionDate = 1 AND " +
                "[CustomsExceptionDate] IS NULL) OR ([CustomsExceptionDate] = @Original_CustomsEx" +
                "ceptionDate)) AND ((@IsNull_CustomsApprovedDate = 1 AND [CustomsApprovedDate] IS" +
                " NULL) OR ([CustomsApprovedDate] = @Original_CustomsApprovedDate)) AND ((@IsNull" +
                "_DateShipped = 1 AND [DateShipped] IS NULL) OR ([DateShipped] = @Original_DateSh" +
                "ipped)) AND ((@IsNull_BilledInd = 1 AND [BilledInd] IS NULL) OR ([BilledInd] = @" +
                "Original_BilledInd)) AND ((@IsNull_BillingID = 1 AND [BillingID] IS NULL) OR ([B" +
                "illingID] = @Original_BillingID)) AND ((@IsNull_DateBilled = 1 AND [DateBilled] " +
                "IS NULL) OR ([DateBilled] = @Original_DateBilled)) AND ((@IsNull_VINDecodedInd =" +
                " 1 AND [VINDecodedInd] IS NULL) OR ([VINDecodedInd] = @Original_VINDecodedInd)) " +
                "AND ((@IsNull_Note = 1 AND [Note] IS NULL) OR ([Note] = @Original_Note)) AND ((@" +
                "IsNull_RecordStatus = 1 AND [RecordStatus] IS NULL) OR ([RecordStatus] = @Origin" +
                "al_RecordStatus)) AND ((@IsNull_CreationDate = 1 AND [CreationDate] IS NULL) OR " +
                "([CreationDate] = @Original_CreationDate)) AND ((@IsNull_CreatedBy = 1 AND [Crea" +
                "tedBy] IS NULL) OR ([CreatedBy] = @Original_CreatedBy)) AND ((@IsNull_UpdatedDat" +
                "e = 1 AND [UpdatedDate] IS NULL) OR ([UpdatedDate] = @Original_UpdatedDate)) AND" +
                " ((@IsNull_UpdatedBy = 1 AND [UpdatedBy] IS NULL) OR ([UpdatedBy] = @Original_Up" +
                "datedBy)) AND ((@IsNull_CreditHoldInd = 1 AND [CreditHoldInd] IS NULL) OR ([Cred" +
                "itHoldInd] = @Original_CreditHoldInd)) AND ((@IsNull_CreditHoldBy = 1 AND [Credi" +
                "tHoldBy] IS NULL) OR ([CreditHoldBy] = @Original_CreditHoldBy)) AND ((@IsNull_Cu" +
                "stomsApprovalPrintedInd = 1 AND [CustomsApprovalPrintedInd] IS NULL) OR ([Custom" +
                "sApprovalPrintedInd] = @Original_CustomsApprovalPrintedInd)) AND ((@IsNull_Voyag" +
                "eID = 1 AND [VoyageID] IS NULL) OR ([VoyageID] = @Original_VoyageID)) AND ((@IsN" +
                "ull_CustomsCoverSheetPrintedInd = 1 AND [CustomsCoverSheetPrintedInd] IS NULL) O" +
                "R ([CustomsCoverSheetPrintedInd] = @Original_CustomsCoverSheetPrintedInd)) AND (" +
                "(@IsNull_NoStartInd = 1 AND [NoStartInd] IS NULL) OR ([NoStartInd] = @Original_N" +
                "oStartInd)) AND ((@IsNull_CustomsApprovalPrintedDate = 1 AND [CustomsApprovalPri" +
                "ntedDate] IS NULL) OR ([CustomsApprovalPrintedDate] = @Original_CustomsApprovalP" +
                "rintedDate)) AND ((@IsNull_ConsigneeID = 1 AND [ConsigneeID] IS NULL) OR ([Consi" +
                "gneeID] = @Original_ConsigneeID)) AND ((@IsNull_LastPhysicalDate = 1 AND [LastPh" +
                "ysicalDate] IS NULL) OR ([LastPhysicalDate] = @Original_LastPhysicalDate)) AND (" +
                "(@IsNull_HasAudioSystemInd = 1 AND [HasAudioSystemInd] IS NULL) OR ([HasAudioSys" +
                "temInd] = @Original_HasAudioSystemInd)) AND ((@IsNull_HasNavigationSystemInd = 1" +
                " AND [HasNavigationSystemInd] IS NULL) OR ([HasNavigationSystemInd] = @Original_" +
                "HasNavigationSystemInd)) AND ((@IsNull_TransshipPortName = 1 AND [TransshipPortN" +
                "ame] IS NULL) OR ([TransshipPortName] = @Original_TransshipPortName)) AND ((@IsN" +
                "ull_SpecialInstructions = 1 AND [SpecialInstructions] IS NULL) OR ([SpecialInstr" +
                "uctions] = @Original_SpecialInstructions)) AND ((@IsNull_CustomsApprovedCoverShe" +
                "etPrintedInd = 1 AND [CustomsApprovedCoverSheetPrintedInd] IS NULL) OR ([Customs" +
                "ApprovedCoverSheetPrintedInd] = @Original_CustomsApprovedCoverSheetPrintedInd)) " +
                "AND ((@IsNull_PortReceiptNumber = 1 AND [PortReceiptNumber] IS NULL) OR ([PortRe" +
                "ceiptNumber] = @Original_PortReceiptNumber)) AND ((@IsNull_VoyageChangeHoldDate " +
                "= 1 AND [VoyageChangeHoldDate] IS NULL) OR ([VoyageChangeHoldDate] = @Original_V" +
                "oyageChangeHoldDate)) AND ((@IsNull_ReceivedBy = 1 AND [ReceivedBy] IS NULL) OR " +
                "([ReceivedBy] = @Original_ReceivedBy)) AND ((@IsNull_LastPhysicalBy = 1 AND [Las" +
                "tPhysicalBy] IS NULL) OR ([LastPhysicalBy] = @Original_LastPhysicalBy)) AND ((@I" +
                "sNull_BarCodeLabelPrintedInd = 1 AND [BarCodeLabelPrintedInd] IS NULL) OR ([BarC" +
                "odeLabelPrintedInd] = @Original_BarCodeLabelPrintedInd)) AND ((@IsNull_VIVTagNum" +
                "ber = 1 AND [VIVTagNumber] IS NULL) OR ([VIVTagNumber] = @Original_VIVTagNumber)" +
                ") AND ((@IsNull_BarCodeLabelPrintedDate = 1 AND [BarCodeLabelPrintedDate] IS NUL" +
                "L) OR ([BarCodeLabelPrintedDate] = @Original_BarCodeLabelPrintedDate)) AND ((@Is" +
                "Null_MechanicalExceptionInd = 1 AND [MechanicalExceptionInd] IS NULL) OR ([Mecha" +
                "nicalExceptionInd] = @Original_MechanicalExceptionInd)) AND ((@IsNull_LeftBehind" +
                "Ind = 1 AND [LeftBehindInd] IS NULL) OR ([LeftBehindInd] = @Original_LeftBehindI" +
                "nd)) AND ((@IsNull_ITNNumber = 1 AND [ITNNumber] IS NULL) OR ([ITNNumber] = @Ori" +
                "ginal_ITNNumber)));\r\nSELECT AutoportExportVehiclesID, CustomerID, VehicleYear, M" +
                "ake, Model, Bodystyle, VIN, Color, VehicleLength, VehicleWidth, VehicleHeight, V" +
                "ehicleWeight, VehicleCubicFeet, VehicleStatus, TitleNumber, TitleState, Destinat" +
                "ionName, ExporterID, FreightForwarderID, VesselID, BookingNumber, VoyageNumber, " +
                "CustomerIdentification, SizeClass, BayLocation, EntryRate, EntryRateOverrideInd," +
                " PerDiemGraceDays, PerDiemGraceDaysOverrideInd, TotalCharge, DateReceived, Recei" +
                "vedExceptionDate, DateSubmittedCustoms, CustomsExceptionDate, CustomsApprovedDat" +
                "e, DateShipped, BilledInd, BillingID, DateBilled, VINDecodedInd, Note, RecordSta" +
                "tus, CreationDate, CreatedBy, UpdatedDate, UpdatedBy, CreditHoldInd, CreditHoldB" +
                "y, CustomsApprovalPrintedInd, VoyageID, CustomsCoverSheetPrintedInd, NoStartInd," +
                " CustomsApprovalPrintedDate, ConsigneeID, LastPhysicalDate, HasAudioSystemInd, H" +
                "asNavigationSystemInd, TransshipPortName, SpecialInstructions, CustomsApprovedCo" +
                "verSheetPrintedInd, PortReceiptNumber, VoyageChangeHoldDate, ReceivedBy, LastPhy" +
                "sicalBy, BarCodeLabelPrintedInd, VIVTagNumber, BarCodeLabelPrintedDate, Mechanic" +
                "alExceptionInd, LeftBehindInd, ITNNumber FROM AutoportExportVehicles WHERE (Auto" +
                "portExportVehiclesID = @AutoportExportVehiclesID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleYear", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Make", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Make", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Model", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bodystyle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bodystyle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Color", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleLength", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleLength", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleWidth", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleWidth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleHeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleHeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleWeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleCubicFeet", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleCubicFeet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TitleNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TitleNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TitleState", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TitleState", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DestinationName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DestinationName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExporterID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExporterID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FreightForwarderID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreightForwarderID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VesselID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VesselID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BookingNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BookingNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VoyageNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoyageNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerIdentification", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerIdentification", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SizeClass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SizeClass", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BayLocation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BayLocation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "EntryRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryRateOverrideInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryRateOverrideInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PerDiemGraceDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PerDiemGraceDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PerDiemGraceDaysOverrideInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PerDiemGraceDaysOverrideInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalCharge", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "TotalCharge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateReceived", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateReceived", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivedExceptionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedExceptionDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateSubmittedCustoms", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateSubmittedCustoms", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomsExceptionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsExceptionDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomsApprovedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsApprovedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateShipped", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateShipped", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BilledInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BilledInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillingID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillingID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateBilled", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateBilled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VINDecodedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VINDecodedInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Note", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Note", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreditHoldInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditHoldInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreditHoldBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditHoldBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomsApprovalPrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsApprovalPrintedInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VoyageID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoyageID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomsCoverSheetPrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsCoverSheetPrintedInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoStartInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoStartInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomsApprovalPrintedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsApprovalPrintedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConsigneeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsigneeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastPhysicalDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPhysicalDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasAudioSystemInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasAudioSystemInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasNavigationSystemInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasNavigationSystemInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransshipPortName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransshipPortName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpecialInstructions", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialInstructions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomsApprovedCoverSheetPrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsApprovedCoverSheetPrintedInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PortReceiptNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PortReceiptNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VoyageChangeHoldDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoyageChangeHoldDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastPhysicalBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPhysicalBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BarCodeLabelPrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BarCodeLabelPrintedInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIVTagNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIVTagNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BarCodeLabelPrintedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BarCodeLabelPrintedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MechanicalExceptionInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MechanicalExceptionInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LeftBehindInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeftBehindInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ITNNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITNNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AutoportExportVehiclesID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutoportExportVehiclesID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VehicleYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleYear", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleYear", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Make", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Make", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Make", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Make", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Model", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Model", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bodystyle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bodystyle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bodystyle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bodystyle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VIN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Color", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Color", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VehicleLength", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleLength", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleLength", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleLength", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VehicleWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleWidth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleWidth", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleWidth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VehicleHeight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleHeight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleHeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleHeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VehicleWeight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleWeight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleWeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VehicleCubicFeet", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleCubicFeet", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleCubicFeet", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleCubicFeet", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VehicleStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TitleNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TitleNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TitleNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TitleNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TitleState", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TitleState", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TitleState", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TitleState", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DestinationName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DestinationName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DestinationName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DestinationName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExporterID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExporterID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExporterID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExporterID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FreightForwarderID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreightForwarderID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FreightForwarderID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreightForwarderID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VesselID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VesselID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VesselID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VesselID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BookingNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BookingNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BookingNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BookingNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VoyageNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoyageNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VoyageNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoyageNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomerIdentification", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerIdentification", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerIdentification", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerIdentification", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SizeClass", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SizeClass", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SizeClass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SizeClass", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BayLocation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BayLocation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BayLocation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BayLocation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EntryRate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryRate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EntryRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "EntryRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EntryRateOverrideInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryRateOverrideInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EntryRateOverrideInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryRateOverrideInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PerDiemGraceDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PerDiemGraceDays", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PerDiemGraceDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PerDiemGraceDays", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PerDiemGraceDaysOverrideInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PerDiemGraceDaysOverrideInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PerDiemGraceDaysOverrideInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PerDiemGraceDaysOverrideInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TotalCharge", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalCharge", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalCharge", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "TotalCharge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateReceived", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateReceived", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateReceived", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateReceived", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReceivedExceptionDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedExceptionDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReceivedExceptionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedExceptionDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateSubmittedCustoms", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateSubmittedCustoms", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateSubmittedCustoms", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateSubmittedCustoms", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomsExceptionDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsExceptionDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomsExceptionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsExceptionDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomsApprovedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsApprovedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomsApprovedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsApprovedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateShipped", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateShipped", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateShipped", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateShipped", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BilledInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BilledInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BilledInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BilledInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BillingID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillingID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BillingID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillingID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateBilled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateBilled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateBilled", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateBilled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VINDecodedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VINDecodedInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VINDecodedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VINDecodedInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Note", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Note", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Note", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Note", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RecordStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreationDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UpdatedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UpdatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreditHoldInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditHoldInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreditHoldInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditHoldInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreditHoldBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditHoldBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreditHoldBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditHoldBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomsApprovalPrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsApprovalPrintedInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomsApprovalPrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsApprovalPrintedInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VoyageID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoyageID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VoyageID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoyageID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomsCoverSheetPrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsCoverSheetPrintedInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomsCoverSheetPrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsCoverSheetPrintedInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoStartInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoStartInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoStartInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoStartInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomsApprovalPrintedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsApprovalPrintedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomsApprovalPrintedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsApprovalPrintedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConsigneeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsigneeID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConsigneeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsigneeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastPhysicalDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPhysicalDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastPhysicalDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPhysicalDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HasAudioSystemInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasAudioSystemInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HasAudioSystemInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasAudioSystemInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HasNavigationSystemInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasNavigationSystemInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HasNavigationSystemInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasNavigationSystemInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TransshipPortName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransshipPortName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransshipPortName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransshipPortName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SpecialInstructions", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialInstructions", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SpecialInstructions", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialInstructions", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomsApprovedCoverSheetPrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsApprovedCoverSheetPrintedInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomsApprovedCoverSheetPrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsApprovedCoverSheetPrintedInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PortReceiptNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PortReceiptNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PortReceiptNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PortReceiptNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VoyageChangeHoldDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoyageChangeHoldDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VoyageChangeHoldDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoyageChangeHoldDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReceivedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReceivedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastPhysicalBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPhysicalBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastPhysicalBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPhysicalBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BarCodeLabelPrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BarCodeLabelPrintedInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BarCodeLabelPrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BarCodeLabelPrintedInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VIVTagNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIVTagNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VIVTagNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIVTagNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BarCodeLabelPrintedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BarCodeLabelPrintedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BarCodeLabelPrintedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BarCodeLabelPrintedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MechanicalExceptionInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MechanicalExceptionInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MechanicalExceptionInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MechanicalExceptionInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LeftBehindInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeftBehindInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LeftBehindInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeftBehindInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ITNNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITNNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ITNNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITNNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AutoportExportVehiclesID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AutoportExportVehiclesID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutoExport.Properties.Settings.Default.AutoExport_TestConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT AutoportExportVehiclesID, CustomerID, VehicleYear, Make, Model, Bodystyle, VIN, Color, VehicleLength, VehicleWidth, VehicleHeight, VehicleWeight, VehicleCubicFeet, VehicleStatus, TitleNumber, TitleState, DestinationName, ExporterID, FreightForwarderID, VesselID, BookingNumber, VoyageNumber, CustomerIdentification, SizeClass, BayLocation, EntryRate, EntryRateOverrideInd, PerDiemGraceDays, PerDiemGraceDaysOverrideInd, TotalCharge, DateReceived, ReceivedExceptionDate, DateSubmittedCustoms, CustomsExceptionDate, CustomsApprovedDate, DateShipped, BilledInd, BillingID, DateBilled, VINDecodedInd, Note, RecordStatus, CreationDate, CreatedBy, UpdatedDate, UpdatedBy, CreditHoldInd, CreditHoldBy, CustomsApprovalPrintedInd, VoyageID, CustomsCoverSheetPrintedInd, NoStartInd, CustomsApprovalPrintedDate, ConsigneeID, LastPhysicalDate, HasAudioSystemInd, HasNavigationSystemInd, TransshipPortName, SpecialInstructions, CustomsApprovedCoverSheetPrintedInd, PortReceiptNumber, VoyageChangeHoldDate, ReceivedBy, LastPhysicalBy, BarCodeLabelPrintedInd, VIVTagNumber, BarCodeLabelPrintedDate, MechanicalExceptionInd, LeftBehindInd, ITNNumber FROM dbo.AutoportExportVehicles";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutoExport_TestDataSet.AutoportExportVehiclesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutoExport_TestDataSet.AutoportExportVehiclesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutoExport_TestDataSet.AutoportExportVehiclesDataTable dataTable = new AutoExport_TestDataSet.AutoportExportVehiclesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoExport_TestDataSet.AutoportExportVehiclesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoExport_TestDataSet dataSet) {
            return this.Adapter.Update(dataSet, "AutoportExportVehicles");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_AutoportExportVehiclesID, 
                    global::System.Nullable<int> Original_CustomerID, 
                    string Original_VehicleYear, 
                    string Original_Make, 
                    string Original_Model, 
                    string Original_Bodystyle, 
                    string Original_VIN, 
                    string Original_Color, 
                    string Original_VehicleLength, 
                    string Original_VehicleWidth, 
                    string Original_VehicleHeight, 
                    string Original_VehicleWeight, 
                    string Original_VehicleCubicFeet, 
                    string Original_VehicleStatus, 
                    string Original_TitleNumber, 
                    string Original_TitleState, 
                    string Original_DestinationName, 
                    global::System.Nullable<int> Original_ExporterID, 
                    global::System.Nullable<int> Original_FreightForwarderID, 
                    global::System.Nullable<int> Original_VesselID, 
                    string Original_BookingNumber, 
                    string Original_VoyageNumber, 
                    string Original_CustomerIdentification, 
                    string Original_SizeClass, 
                    string Original_BayLocation, 
                    global::System.Nullable<decimal> Original_EntryRate, 
                    global::System.Nullable<int> Original_EntryRateOverrideInd, 
                    global::System.Nullable<int> Original_PerDiemGraceDays, 
                    global::System.Nullable<int> Original_PerDiemGraceDaysOverrideInd, 
                    global::System.Nullable<decimal> Original_TotalCharge, 
                    global::System.Nullable<global::System.DateTime> Original_DateReceived, 
                    global::System.Nullable<global::System.DateTime> Original_ReceivedExceptionDate, 
                    global::System.Nullable<global::System.DateTime> Original_DateSubmittedCustoms, 
                    global::System.Nullable<global::System.DateTime> Original_CustomsExceptionDate, 
                    global::System.Nullable<global::System.DateTime> Original_CustomsApprovedDate, 
                    global::System.Nullable<global::System.DateTime> Original_DateShipped, 
                    global::System.Nullable<int> Original_BilledInd, 
                    global::System.Nullable<int> Original_BillingID, 
                    global::System.Nullable<global::System.DateTime> Original_DateBilled, 
                    global::System.Nullable<int> Original_VINDecodedInd, 
                    string Original_Note, 
                    string Original_RecordStatus, 
                    global::System.Nullable<global::System.DateTime> Original_CreationDate, 
                    string Original_CreatedBy, 
                    global::System.Nullable<global::System.DateTime> Original_UpdatedDate, 
                    string Original_UpdatedBy, 
                    global::System.Nullable<int> Original_CreditHoldInd, 
                    string Original_CreditHoldBy, 
                    global::System.Nullable<int> Original_CustomsApprovalPrintedInd, 
                    global::System.Nullable<int> Original_VoyageID, 
                    global::System.Nullable<int> Original_CustomsCoverSheetPrintedInd, 
                    global::System.Nullable<int> Original_NoStartInd, 
                    global::System.Nullable<global::System.DateTime> Original_CustomsApprovalPrintedDate, 
                    global::System.Nullable<int> Original_ConsigneeID, 
                    global::System.Nullable<global::System.DateTime> Original_LastPhysicalDate, 
                    global::System.Nullable<int> Original_HasAudioSystemInd, 
                    global::System.Nullable<int> Original_HasNavigationSystemInd, 
                    string Original_TransshipPortName, 
                    string Original_SpecialInstructions, 
                    global::System.Nullable<int> Original_CustomsApprovedCoverSheetPrintedInd, 
                    string Original_PortReceiptNumber, 
                    global::System.Nullable<global::System.DateTime> Original_VoyageChangeHoldDate, 
                    string Original_ReceivedBy, 
                    string Original_LastPhysicalBy, 
                    global::System.Nullable<int> Original_BarCodeLabelPrintedInd, 
                    string Original_VIVTagNumber, 
                    global::System.Nullable<global::System.DateTime> Original_BarCodeLabelPrintedDate, 
                    global::System.Nullable<int> Original_MechanicalExceptionInd, 
                    global::System.Nullable<int> Original_LeftBehindInd, 
                    string Original_ITNNumber) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_AutoportExportVehiclesID));
            if ((Original_CustomerID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_CustomerID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_VehicleYear == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_VehicleYear));
            }
            if ((Original_Make == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Make));
            }
            if ((Original_Model == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Model));
            }
            if ((Original_Bodystyle == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Bodystyle));
            }
            if ((Original_VIN == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_VIN));
            }
            if ((Original_Color == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Color));
            }
            if ((Original_VehicleLength == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_VehicleLength));
            }
            if ((Original_VehicleWidth == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_VehicleWidth));
            }
            if ((Original_VehicleHeight == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_VehicleHeight));
            }
            if ((Original_VehicleWeight == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_VehicleWeight));
            }
            if ((Original_VehicleCubicFeet == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_VehicleCubicFeet));
            }
            if ((Original_VehicleStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_VehicleStatus));
            }
            if ((Original_TitleNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_TitleNumber));
            }
            if ((Original_TitleState == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_TitleState));
            }
            if ((Original_DestinationName == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_DestinationName));
            }
            if ((Original_ExporterID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((int)(Original_ExporterID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_FreightForwarderID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((int)(Original_FreightForwarderID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_VesselID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((int)(Original_VesselID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_BookingNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_BookingNumber));
            }
            if ((Original_VoyageNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_VoyageNumber));
            }
            if ((Original_CustomerIdentification == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_CustomerIdentification));
            }
            if ((Original_SizeClass == null)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_SizeClass));
            }
            if ((Original_BayLocation == null)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_BayLocation));
            }
            if ((Original_EntryRate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((decimal)(Original_EntryRate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_EntryRateOverrideInd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((int)(Original_EntryRateOverrideInd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_PerDiemGraceDays.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((int)(Original_PerDiemGraceDays.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_PerDiemGraceDaysOverrideInd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((int)(Original_PerDiemGraceDaysOverrideInd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_TotalCharge.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((decimal)(Original_TotalCharge.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_DateReceived.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((System.DateTime)(Original_DateReceived.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_ReceivedExceptionDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((System.DateTime)(Original_ReceivedExceptionDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_DateSubmittedCustoms.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((System.DateTime)(Original_DateSubmittedCustoms.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_CustomsExceptionDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((System.DateTime)(Original_CustomsExceptionDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_CustomsApprovedDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((System.DateTime)(Original_CustomsApprovedDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_DateShipped.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((System.DateTime)(Original_DateShipped.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_BilledInd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((int)(Original_BilledInd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_BillingID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((int)(Original_BillingID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_DateBilled.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((System.DateTime)(Original_DateBilled.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_VINDecodedInd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((int)(Original_VINDecodedInd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_Note == null)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((string)(Original_Note));
            }
            if ((Original_RecordStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((string)(Original_RecordStatus));
            }
            if ((Original_CreationDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((System.DateTime)(Original_CreationDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_CreatedBy == null)) {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[86].Value = ((string)(Original_CreatedBy));
            }
            if ((Original_UpdatedDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[88].Value = ((System.DateTime)(Original_UpdatedDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((Original_UpdatedBy == null)) {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[90].Value = ((string)(Original_UpdatedBy));
            }
            if ((Original_CreditHoldInd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[92].Value = ((int)(Original_CreditHoldInd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((Original_CreditHoldBy == null)) {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[94].Value = ((string)(Original_CreditHoldBy));
            }
            if ((Original_CustomsApprovalPrintedInd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[96].Value = ((int)(Original_CustomsApprovalPrintedInd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((Original_VoyageID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[98].Value = ((int)(Original_VoyageID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((Original_CustomsCoverSheetPrintedInd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[100].Value = ((int)(Original_CustomsCoverSheetPrintedInd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((Original_NoStartInd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[102].Value = ((int)(Original_NoStartInd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((Original_CustomsApprovalPrintedDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[104].Value = ((System.DateTime)(Original_CustomsApprovalPrintedDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((Original_ConsigneeID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[106].Value = ((int)(Original_ConsigneeID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            if ((Original_LastPhysicalDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[108].Value = ((System.DateTime)(Original_LastPhysicalDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            if ((Original_HasAudioSystemInd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[110].Value = ((int)(Original_HasAudioSystemInd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            if ((Original_HasNavigationSystemInd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[112].Value = ((int)(Original_HasNavigationSystemInd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((Original_TransshipPortName == null)) {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[114].Value = ((string)(Original_TransshipPortName));
            }
            if ((Original_SpecialInstructions == null)) {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[116].Value = ((string)(Original_SpecialInstructions));
            }
            if ((Original_CustomsApprovedCoverSheetPrintedInd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[118].Value = ((int)(Original_CustomsApprovedCoverSheetPrintedInd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            if ((Original_PortReceiptNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[120].Value = ((string)(Original_PortReceiptNumber));
            }
            if ((Original_VoyageChangeHoldDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[122].Value = ((System.DateTime)(Original_VoyageChangeHoldDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            if ((Original_ReceivedBy == null)) {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[124].Value = ((string)(Original_ReceivedBy));
            }
            if ((Original_LastPhysicalBy == null)) {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[126].Value = ((string)(Original_LastPhysicalBy));
            }
            if ((Original_BarCodeLabelPrintedInd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[128].Value = ((int)(Original_BarCodeLabelPrintedInd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            if ((Original_VIVTagNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[130].Value = ((string)(Original_VIVTagNumber));
            }
            if ((Original_BarCodeLabelPrintedDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[132].Value = ((System.DateTime)(Original_BarCodeLabelPrintedDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            if ((Original_MechanicalExceptionInd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[134].Value = ((int)(Original_MechanicalExceptionInd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            if ((Original_LeftBehindInd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[136].Value = ((int)(Original_LeftBehindInd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            if ((Original_ITNNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[138].Value = ((string)(Original_ITNNumber));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<int> CustomerID, 
                    string VehicleYear, 
                    string Make, 
                    string Model, 
                    string Bodystyle, 
                    string VIN, 
                    string Color, 
                    string VehicleLength, 
                    string VehicleWidth, 
                    string VehicleHeight, 
                    string VehicleWeight, 
                    string VehicleCubicFeet, 
                    string VehicleStatus, 
                    string TitleNumber, 
                    string TitleState, 
                    string DestinationName, 
                    global::System.Nullable<int> ExporterID, 
                    global::System.Nullable<int> FreightForwarderID, 
                    global::System.Nullable<int> VesselID, 
                    string BookingNumber, 
                    string VoyageNumber, 
                    string CustomerIdentification, 
                    string SizeClass, 
                    string BayLocation, 
                    global::System.Nullable<decimal> EntryRate, 
                    global::System.Nullable<int> EntryRateOverrideInd, 
                    global::System.Nullable<int> PerDiemGraceDays, 
                    global::System.Nullable<int> PerDiemGraceDaysOverrideInd, 
                    global::System.Nullable<decimal> TotalCharge, 
                    global::System.Nullable<global::System.DateTime> DateReceived, 
                    global::System.Nullable<global::System.DateTime> ReceivedExceptionDate, 
                    global::System.Nullable<global::System.DateTime> DateSubmittedCustoms, 
                    global::System.Nullable<global::System.DateTime> CustomsExceptionDate, 
                    global::System.Nullable<global::System.DateTime> CustomsApprovedDate, 
                    global::System.Nullable<global::System.DateTime> DateShipped, 
                    global::System.Nullable<int> BilledInd, 
                    global::System.Nullable<int> BillingID, 
                    global::System.Nullable<global::System.DateTime> DateBilled, 
                    global::System.Nullable<int> VINDecodedInd, 
                    string Note, 
                    string RecordStatus, 
                    global::System.Nullable<global::System.DateTime> CreationDate, 
                    string CreatedBy, 
                    global::System.Nullable<global::System.DateTime> UpdatedDate, 
                    string UpdatedBy, 
                    global::System.Nullable<int> CreditHoldInd, 
                    string CreditHoldBy, 
                    global::System.Nullable<int> CustomsApprovalPrintedInd, 
                    global::System.Nullable<int> VoyageID, 
                    global::System.Nullable<int> CustomsCoverSheetPrintedInd, 
                    global::System.Nullable<int> NoStartInd, 
                    global::System.Nullable<global::System.DateTime> CustomsApprovalPrintedDate, 
                    global::System.Nullable<int> ConsigneeID, 
                    global::System.Nullable<global::System.DateTime> LastPhysicalDate, 
                    global::System.Nullable<int> HasAudioSystemInd, 
                    global::System.Nullable<int> HasNavigationSystemInd, 
                    string TransshipPortName, 
                    string SpecialInstructions, 
                    global::System.Nullable<int> CustomsApprovedCoverSheetPrintedInd, 
                    string PortReceiptNumber, 
                    global::System.Nullable<global::System.DateTime> VoyageChangeHoldDate, 
                    string ReceivedBy, 
                    string LastPhysicalBy, 
                    global::System.Nullable<int> BarCodeLabelPrintedInd, 
                    string VIVTagNumber, 
                    global::System.Nullable<global::System.DateTime> BarCodeLabelPrintedDate, 
                    global::System.Nullable<int> MechanicalExceptionInd, 
                    global::System.Nullable<int> LeftBehindInd, 
                    string ITNNumber) {
            if ((CustomerID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(CustomerID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((VehicleYear == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(VehicleYear));
            }
            if ((Make == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Make));
            }
            if ((Model == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Model));
            }
            if ((Bodystyle == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Bodystyle));
            }
            if ((VIN == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(VIN));
            }
            if ((Color == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Color));
            }
            if ((VehicleLength == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(VehicleLength));
            }
            if ((VehicleWidth == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(VehicleWidth));
            }
            if ((VehicleHeight == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(VehicleHeight));
            }
            if ((VehicleWeight == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(VehicleWeight));
            }
            if ((VehicleCubicFeet == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(VehicleCubicFeet));
            }
            if ((VehicleStatus == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(VehicleStatus));
            }
            if ((TitleNumber == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(TitleNumber));
            }
            if ((TitleState == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(TitleState));
            }
            if ((DestinationName == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(DestinationName));
            }
            if ((ExporterID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(ExporterID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((FreightForwarderID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(FreightForwarderID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((VesselID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(VesselID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((BookingNumber == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(BookingNumber));
            }
            if ((VoyageNumber == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(VoyageNumber));
            }
            if ((CustomerIdentification == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(CustomerIdentification));
            }
            if ((SizeClass == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(SizeClass));
            }
            if ((BayLocation == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(BayLocation));
            }
            if ((EntryRate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(EntryRate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((EntryRateOverrideInd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((int)(EntryRateOverrideInd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((PerDiemGraceDays.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((int)(PerDiemGraceDays.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((PerDiemGraceDaysOverrideInd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((int)(PerDiemGraceDaysOverrideInd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((TotalCharge.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(TotalCharge.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((DateReceived.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((System.DateTime)(DateReceived.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((ReceivedExceptionDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((System.DateTime)(ReceivedExceptionDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((DateSubmittedCustoms.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((System.DateTime)(DateSubmittedCustoms.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((CustomsExceptionDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((System.DateTime)(CustomsExceptionDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((CustomsApprovedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((System.DateTime)(CustomsApprovedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((DateShipped.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((System.DateTime)(DateShipped.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((BilledInd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((int)(BilledInd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((BillingID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((int)(BillingID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((DateBilled.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((System.DateTime)(DateBilled.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((VINDecodedInd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((int)(VINDecodedInd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Note == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(Note));
            }
            if ((RecordStatus == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(RecordStatus));
            }
            if ((CreationDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((System.DateTime)(CreationDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((CreatedBy == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(CreatedBy));
            }
            if ((UpdatedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((System.DateTime)(UpdatedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((UpdatedBy == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(UpdatedBy));
            }
            if ((CreditHoldInd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((int)(CreditHoldInd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((CreditHoldBy == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(CreditHoldBy));
            }
            if ((CustomsApprovalPrintedInd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((int)(CustomsApprovalPrintedInd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((VoyageID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((int)(VoyageID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((CustomsCoverSheetPrintedInd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((int)(CustomsCoverSheetPrintedInd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((NoStartInd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((int)(NoStartInd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((CustomsApprovalPrintedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((System.DateTime)(CustomsApprovalPrintedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((ConsigneeID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((int)(ConsigneeID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((LastPhysicalDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((System.DateTime)(LastPhysicalDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((HasAudioSystemInd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((int)(HasAudioSystemInd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((HasNavigationSystemInd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((int)(HasNavigationSystemInd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((TransshipPortName == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(TransshipPortName));
            }
            if ((SpecialInstructions == null)) {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(SpecialInstructions));
            }
            if ((CustomsApprovedCoverSheetPrintedInd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((int)(CustomsApprovedCoverSheetPrintedInd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((PortReceiptNumber == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(PortReceiptNumber));
            }
            if ((VoyageChangeHoldDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((System.DateTime)(VoyageChangeHoldDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((ReceivedBy == null)) {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = ((string)(ReceivedBy));
            }
            if ((LastPhysicalBy == null)) {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = ((string)(LastPhysicalBy));
            }
            if ((BarCodeLabelPrintedInd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[63].Value = ((int)(BarCodeLabelPrintedInd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((VIVTagNumber == null)) {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(VIVTagNumber));
            }
            if ((BarCodeLabelPrintedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[65].Value = ((System.DateTime)(BarCodeLabelPrintedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((MechanicalExceptionInd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[66].Value = ((int)(MechanicalExceptionInd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((LeftBehindInd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[67].Value = ((int)(LeftBehindInd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((ITNNumber == null)) {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = ((string)(ITNNumber));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> CustomerID, 
                    string VehicleYear, 
                    string Make, 
                    string Model, 
                    string Bodystyle, 
                    string VIN, 
                    string Color, 
                    string VehicleLength, 
                    string VehicleWidth, 
                    string VehicleHeight, 
                    string VehicleWeight, 
                    string VehicleCubicFeet, 
                    string VehicleStatus, 
                    string TitleNumber, 
                    string TitleState, 
                    string DestinationName, 
                    global::System.Nullable<int> ExporterID, 
                    global::System.Nullable<int> FreightForwarderID, 
                    global::System.Nullable<int> VesselID, 
                    string BookingNumber, 
                    string VoyageNumber, 
                    string CustomerIdentification, 
                    string SizeClass, 
                    string BayLocation, 
                    global::System.Nullable<decimal> EntryRate, 
                    global::System.Nullable<int> EntryRateOverrideInd, 
                    global::System.Nullable<int> PerDiemGraceDays, 
                    global::System.Nullable<int> PerDiemGraceDaysOverrideInd, 
                    global::System.Nullable<decimal> TotalCharge, 
                    global::System.Nullable<global::System.DateTime> DateReceived, 
                    global::System.Nullable<global::System.DateTime> ReceivedExceptionDate, 
                    global::System.Nullable<global::System.DateTime> DateSubmittedCustoms, 
                    global::System.Nullable<global::System.DateTime> CustomsExceptionDate, 
                    global::System.Nullable<global::System.DateTime> CustomsApprovedDate, 
                    global::System.Nullable<global::System.DateTime> DateShipped, 
                    global::System.Nullable<int> BilledInd, 
                    global::System.Nullable<int> BillingID, 
                    global::System.Nullable<global::System.DateTime> DateBilled, 
                    global::System.Nullable<int> VINDecodedInd, 
                    string Note, 
                    string RecordStatus, 
                    global::System.Nullable<global::System.DateTime> CreationDate, 
                    string CreatedBy, 
                    global::System.Nullable<global::System.DateTime> UpdatedDate, 
                    string UpdatedBy, 
                    global::System.Nullable<int> CreditHoldInd, 
                    string CreditHoldBy, 
                    global::System.Nullable<int> CustomsApprovalPrintedInd, 
                    global::System.Nullable<int> VoyageID, 
                    global::System.Nullable<int> CustomsCoverSheetPrintedInd, 
                    global::System.Nullable<int> NoStartInd, 
                    global::System.Nullable<global::System.DateTime> CustomsApprovalPrintedDate, 
                    global::System.Nullable<int> ConsigneeID, 
                    global::System.Nullable<global::System.DateTime> LastPhysicalDate, 
                    global::System.Nullable<int> HasAudioSystemInd, 
                    global::System.Nullable<int> HasNavigationSystemInd, 
                    string TransshipPortName, 
                    string SpecialInstructions, 
                    global::System.Nullable<int> CustomsApprovedCoverSheetPrintedInd, 
                    string PortReceiptNumber, 
                    global::System.Nullable<global::System.DateTime> VoyageChangeHoldDate, 
                    string ReceivedBy, 
                    string LastPhysicalBy, 
                    global::System.Nullable<int> BarCodeLabelPrintedInd, 
                    string VIVTagNumber, 
                    global::System.Nullable<global::System.DateTime> BarCodeLabelPrintedDate, 
                    global::System.Nullable<int> MechanicalExceptionInd, 
                    global::System.Nullable<int> LeftBehindInd, 
                    string ITNNumber, 
                    int Original_AutoportExportVehiclesID, 
                    global::System.Nullable<int> Original_CustomerID, 
                    string Original_VehicleYear, 
                    string Original_Make, 
                    string Original_Model, 
                    string Original_Bodystyle, 
                    string Original_VIN, 
                    string Original_Color, 
                    string Original_VehicleLength, 
                    string Original_VehicleWidth, 
                    string Original_VehicleHeight, 
                    string Original_VehicleWeight, 
                    string Original_VehicleCubicFeet, 
                    string Original_VehicleStatus, 
                    string Original_TitleNumber, 
                    string Original_TitleState, 
                    string Original_DestinationName, 
                    global::System.Nullable<int> Original_ExporterID, 
                    global::System.Nullable<int> Original_FreightForwarderID, 
                    global::System.Nullable<int> Original_VesselID, 
                    string Original_BookingNumber, 
                    string Original_VoyageNumber, 
                    string Original_CustomerIdentification, 
                    string Original_SizeClass, 
                    string Original_BayLocation, 
                    global::System.Nullable<decimal> Original_EntryRate, 
                    global::System.Nullable<int> Original_EntryRateOverrideInd, 
                    global::System.Nullable<int> Original_PerDiemGraceDays, 
                    global::System.Nullable<int> Original_PerDiemGraceDaysOverrideInd, 
                    global::System.Nullable<decimal> Original_TotalCharge, 
                    global::System.Nullable<global::System.DateTime> Original_DateReceived, 
                    global::System.Nullable<global::System.DateTime> Original_ReceivedExceptionDate, 
                    global::System.Nullable<global::System.DateTime> Original_DateSubmittedCustoms, 
                    global::System.Nullable<global::System.DateTime> Original_CustomsExceptionDate, 
                    global::System.Nullable<global::System.DateTime> Original_CustomsApprovedDate, 
                    global::System.Nullable<global::System.DateTime> Original_DateShipped, 
                    global::System.Nullable<int> Original_BilledInd, 
                    global::System.Nullable<int> Original_BillingID, 
                    global::System.Nullable<global::System.DateTime> Original_DateBilled, 
                    global::System.Nullable<int> Original_VINDecodedInd, 
                    string Original_Note, 
                    string Original_RecordStatus, 
                    global::System.Nullable<global::System.DateTime> Original_CreationDate, 
                    string Original_CreatedBy, 
                    global::System.Nullable<global::System.DateTime> Original_UpdatedDate, 
                    string Original_UpdatedBy, 
                    global::System.Nullable<int> Original_CreditHoldInd, 
                    string Original_CreditHoldBy, 
                    global::System.Nullable<int> Original_CustomsApprovalPrintedInd, 
                    global::System.Nullable<int> Original_VoyageID, 
                    global::System.Nullable<int> Original_CustomsCoverSheetPrintedInd, 
                    global::System.Nullable<int> Original_NoStartInd, 
                    global::System.Nullable<global::System.DateTime> Original_CustomsApprovalPrintedDate, 
                    global::System.Nullable<int> Original_ConsigneeID, 
                    global::System.Nullable<global::System.DateTime> Original_LastPhysicalDate, 
                    global::System.Nullable<int> Original_HasAudioSystemInd, 
                    global::System.Nullable<int> Original_HasNavigationSystemInd, 
                    string Original_TransshipPortName, 
                    string Original_SpecialInstructions, 
                    global::System.Nullable<int> Original_CustomsApprovedCoverSheetPrintedInd, 
                    string Original_PortReceiptNumber, 
                    global::System.Nullable<global::System.DateTime> Original_VoyageChangeHoldDate, 
                    string Original_ReceivedBy, 
                    string Original_LastPhysicalBy, 
                    global::System.Nullable<int> Original_BarCodeLabelPrintedInd, 
                    string Original_VIVTagNumber, 
                    global::System.Nullable<global::System.DateTime> Original_BarCodeLabelPrintedDate, 
                    global::System.Nullable<int> Original_MechanicalExceptionInd, 
                    global::System.Nullable<int> Original_LeftBehindInd, 
                    string Original_ITNNumber, 
                    int AutoportExportVehiclesID) {
            if ((CustomerID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(CustomerID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((VehicleYear == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(VehicleYear));
            }
            if ((Make == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Make));
            }
            if ((Model == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Model));
            }
            if ((Bodystyle == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Bodystyle));
            }
            if ((VIN == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(VIN));
            }
            if ((Color == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Color));
            }
            if ((VehicleLength == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(VehicleLength));
            }
            if ((VehicleWidth == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(VehicleWidth));
            }
            if ((VehicleHeight == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(VehicleHeight));
            }
            if ((VehicleWeight == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(VehicleWeight));
            }
            if ((VehicleCubicFeet == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(VehicleCubicFeet));
            }
            if ((VehicleStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(VehicleStatus));
            }
            if ((TitleNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(TitleNumber));
            }
            if ((TitleState == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(TitleState));
            }
            if ((DestinationName == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(DestinationName));
            }
            if ((ExporterID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(ExporterID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((FreightForwarderID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(FreightForwarderID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((VesselID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(VesselID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((BookingNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(BookingNumber));
            }
            if ((VoyageNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(VoyageNumber));
            }
            if ((CustomerIdentification == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(CustomerIdentification));
            }
            if ((SizeClass == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(SizeClass));
            }
            if ((BayLocation == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(BayLocation));
            }
            if ((EntryRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(EntryRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((EntryRateOverrideInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(EntryRateOverrideInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((PerDiemGraceDays.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(PerDiemGraceDays.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((PerDiemGraceDaysOverrideInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(PerDiemGraceDaysOverrideInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((TotalCharge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(TotalCharge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((DateReceived.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((System.DateTime)(DateReceived.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((ReceivedExceptionDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(ReceivedExceptionDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((DateSubmittedCustoms.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((System.DateTime)(DateSubmittedCustoms.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((CustomsExceptionDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(CustomsExceptionDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((CustomsApprovedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(CustomsApprovedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((DateShipped.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((System.DateTime)(DateShipped.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((BilledInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(BilledInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((BillingID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(BillingID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((DateBilled.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(DateBilled.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((VINDecodedInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(VINDecodedInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Note == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Note));
            }
            if ((RecordStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(RecordStatus));
            }
            if ((CreationDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((System.DateTime)(CreationDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((CreatedBy == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(CreatedBy));
            }
            if ((UpdatedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((System.DateTime)(UpdatedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((UpdatedBy == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(UpdatedBy));
            }
            if ((CreditHoldInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(CreditHoldInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((CreditHoldBy == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(CreditHoldBy));
            }
            if ((CustomsApprovalPrintedInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((int)(CustomsApprovalPrintedInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((VoyageID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((int)(VoyageID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((CustomsCoverSheetPrintedInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(CustomsCoverSheetPrintedInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((NoStartInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((int)(NoStartInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((CustomsApprovalPrintedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((System.DateTime)(CustomsApprovalPrintedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((ConsigneeID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((int)(ConsigneeID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((LastPhysicalDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((System.DateTime)(LastPhysicalDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((HasAudioSystemInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((int)(HasAudioSystemInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((HasNavigationSystemInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((int)(HasNavigationSystemInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((TransshipPortName == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(TransshipPortName));
            }
            if ((SpecialInstructions == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(SpecialInstructions));
            }
            if ((CustomsApprovedCoverSheetPrintedInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(CustomsApprovedCoverSheetPrintedInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((PortReceiptNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(PortReceiptNumber));
            }
            if ((VoyageChangeHoldDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((System.DateTime)(VoyageChangeHoldDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((ReceivedBy == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(ReceivedBy));
            }
            if ((LastPhysicalBy == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(LastPhysicalBy));
            }
            if ((BarCodeLabelPrintedInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((int)(BarCodeLabelPrintedInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((VIVTagNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(VIVTagNumber));
            }
            if ((BarCodeLabelPrintedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((System.DateTime)(BarCodeLabelPrintedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((MechanicalExceptionInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((int)(MechanicalExceptionInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((LeftBehindInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((int)(LeftBehindInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((ITNNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(ITNNumber));
            }
            this.Adapter.UpdateCommand.Parameters[69].Value = ((int)(Original_AutoportExportVehiclesID));
            if ((Original_CustomerID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((int)(Original_CustomerID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_VehicleYear == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_VehicleYear));
            }
            if ((Original_Make == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(Original_Make));
            }
            if ((Original_Model == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(Original_Model));
            }
            if ((Original_Bodystyle == null)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(Original_Bodystyle));
            }
            if ((Original_VIN == null)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(Original_VIN));
            }
            if ((Original_Color == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(Original_Color));
            }
            if ((Original_VehicleLength == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(Original_VehicleLength));
            }
            if ((Original_VehicleWidth == null)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((string)(Original_VehicleWidth));
            }
            if ((Original_VehicleHeight == null)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(Original_VehicleHeight));
            }
            if ((Original_VehicleWeight == null)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((string)(Original_VehicleWeight));
            }
            if ((Original_VehicleCubicFeet == null)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((string)(Original_VehicleCubicFeet));
            }
            if ((Original_VehicleStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(Original_VehicleStatus));
            }
            if ((Original_TitleNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((string)(Original_TitleNumber));
            }
            if ((Original_TitleState == null)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((string)(Original_TitleState));
            }
            if ((Original_DestinationName == null)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((string)(Original_DestinationName));
            }
            if ((Original_ExporterID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((int)(Original_ExporterID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Original_FreightForwarderID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((int)(Original_FreightForwarderID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((Original_VesselID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((int)(Original_VesselID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((Original_BookingNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((string)(Original_BookingNumber));
            }
            if ((Original_VoyageNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((string)(Original_VoyageNumber));
            }
            if ((Original_CustomerIdentification == null)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((string)(Original_CustomerIdentification));
            }
            if ((Original_SizeClass == null)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((string)(Original_SizeClass));
            }
            if ((Original_BayLocation == null)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((string)(Original_BayLocation));
            }
            if ((Original_EntryRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((decimal)(Original_EntryRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            if ((Original_EntryRateOverrideInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((int)(Original_EntryRateOverrideInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            if ((Original_PerDiemGraceDays.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[123].Value = ((int)(Original_PerDiemGraceDays.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            if ((Original_PerDiemGraceDaysOverrideInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[125].Value = ((int)(Original_PerDiemGraceDaysOverrideInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            if ((Original_TotalCharge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[127].Value = ((decimal)(Original_TotalCharge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            if ((Original_DateReceived.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[129].Value = ((System.DateTime)(Original_DateReceived.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            if ((Original_ReceivedExceptionDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[131].Value = ((System.DateTime)(Original_ReceivedExceptionDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            if ((Original_DateSubmittedCustoms.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[133].Value = ((System.DateTime)(Original_DateSubmittedCustoms.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            if ((Original_CustomsExceptionDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[135].Value = ((System.DateTime)(Original_CustomsExceptionDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            if ((Original_CustomsApprovedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[137].Value = ((System.DateTime)(Original_CustomsApprovedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            if ((Original_DateShipped.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[139].Value = ((System.DateTime)(Original_DateShipped.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            if ((Original_BilledInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[141].Value = ((int)(Original_BilledInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            if ((Original_BillingID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[143].Value = ((int)(Original_BillingID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            if ((Original_DateBilled.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[145].Value = ((System.DateTime)(Original_DateBilled.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            if ((Original_VINDecodedInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[147].Value = ((int)(Original_VINDecodedInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            if ((Original_Note == null)) {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[149].Value = ((string)(Original_Note));
            }
            if ((Original_RecordStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[151].Value = ((string)(Original_RecordStatus));
            }
            if ((Original_CreationDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[153].Value = ((System.DateTime)(Original_CreationDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            if ((Original_CreatedBy == null)) {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[155].Value = ((string)(Original_CreatedBy));
            }
            if ((Original_UpdatedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[157].Value = ((System.DateTime)(Original_UpdatedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[157].Value = global::System.DBNull.Value;
            }
            if ((Original_UpdatedBy == null)) {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[159].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[159].Value = ((string)(Original_UpdatedBy));
            }
            if ((Original_CreditHoldInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[161].Value = ((int)(Original_CreditHoldInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[161].Value = global::System.DBNull.Value;
            }
            if ((Original_CreditHoldBy == null)) {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[163].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[163].Value = ((string)(Original_CreditHoldBy));
            }
            if ((Original_CustomsApprovalPrintedInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[165].Value = ((int)(Original_CustomsApprovalPrintedInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[165].Value = global::System.DBNull.Value;
            }
            if ((Original_VoyageID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[167].Value = ((int)(Original_VoyageID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[167].Value = global::System.DBNull.Value;
            }
            if ((Original_CustomsCoverSheetPrintedInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[169].Value = ((int)(Original_CustomsCoverSheetPrintedInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[169].Value = global::System.DBNull.Value;
            }
            if ((Original_NoStartInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[171].Value = ((int)(Original_NoStartInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[171].Value = global::System.DBNull.Value;
            }
            if ((Original_CustomsApprovalPrintedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[173].Value = ((System.DateTime)(Original_CustomsApprovalPrintedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[173].Value = global::System.DBNull.Value;
            }
            if ((Original_ConsigneeID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[175].Value = ((int)(Original_ConsigneeID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[175].Value = global::System.DBNull.Value;
            }
            if ((Original_LastPhysicalDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[177].Value = ((System.DateTime)(Original_LastPhysicalDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[177].Value = global::System.DBNull.Value;
            }
            if ((Original_HasAudioSystemInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[179].Value = ((int)(Original_HasAudioSystemInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[179].Value = global::System.DBNull.Value;
            }
            if ((Original_HasNavigationSystemInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[181].Value = ((int)(Original_HasNavigationSystemInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[181].Value = global::System.DBNull.Value;
            }
            if ((Original_TransshipPortName == null)) {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[183].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[183].Value = ((string)(Original_TransshipPortName));
            }
            if ((Original_SpecialInstructions == null)) {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[185].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[185].Value = ((string)(Original_SpecialInstructions));
            }
            if ((Original_CustomsApprovedCoverSheetPrintedInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[187].Value = ((int)(Original_CustomsApprovedCoverSheetPrintedInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[187].Value = global::System.DBNull.Value;
            }
            if ((Original_PortReceiptNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[189].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[189].Value = ((string)(Original_PortReceiptNumber));
            }
            if ((Original_VoyageChangeHoldDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[191].Value = ((System.DateTime)(Original_VoyageChangeHoldDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[191].Value = global::System.DBNull.Value;
            }
            if ((Original_ReceivedBy == null)) {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[193].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[193].Value = ((string)(Original_ReceivedBy));
            }
            if ((Original_LastPhysicalBy == null)) {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[195].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[195].Value = ((string)(Original_LastPhysicalBy));
            }
            if ((Original_BarCodeLabelPrintedInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[197].Value = ((int)(Original_BarCodeLabelPrintedInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[197].Value = global::System.DBNull.Value;
            }
            if ((Original_VIVTagNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[199].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[199].Value = ((string)(Original_VIVTagNumber));
            }
            if ((Original_BarCodeLabelPrintedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[201].Value = ((System.DateTime)(Original_BarCodeLabelPrintedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[201].Value = global::System.DBNull.Value;
            }
            if ((Original_MechanicalExceptionInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[203].Value = ((int)(Original_MechanicalExceptionInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[203].Value = global::System.DBNull.Value;
            }
            if ((Original_LeftBehindInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[204].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[205].Value = ((int)(Original_LeftBehindInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[204].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[205].Value = global::System.DBNull.Value;
            }
            if ((Original_ITNNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[206].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[207].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[206].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[207].Value = ((string)(Original_ITNNumber));
            }
            this.Adapter.UpdateCommand.Parameters[208].Value = ((int)(AutoportExportVehiclesID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> CustomerID, 
                    string VehicleYear, 
                    string Make, 
                    string Model, 
                    string Bodystyle, 
                    string VIN, 
                    string Color, 
                    string VehicleLength, 
                    string VehicleWidth, 
                    string VehicleHeight, 
                    string VehicleWeight, 
                    string VehicleCubicFeet, 
                    string VehicleStatus, 
                    string TitleNumber, 
                    string TitleState, 
                    string DestinationName, 
                    global::System.Nullable<int> ExporterID, 
                    global::System.Nullable<int> FreightForwarderID, 
                    global::System.Nullable<int> VesselID, 
                    string BookingNumber, 
                    string VoyageNumber, 
                    string CustomerIdentification, 
                    string SizeClass, 
                    string BayLocation, 
                    global::System.Nullable<decimal> EntryRate, 
                    global::System.Nullable<int> EntryRateOverrideInd, 
                    global::System.Nullable<int> PerDiemGraceDays, 
                    global::System.Nullable<int> PerDiemGraceDaysOverrideInd, 
                    global::System.Nullable<decimal> TotalCharge, 
                    global::System.Nullable<global::System.DateTime> DateReceived, 
                    global::System.Nullable<global::System.DateTime> ReceivedExceptionDate, 
                    global::System.Nullable<global::System.DateTime> DateSubmittedCustoms, 
                    global::System.Nullable<global::System.DateTime> CustomsExceptionDate, 
                    global::System.Nullable<global::System.DateTime> CustomsApprovedDate, 
                    global::System.Nullable<global::System.DateTime> DateShipped, 
                    global::System.Nullable<int> BilledInd, 
                    global::System.Nullable<int> BillingID, 
                    global::System.Nullable<global::System.DateTime> DateBilled, 
                    global::System.Nullable<int> VINDecodedInd, 
                    string Note, 
                    string RecordStatus, 
                    global::System.Nullable<global::System.DateTime> CreationDate, 
                    string CreatedBy, 
                    global::System.Nullable<global::System.DateTime> UpdatedDate, 
                    string UpdatedBy, 
                    global::System.Nullable<int> CreditHoldInd, 
                    string CreditHoldBy, 
                    global::System.Nullable<int> CustomsApprovalPrintedInd, 
                    global::System.Nullable<int> VoyageID, 
                    global::System.Nullable<int> CustomsCoverSheetPrintedInd, 
                    global::System.Nullable<int> NoStartInd, 
                    global::System.Nullable<global::System.DateTime> CustomsApprovalPrintedDate, 
                    global::System.Nullable<int> ConsigneeID, 
                    global::System.Nullable<global::System.DateTime> LastPhysicalDate, 
                    global::System.Nullable<int> HasAudioSystemInd, 
                    global::System.Nullable<int> HasNavigationSystemInd, 
                    string TransshipPortName, 
                    string SpecialInstructions, 
                    global::System.Nullable<int> CustomsApprovedCoverSheetPrintedInd, 
                    string PortReceiptNumber, 
                    global::System.Nullable<global::System.DateTime> VoyageChangeHoldDate, 
                    string ReceivedBy, 
                    string LastPhysicalBy, 
                    global::System.Nullable<int> BarCodeLabelPrintedInd, 
                    string VIVTagNumber, 
                    global::System.Nullable<global::System.DateTime> BarCodeLabelPrintedDate, 
                    global::System.Nullable<int> MechanicalExceptionInd, 
                    global::System.Nullable<int> LeftBehindInd, 
                    string ITNNumber, 
                    int Original_AutoportExportVehiclesID, 
                    global::System.Nullable<int> Original_CustomerID, 
                    string Original_VehicleYear, 
                    string Original_Make, 
                    string Original_Model, 
                    string Original_Bodystyle, 
                    string Original_VIN, 
                    string Original_Color, 
                    string Original_VehicleLength, 
                    string Original_VehicleWidth, 
                    string Original_VehicleHeight, 
                    string Original_VehicleWeight, 
                    string Original_VehicleCubicFeet, 
                    string Original_VehicleStatus, 
                    string Original_TitleNumber, 
                    string Original_TitleState, 
                    string Original_DestinationName, 
                    global::System.Nullable<int> Original_ExporterID, 
                    global::System.Nullable<int> Original_FreightForwarderID, 
                    global::System.Nullable<int> Original_VesselID, 
                    string Original_BookingNumber, 
                    string Original_VoyageNumber, 
                    string Original_CustomerIdentification, 
                    string Original_SizeClass, 
                    string Original_BayLocation, 
                    global::System.Nullable<decimal> Original_EntryRate, 
                    global::System.Nullable<int> Original_EntryRateOverrideInd, 
                    global::System.Nullable<int> Original_PerDiemGraceDays, 
                    global::System.Nullable<int> Original_PerDiemGraceDaysOverrideInd, 
                    global::System.Nullable<decimal> Original_TotalCharge, 
                    global::System.Nullable<global::System.DateTime> Original_DateReceived, 
                    global::System.Nullable<global::System.DateTime> Original_ReceivedExceptionDate, 
                    global::System.Nullable<global::System.DateTime> Original_DateSubmittedCustoms, 
                    global::System.Nullable<global::System.DateTime> Original_CustomsExceptionDate, 
                    global::System.Nullable<global::System.DateTime> Original_CustomsApprovedDate, 
                    global::System.Nullable<global::System.DateTime> Original_DateShipped, 
                    global::System.Nullable<int> Original_BilledInd, 
                    global::System.Nullable<int> Original_BillingID, 
                    global::System.Nullable<global::System.DateTime> Original_DateBilled, 
                    global::System.Nullable<int> Original_VINDecodedInd, 
                    string Original_Note, 
                    string Original_RecordStatus, 
                    global::System.Nullable<global::System.DateTime> Original_CreationDate, 
                    string Original_CreatedBy, 
                    global::System.Nullable<global::System.DateTime> Original_UpdatedDate, 
                    string Original_UpdatedBy, 
                    global::System.Nullable<int> Original_CreditHoldInd, 
                    string Original_CreditHoldBy, 
                    global::System.Nullable<int> Original_CustomsApprovalPrintedInd, 
                    global::System.Nullable<int> Original_VoyageID, 
                    global::System.Nullable<int> Original_CustomsCoverSheetPrintedInd, 
                    global::System.Nullable<int> Original_NoStartInd, 
                    global::System.Nullable<global::System.DateTime> Original_CustomsApprovalPrintedDate, 
                    global::System.Nullable<int> Original_ConsigneeID, 
                    global::System.Nullable<global::System.DateTime> Original_LastPhysicalDate, 
                    global::System.Nullable<int> Original_HasAudioSystemInd, 
                    global::System.Nullable<int> Original_HasNavigationSystemInd, 
                    string Original_TransshipPortName, 
                    string Original_SpecialInstructions, 
                    global::System.Nullable<int> Original_CustomsApprovedCoverSheetPrintedInd, 
                    string Original_PortReceiptNumber, 
                    global::System.Nullable<global::System.DateTime> Original_VoyageChangeHoldDate, 
                    string Original_ReceivedBy, 
                    string Original_LastPhysicalBy, 
                    global::System.Nullable<int> Original_BarCodeLabelPrintedInd, 
                    string Original_VIVTagNumber, 
                    global::System.Nullable<global::System.DateTime> Original_BarCodeLabelPrintedDate, 
                    global::System.Nullable<int> Original_MechanicalExceptionInd, 
                    global::System.Nullable<int> Original_LeftBehindInd, 
                    string Original_ITNNumber) {
            return this.Update(CustomerID, VehicleYear, Make, Model, Bodystyle, VIN, Color, VehicleLength, VehicleWidth, VehicleHeight, VehicleWeight, VehicleCubicFeet, VehicleStatus, TitleNumber, TitleState, DestinationName, ExporterID, FreightForwarderID, VesselID, BookingNumber, VoyageNumber, CustomerIdentification, SizeClass, BayLocation, EntryRate, EntryRateOverrideInd, PerDiemGraceDays, PerDiemGraceDaysOverrideInd, TotalCharge, DateReceived, ReceivedExceptionDate, DateSubmittedCustoms, CustomsExceptionDate, CustomsApprovedDate, DateShipped, BilledInd, BillingID, DateBilled, VINDecodedInd, Note, RecordStatus, CreationDate, CreatedBy, UpdatedDate, UpdatedBy, CreditHoldInd, CreditHoldBy, CustomsApprovalPrintedInd, VoyageID, CustomsCoverSheetPrintedInd, NoStartInd, CustomsApprovalPrintedDate, ConsigneeID, LastPhysicalDate, HasAudioSystemInd, HasNavigationSystemInd, TransshipPortName, SpecialInstructions, CustomsApprovedCoverSheetPrintedInd, PortReceiptNumber, VoyageChangeHoldDate, ReceivedBy, LastPhysicalBy, BarCodeLabelPrintedInd, VIVTagNumber, BarCodeLabelPrintedDate, MechanicalExceptionInd, LeftBehindInd, ITNNumber, Original_AutoportExportVehiclesID, Original_CustomerID, Original_VehicleYear, Original_Make, Original_Model, Original_Bodystyle, Original_VIN, Original_Color, Original_VehicleLength, Original_VehicleWidth, Original_VehicleHeight, Original_VehicleWeight, Original_VehicleCubicFeet, Original_VehicleStatus, Original_TitleNumber, Original_TitleState, Original_DestinationName, Original_ExporterID, Original_FreightForwarderID, Original_VesselID, Original_BookingNumber, Original_VoyageNumber, Original_CustomerIdentification, Original_SizeClass, Original_BayLocation, Original_EntryRate, Original_EntryRateOverrideInd, Original_PerDiemGraceDays, Original_PerDiemGraceDaysOverrideInd, Original_TotalCharge, Original_DateReceived, Original_ReceivedExceptionDate, Original_DateSubmittedCustoms, Original_CustomsExceptionDate, Original_CustomsApprovedDate, Original_DateShipped, Original_BilledInd, Original_BillingID, Original_DateBilled, Original_VINDecodedInd, Original_Note, Original_RecordStatus, Original_CreationDate, Original_CreatedBy, Original_UpdatedDate, Original_UpdatedBy, Original_CreditHoldInd, Original_CreditHoldBy, Original_CustomsApprovalPrintedInd, Original_VoyageID, Original_CustomsCoverSheetPrintedInd, Original_NoStartInd, Original_CustomsApprovalPrintedDate, Original_ConsigneeID, Original_LastPhysicalDate, Original_HasAudioSystemInd, Original_HasNavigationSystemInd, Original_TransshipPortName, Original_SpecialInstructions, Original_CustomsApprovedCoverSheetPrintedInd, Original_PortReceiptNumber, Original_VoyageChangeHoldDate, Original_ReceivedBy, Original_LastPhysicalBy, Original_BarCodeLabelPrintedInd, Original_VIVTagNumber, Original_BarCodeLabelPrintedDate, Original_MechanicalExceptionInd, Original_LeftBehindInd, Original_ITNNumber, Original_AutoportExportVehiclesID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BillingTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BillingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Billing";
            tableMapping.ColumnMappings.Add("BillingID", "BillingID");
            tableMapping.ColumnMappings.Add("CustomerID", "CustomerID");
            tableMapping.ColumnMappings.Add("OutsideCarrierInvoiceInd", "OutsideCarrierInvoiceInd");
            tableMapping.ColumnMappings.Add("OutsideCarrierID", "OutsideCarrierID");
            tableMapping.ColumnMappings.Add("RunID", "RunID");
            tableMapping.ColumnMappings.Add("InvoiceDate", "InvoiceDate");
            tableMapping.ColumnMappings.Add("InvoiceNumber", "InvoiceNumber");
            tableMapping.ColumnMappings.Add("InvoiceType", "InvoiceType");
            tableMapping.ColumnMappings.Add("PaymentMethod", "PaymentMethod");
            tableMapping.ColumnMappings.Add("TransportCharges", "TransportCharges");
            tableMapping.ColumnMappings.Add("FuelSurchargeRate", "FuelSurchargeRate");
            tableMapping.ColumnMappings.Add("FuelSurchargeRateOverrideInd", "FuelSurchargeRateOverrideInd");
            tableMapping.ColumnMappings.Add("FuelSurcharge", "FuelSurcharge");
            tableMapping.ColumnMappings.Add("FuelSurchargeOverrideInd", "FuelSurchargeOverrideInd");
            tableMapping.ColumnMappings.Add("OtherCharge1", "OtherCharge1");
            tableMapping.ColumnMappings.Add("OtherCharge1Description", "OtherCharge1Description");
            tableMapping.ColumnMappings.Add("OtherCharge2", "OtherCharge2");
            tableMapping.ColumnMappings.Add("OtherCharge2Description", "OtherCharge2Description");
            tableMapping.ColumnMappings.Add("OtherCharge3", "OtherCharge3");
            tableMapping.ColumnMappings.Add("OtherCharge3Description", "OtherCharge3Description");
            tableMapping.ColumnMappings.Add("OtherCharge4", "OtherCharge4");
            tableMapping.ColumnMappings.Add("OtherCharge4Description", "OtherCharge4Description");
            tableMapping.ColumnMappings.Add("InvoiceAmount", "InvoiceAmount");
            tableMapping.ColumnMappings.Add("AmountPaid", "AmountPaid");
            tableMapping.ColumnMappings.Add("CreditsIssued", "CreditsIssued");
            tableMapping.ColumnMappings.Add("BalanceDue", "BalanceDue");
            tableMapping.ColumnMappings.Add("DueToOutsideCarriers", "DueToOutsideCarriers");
            tableMapping.ColumnMappings.Add("DueFromOutsideCarriers", "DueFromOutsideCarriers");
            tableMapping.ColumnMappings.Add("PaidInFullInd", "PaidInFullInd");
            tableMapping.ColumnMappings.Add("PaidInFullDate", "PaidInFullDate");
            tableMapping.ColumnMappings.Add("Comments", "Comments");
            tableMapping.ColumnMappings.Add("InvoiceStatus", "InvoiceStatus");
            tableMapping.ColumnMappings.Add("PrintedInd", "PrintedInd");
            tableMapping.ColumnMappings.Add("DatePrinted", "DatePrinted");
            tableMapping.ColumnMappings.Add("CreditMemoInd", "CreditMemoInd");
            tableMapping.ColumnMappings.Add("CreditedOutInd", "CreditedOutInd");
            tableMapping.ColumnMappings.Add("CreditMemoID", "CreditMemoID");
            tableMapping.ColumnMappings.Add("ExportedInd", "ExportedInd");
            tableMapping.ColumnMappings.Add("DateExported", "DateExported");
            tableMapping.ColumnMappings.Add("CreationDate", "CreationDate");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("UpdatedDate", "UpdatedDate");
            tableMapping.ColumnMappings.Add("UpdatedBy", "UpdatedBy");
            tableMapping.ColumnMappings.Add("CreditedOutBy", "CreditedOutBy");
            tableMapping.ColumnMappings.Add("StorageCharges", "StorageCharges");
            tableMapping.ColumnMappings.Add("DATBillingID", "DATBillingID");
            tableMapping.ColumnMappings.Add("DATBillingPercentage", "DATBillingPercentage");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Billing] WHERE (([BillingID] = @Original_BillingID) AND ((@IsN" +
                "ull_CustomerID = 1 AND [CustomerID] IS NULL) OR ([CustomerID] = @Original_Custom" +
                "erID)) AND ((@IsNull_OutsideCarrierInvoiceInd = 1 AND [OutsideCarrierInvoiceInd]" +
                " IS NULL) OR ([OutsideCarrierInvoiceInd] = @Original_OutsideCarrierInvoiceInd)) " +
                "AND ((@IsNull_OutsideCarrierID = 1 AND [OutsideCarrierID] IS NULL) OR ([OutsideC" +
                "arrierID] = @Original_OutsideCarrierID)) AND ((@IsNull_RunID = 1 AND [RunID] IS " +
                "NULL) OR ([RunID] = @Original_RunID)) AND ((@IsNull_InvoiceDate = 1 AND [Invoice" +
                "Date] IS NULL) OR ([InvoiceDate] = @Original_InvoiceDate)) AND ((@IsNull_Invoice" +
                "Number = 1 AND [InvoiceNumber] IS NULL) OR ([InvoiceNumber] = @Original_InvoiceN" +
                "umber)) AND ((@IsNull_InvoiceType = 1 AND [InvoiceType] IS NULL) OR ([InvoiceTyp" +
                "e] = @Original_InvoiceType)) AND ((@IsNull_PaymentMethod = 1 AND [PaymentMethod]" +
                " IS NULL) OR ([PaymentMethod] = @Original_PaymentMethod)) AND ((@IsNull_Transpor" +
                "tCharges = 1 AND [TransportCharges] IS NULL) OR ([TransportCharges] = @Original_" +
                "TransportCharges)) AND ((@IsNull_FuelSurchargeRate = 1 AND [FuelSurchargeRate] I" +
                "S NULL) OR ([FuelSurchargeRate] = @Original_FuelSurchargeRate)) AND ((@IsNull_Fu" +
                "elSurchargeRateOverrideInd = 1 AND [FuelSurchargeRateOverrideInd] IS NULL) OR ([" +
                "FuelSurchargeRateOverrideInd] = @Original_FuelSurchargeRateOverrideInd)) AND ((@" +
                "IsNull_FuelSurcharge = 1 AND [FuelSurcharge] IS NULL) OR ([FuelSurcharge] = @Ori" +
                "ginal_FuelSurcharge)) AND ((@IsNull_FuelSurchargeOverrideInd = 1 AND [FuelSurcha" +
                "rgeOverrideInd] IS NULL) OR ([FuelSurchargeOverrideInd] = @Original_FuelSurcharg" +
                "eOverrideInd)) AND ((@IsNull_OtherCharge1 = 1 AND [OtherCharge1] IS NULL) OR ([O" +
                "therCharge1] = @Original_OtherCharge1)) AND ((@IsNull_OtherCharge1Description = " +
                "1 AND [OtherCharge1Description] IS NULL) OR ([OtherCharge1Description] = @Origin" +
                "al_OtherCharge1Description)) AND ((@IsNull_OtherCharge2 = 1 AND [OtherCharge2] I" +
                "S NULL) OR ([OtherCharge2] = @Original_OtherCharge2)) AND ((@IsNull_OtherCharge2" +
                "Description = 1 AND [OtherCharge2Description] IS NULL) OR ([OtherCharge2Descript" +
                "ion] = @Original_OtherCharge2Description)) AND ((@IsNull_OtherCharge3 = 1 AND [O" +
                "therCharge3] IS NULL) OR ([OtherCharge3] = @Original_OtherCharge3)) AND ((@IsNul" +
                "l_OtherCharge3Description = 1 AND [OtherCharge3Description] IS NULL) OR ([OtherC" +
                "harge3Description] = @Original_OtherCharge3Description)) AND ((@IsNull_OtherChar" +
                "ge4 = 1 AND [OtherCharge4] IS NULL) OR ([OtherCharge4] = @Original_OtherCharge4)" +
                ") AND ((@IsNull_OtherCharge4Description = 1 AND [OtherCharge4Description] IS NUL" +
                "L) OR ([OtherCharge4Description] = @Original_OtherCharge4Description)) AND ((@Is" +
                "Null_InvoiceAmount = 1 AND [InvoiceAmount] IS NULL) OR ([InvoiceAmount] = @Origi" +
                "nal_InvoiceAmount)) AND ((@IsNull_AmountPaid = 1 AND [AmountPaid] IS NULL) OR ([" +
                "AmountPaid] = @Original_AmountPaid)) AND ((@IsNull_CreditsIssued = 1 AND [Credit" +
                "sIssued] IS NULL) OR ([CreditsIssued] = @Original_CreditsIssued)) AND ((@IsNull_" +
                "BalanceDue = 1 AND [BalanceDue] IS NULL) OR ([BalanceDue] = @Original_BalanceDue" +
                ")) AND ((@IsNull_DueToOutsideCarriers = 1 AND [DueToOutsideCarriers] IS NULL) OR" +
                " ([DueToOutsideCarriers] = @Original_DueToOutsideCarriers)) AND ((@IsNull_DueFro" +
                "mOutsideCarriers = 1 AND [DueFromOutsideCarriers] IS NULL) OR ([DueFromOutsideCa" +
                "rriers] = @Original_DueFromOutsideCarriers)) AND ((@IsNull_PaidInFullInd = 1 AND" +
                " [PaidInFullInd] IS NULL) OR ([PaidInFullInd] = @Original_PaidInFullInd)) AND ((" +
                "@IsNull_PaidInFullDate = 1 AND [PaidInFullDate] IS NULL) OR ([PaidInFullDate] = " +
                "@Original_PaidInFullDate)) AND ((@IsNull_Comments = 1 AND [Comments] IS NULL) OR" +
                " ([Comments] = @Original_Comments)) AND ((@IsNull_InvoiceStatus = 1 AND [Invoice" +
                "Status] IS NULL) OR ([InvoiceStatus] = @Original_InvoiceStatus)) AND ((@IsNull_P" +
                "rintedInd = 1 AND [PrintedInd] IS NULL) OR ([PrintedInd] = @Original_PrintedInd)" +
                ") AND ((@IsNull_DatePrinted = 1 AND [DatePrinted] IS NULL) OR ([DatePrinted] = @" +
                "Original_DatePrinted)) AND ((@IsNull_CreditMemoInd = 1 AND [CreditMemoInd] IS NU" +
                "LL) OR ([CreditMemoInd] = @Original_CreditMemoInd)) AND ((@IsNull_CreditedOutInd" +
                " = 1 AND [CreditedOutInd] IS NULL) OR ([CreditedOutInd] = @Original_CreditedOutI" +
                "nd)) AND ((@IsNull_CreditMemoID = 1 AND [CreditMemoID] IS NULL) OR ([CreditMemoI" +
                "D] = @Original_CreditMemoID)) AND ((@IsNull_ExportedInd = 1 AND [ExportedInd] IS" +
                " NULL) OR ([ExportedInd] = @Original_ExportedInd)) AND ((@IsNull_DateExported = " +
                "1 AND [DateExported] IS NULL) OR ([DateExported] = @Original_DateExported)) AND " +
                "((@IsNull_CreationDate = 1 AND [CreationDate] IS NULL) OR ([CreationDate] = @Ori" +
                "ginal_CreationDate)) AND ((@IsNull_CreatedBy = 1 AND [CreatedBy] IS NULL) OR ([C" +
                "reatedBy] = @Original_CreatedBy)) AND ((@IsNull_UpdatedDate = 1 AND [UpdatedDate" +
                "] IS NULL) OR ([UpdatedDate] = @Original_UpdatedDate)) AND ((@IsNull_UpdatedBy =" +
                " 1 AND [UpdatedBy] IS NULL) OR ([UpdatedBy] = @Original_UpdatedBy)) AND ((@IsNul" +
                "l_CreditedOutBy = 1 AND [CreditedOutBy] IS NULL) OR ([CreditedOutBy] = @Original" +
                "_CreditedOutBy)) AND ((@IsNull_StorageCharges = 1 AND [StorageCharges] IS NULL) " +
                "OR ([StorageCharges] = @Original_StorageCharges)) AND ((@IsNull_DATBillingID = 1" +
                " AND [DATBillingID] IS NULL) OR ([DATBillingID] = @Original_DATBillingID)) AND (" +
                "(@IsNull_DATBillingPercentage = 1 AND [DATBillingPercentage] IS NULL) OR ([DATBi" +
                "llingPercentage] = @Original_DATBillingPercentage)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BillingID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillingID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OutsideCarrierInvoiceInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutsideCarrierInvoiceInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutsideCarrierInvoiceInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutsideCarrierInvoiceInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OutsideCarrierID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutsideCarrierID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutsideCarrierID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutsideCarrierID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RunID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RunID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RunID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RunID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PaymentMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentMethod", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaymentMethod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentMethod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TransportCharges", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransportCharges", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransportCharges", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "TransportCharges", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FuelSurchargeRate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelSurchargeRate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FuelSurchargeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "FuelSurchargeRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FuelSurchargeRateOverrideInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelSurchargeRateOverrideInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FuelSurchargeRateOverrideInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelSurchargeRateOverrideInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FuelSurcharge", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelSurcharge", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FuelSurcharge", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "FuelSurcharge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FuelSurchargeOverrideInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelSurchargeOverrideInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FuelSurchargeOverrideInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelSurchargeOverrideInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherCharge1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherCharge1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "OtherCharge1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherCharge1Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge1Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherCharge1Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge1Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherCharge2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherCharge2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "OtherCharge2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherCharge2Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge2Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherCharge2Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge2Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherCharge3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherCharge3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "OtherCharge3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherCharge3Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge3Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherCharge3Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge3Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherCharge4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherCharge4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "OtherCharge4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherCharge4Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge4Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherCharge4Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge4Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceAmount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "InvoiceAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AmountPaid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmountPaid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AmountPaid", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "AmountPaid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreditsIssued", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditsIssued", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreditsIssued", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "CreditsIssued", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BalanceDue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BalanceDue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BalanceDue", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "BalanceDue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DueToOutsideCarriers", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DueToOutsideCarriers", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DueToOutsideCarriers", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "DueToOutsideCarriers", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DueFromOutsideCarriers", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DueFromOutsideCarriers", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DueFromOutsideCarriers", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "DueFromOutsideCarriers", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PaidInFullInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaidInFullInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaidInFullInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaidInFullInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PaidInFullDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaidInFullDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaidInFullDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaidInFullDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Comments", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comments", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comments", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comments", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintedInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintedInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DatePrinted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DatePrinted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DatePrinted", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DatePrinted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreditMemoInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditMemoInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreditMemoInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditMemoInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreditedOutInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditedOutInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreditedOutInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditedOutInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreditMemoID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditMemoID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreditMemoID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditMemoID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExportedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExportedInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExportedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExportedInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateExported", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateExported", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateExported", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateExported", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreationDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UpdatedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UpdatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreditedOutBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditedOutBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreditedOutBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditedOutBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StorageCharges", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StorageCharges", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StorageCharges", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "StorageCharges", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DATBillingID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATBillingID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATBillingID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATBillingID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DATBillingPercentage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATBillingPercentage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATBillingPercentage", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "DATBillingPercentage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Billing] ([CustomerID], [OutsideCarrierInvoiceInd], [OutsideCa" +
                "rrierID], [RunID], [InvoiceDate], [InvoiceNumber], [InvoiceType], [PaymentMethod" +
                "], [TransportCharges], [FuelSurchargeRate], [FuelSurchargeRateOverrideInd], [Fue" +
                "lSurcharge], [FuelSurchargeOverrideInd], [OtherCharge1], [OtherCharge1Descriptio" +
                "n], [OtherCharge2], [OtherCharge2Description], [OtherCharge3], [OtherCharge3Desc" +
                "ription], [OtherCharge4], [OtherCharge4Description], [InvoiceAmount], [AmountPai" +
                "d], [CreditsIssued], [BalanceDue], [DueToOutsideCarriers], [DueFromOutsideCarrie" +
                "rs], [PaidInFullInd], [PaidInFullDate], [Comments], [InvoiceStatus], [PrintedInd" +
                "], [DatePrinted], [CreditMemoInd], [CreditedOutInd], [CreditMemoID], [ExportedIn" +
                "d], [DateExported], [CreationDate], [CreatedBy], [UpdatedDate], [UpdatedBy], [Cr" +
                "editedOutBy], [StorageCharges], [DATBillingID], [DATBillingPercentage]) VALUES (" +
                "@CustomerID, @OutsideCarrierInvoiceInd, @OutsideCarrierID, @RunID, @InvoiceDate," +
                " @InvoiceNumber, @InvoiceType, @PaymentMethod, @TransportCharges, @FuelSurcharge" +
                "Rate, @FuelSurchargeRateOverrideInd, @FuelSurcharge, @FuelSurchargeOverrideInd, " +
                "@OtherCharge1, @OtherCharge1Description, @OtherCharge2, @OtherCharge2Description" +
                ", @OtherCharge3, @OtherCharge3Description, @OtherCharge4, @OtherCharge4Descripti" +
                "on, @InvoiceAmount, @AmountPaid, @CreditsIssued, @BalanceDue, @DueToOutsideCarri" +
                "ers, @DueFromOutsideCarriers, @PaidInFullInd, @PaidInFullDate, @Comments, @Invoi" +
                "ceStatus, @PrintedInd, @DatePrinted, @CreditMemoInd, @CreditedOutInd, @CreditMem" +
                "oID, @ExportedInd, @DateExported, @CreationDate, @CreatedBy, @UpdatedDate, @Upda" +
                "tedBy, @CreditedOutBy, @StorageCharges, @DATBillingID, @DATBillingPercentage);\r\n" +
                "SELECT BillingID, CustomerID, OutsideCarrierInvoiceInd, OutsideCarrierID, RunID," +
                " InvoiceDate, InvoiceNumber, InvoiceType, PaymentMethod, TransportCharges, FuelS" +
                "urchargeRate, FuelSurchargeRateOverrideInd, FuelSurcharge, FuelSurchargeOverride" +
                "Ind, OtherCharge1, OtherCharge1Description, OtherCharge2, OtherCharge2Descriptio" +
                "n, OtherCharge3, OtherCharge3Description, OtherCharge4, OtherCharge4Description," +
                " InvoiceAmount, AmountPaid, CreditsIssued, BalanceDue, DueToOutsideCarriers, Due" +
                "FromOutsideCarriers, PaidInFullInd, PaidInFullDate, Comments, InvoiceStatus, Pri" +
                "ntedInd, DatePrinted, CreditMemoInd, CreditedOutInd, CreditMemoID, ExportedInd, " +
                "DateExported, CreationDate, CreatedBy, UpdatedDate, UpdatedBy, CreditedOutBy, St" +
                "orageCharges, DATBillingID, DATBillingPercentage FROM Billing WHERE (BillingID =" +
                " SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutsideCarrierInvoiceInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutsideCarrierInvoiceInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutsideCarrierID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutsideCarrierID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RunID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RunID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaymentMethod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransportCharges", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "TransportCharges", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FuelSurchargeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "FuelSurchargeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FuelSurchargeRateOverrideInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelSurchargeRateOverrideInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FuelSurcharge", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "FuelSurcharge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FuelSurchargeOverrideInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelSurchargeOverrideInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherCharge1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "OtherCharge1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherCharge1Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge1Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherCharge2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "OtherCharge2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherCharge2Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge2Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherCharge3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "OtherCharge3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherCharge3Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge3Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherCharge4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "OtherCharge4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherCharge4Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge4Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "InvoiceAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AmountPaid", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "AmountPaid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreditsIssued", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "CreditsIssued", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BalanceDue", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "BalanceDue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DueToOutsideCarriers", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "DueToOutsideCarriers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DueFromOutsideCarriers", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "DueFromOutsideCarriers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaidInFullInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaidInFullInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaidInFullDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaidInFullDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comments", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comments", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintedInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DatePrinted", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DatePrinted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreditMemoInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditMemoInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreditedOutInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditedOutInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreditMemoID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditMemoID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExportedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExportedInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateExported", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateExported", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreditedOutBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditedOutBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StorageCharges", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "StorageCharges", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATBillingID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATBillingID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATBillingPercentage", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "DATBillingPercentage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Billing] SET [CustomerID] = @CustomerID, [OutsideCarrierInvoiceInd]" +
                " = @OutsideCarrierInvoiceInd, [OutsideCarrierID] = @OutsideCarrierID, [RunID] = " +
                "@RunID, [InvoiceDate] = @InvoiceDate, [InvoiceNumber] = @InvoiceNumber, [Invoice" +
                "Type] = @InvoiceType, [PaymentMethod] = @PaymentMethod, [TransportCharges] = @Tr" +
                "ansportCharges, [FuelSurchargeRate] = @FuelSurchargeRate, [FuelSurchargeRateOver" +
                "rideInd] = @FuelSurchargeRateOverrideInd, [FuelSurcharge] = @FuelSurcharge, [Fue" +
                "lSurchargeOverrideInd] = @FuelSurchargeOverrideInd, [OtherCharge1] = @OtherCharg" +
                "e1, [OtherCharge1Description] = @OtherCharge1Description, [OtherCharge2] = @Othe" +
                "rCharge2, [OtherCharge2Description] = @OtherCharge2Description, [OtherCharge3] =" +
                " @OtherCharge3, [OtherCharge3Description] = @OtherCharge3Description, [OtherChar" +
                "ge4] = @OtherCharge4, [OtherCharge4Description] = @OtherCharge4Description, [Inv" +
                "oiceAmount] = @InvoiceAmount, [AmountPaid] = @AmountPaid, [CreditsIssued] = @Cre" +
                "ditsIssued, [BalanceDue] = @BalanceDue, [DueToOutsideCarriers] = @DueToOutsideCa" +
                "rriers, [DueFromOutsideCarriers] = @DueFromOutsideCarriers, [PaidInFullInd] = @P" +
                "aidInFullInd, [PaidInFullDate] = @PaidInFullDate, [Comments] = @Comments, [Invoi" +
                "ceStatus] = @InvoiceStatus, [PrintedInd] = @PrintedInd, [DatePrinted] = @DatePri" +
                "nted, [CreditMemoInd] = @CreditMemoInd, [CreditedOutInd] = @CreditedOutInd, [Cre" +
                "ditMemoID] = @CreditMemoID, [ExportedInd] = @ExportedInd, [DateExported] = @Date" +
                "Exported, [CreationDate] = @CreationDate, [CreatedBy] = @CreatedBy, [UpdatedDate" +
                "] = @UpdatedDate, [UpdatedBy] = @UpdatedBy, [CreditedOutBy] = @CreditedOutBy, [S" +
                "torageCharges] = @StorageCharges, [DATBillingID] = @DATBillingID, [DATBillingPer" +
                "centage] = @DATBillingPercentage WHERE (([BillingID] = @Original_BillingID) AND " +
                "((@IsNull_CustomerID = 1 AND [CustomerID] IS NULL) OR ([CustomerID] = @Original_" +
                "CustomerID)) AND ((@IsNull_OutsideCarrierInvoiceInd = 1 AND [OutsideCarrierInvoi" +
                "ceInd] IS NULL) OR ([OutsideCarrierInvoiceInd] = @Original_OutsideCarrierInvoice" +
                "Ind)) AND ((@IsNull_OutsideCarrierID = 1 AND [OutsideCarrierID] IS NULL) OR ([Ou" +
                "tsideCarrierID] = @Original_OutsideCarrierID)) AND ((@IsNull_RunID = 1 AND [RunI" +
                "D] IS NULL) OR ([RunID] = @Original_RunID)) AND ((@IsNull_InvoiceDate = 1 AND [I" +
                "nvoiceDate] IS NULL) OR ([InvoiceDate] = @Original_InvoiceDate)) AND ((@IsNull_I" +
                "nvoiceNumber = 1 AND [InvoiceNumber] IS NULL) OR ([InvoiceNumber] = @Original_In" +
                "voiceNumber)) AND ((@IsNull_InvoiceType = 1 AND [InvoiceType] IS NULL) OR ([Invo" +
                "iceType] = @Original_InvoiceType)) AND ((@IsNull_PaymentMethod = 1 AND [PaymentM" +
                "ethod] IS NULL) OR ([PaymentMethod] = @Original_PaymentMethod)) AND ((@IsNull_Tr" +
                "ansportCharges = 1 AND [TransportCharges] IS NULL) OR ([TransportCharges] = @Ori" +
                "ginal_TransportCharges)) AND ((@IsNull_FuelSurchargeRate = 1 AND [FuelSurchargeR" +
                "ate] IS NULL) OR ([FuelSurchargeRate] = @Original_FuelSurchargeRate)) AND ((@IsN" +
                "ull_FuelSurchargeRateOverrideInd = 1 AND [FuelSurchargeRateOverrideInd] IS NULL)" +
                " OR ([FuelSurchargeRateOverrideInd] = @Original_FuelSurchargeRateOverrideInd)) A" +
                "ND ((@IsNull_FuelSurcharge = 1 AND [FuelSurcharge] IS NULL) OR ([FuelSurcharge] " +
                "= @Original_FuelSurcharge)) AND ((@IsNull_FuelSurchargeOverrideInd = 1 AND [Fuel" +
                "SurchargeOverrideInd] IS NULL) OR ([FuelSurchargeOverrideInd] = @Original_FuelSu" +
                "rchargeOverrideInd)) AND ((@IsNull_OtherCharge1 = 1 AND [OtherCharge1] IS NULL) " +
                "OR ([OtherCharge1] = @Original_OtherCharge1)) AND ((@IsNull_OtherCharge1Descript" +
                "ion = 1 AND [OtherCharge1Description] IS NULL) OR ([OtherCharge1Description] = @" +
                "Original_OtherCharge1Description)) AND ((@IsNull_OtherCharge2 = 1 AND [OtherChar" +
                "ge2] IS NULL) OR ([OtherCharge2] = @Original_OtherCharge2)) AND ((@IsNull_OtherC" +
                "harge2Description = 1 AND [OtherCharge2Description] IS NULL) OR ([OtherCharge2De" +
                "scription] = @Original_OtherCharge2Description)) AND ((@IsNull_OtherCharge3 = 1 " +
                "AND [OtherCharge3] IS NULL) OR ([OtherCharge3] = @Original_OtherCharge3)) AND ((" +
                "@IsNull_OtherCharge3Description = 1 AND [OtherCharge3Description] IS NULL) OR ([" +
                "OtherCharge3Description] = @Original_OtherCharge3Description)) AND ((@IsNull_Oth" +
                "erCharge4 = 1 AND [OtherCharge4] IS NULL) OR ([OtherCharge4] = @Original_OtherCh" +
                "arge4)) AND ((@IsNull_OtherCharge4Description = 1 AND [OtherCharge4Description] " +
                "IS NULL) OR ([OtherCharge4Description] = @Original_OtherCharge4Description)) AND" +
                " ((@IsNull_InvoiceAmount = 1 AND [InvoiceAmount] IS NULL) OR ([InvoiceAmount] = " +
                "@Original_InvoiceAmount)) AND ((@IsNull_AmountPaid = 1 AND [AmountPaid] IS NULL)" +
                " OR ([AmountPaid] = @Original_AmountPaid)) AND ((@IsNull_CreditsIssued = 1 AND [" +
                "CreditsIssued] IS NULL) OR ([CreditsIssued] = @Original_CreditsIssued)) AND ((@I" +
                "sNull_BalanceDue = 1 AND [BalanceDue] IS NULL) OR ([BalanceDue] = @Original_Bala" +
                "nceDue)) AND ((@IsNull_DueToOutsideCarriers = 1 AND [DueToOutsideCarriers] IS NU" +
                "LL) OR ([DueToOutsideCarriers] = @Original_DueToOutsideCarriers)) AND ((@IsNull_" +
                "DueFromOutsideCarriers = 1 AND [DueFromOutsideCarriers] IS NULL) OR ([DueFromOut" +
                "sideCarriers] = @Original_DueFromOutsideCarriers)) AND ((@IsNull_PaidInFullInd =" +
                " 1 AND [PaidInFullInd] IS NULL) OR ([PaidInFullInd] = @Original_PaidInFullInd)) " +
                "AND ((@IsNull_PaidInFullDate = 1 AND [PaidInFullDate] IS NULL) OR ([PaidInFullDa" +
                "te] = @Original_PaidInFullDate)) AND ((@IsNull_Comments = 1 AND [Comments] IS NU" +
                "LL) OR ([Comments] = @Original_Comments)) AND ((@IsNull_InvoiceStatus = 1 AND [I" +
                "nvoiceStatus] IS NULL) OR ([InvoiceStatus] = @Original_InvoiceStatus)) AND ((@Is" +
                "Null_PrintedInd = 1 AND [PrintedInd] IS NULL) OR ([PrintedInd] = @Original_Print" +
                "edInd)) AND ((@IsNull_DatePrinted = 1 AND [DatePrinted] IS NULL) OR ([DatePrinte" +
                "d] = @Original_DatePrinted)) AND ((@IsNull_CreditMemoInd = 1 AND [CreditMemoInd]" +
                " IS NULL) OR ([CreditMemoInd] = @Original_CreditMemoInd)) AND ((@IsNull_Credited" +
                "OutInd = 1 AND [CreditedOutInd] IS NULL) OR ([CreditedOutInd] = @Original_Credit" +
                "edOutInd)) AND ((@IsNull_CreditMemoID = 1 AND [CreditMemoID] IS NULL) OR ([Credi" +
                "tMemoID] = @Original_CreditMemoID)) AND ((@IsNull_ExportedInd = 1 AND [ExportedI" +
                "nd] IS NULL) OR ([ExportedInd] = @Original_ExportedInd)) AND ((@IsNull_DateExpor" +
                "ted = 1 AND [DateExported] IS NULL) OR ([DateExported] = @Original_DateExported)" +
                ") AND ((@IsNull_CreationDate = 1 AND [CreationDate] IS NULL) OR ([CreationDate] " +
                "= @Original_CreationDate)) AND ((@IsNull_CreatedBy = 1 AND [CreatedBy] IS NULL) " +
                "OR ([CreatedBy] = @Original_CreatedBy)) AND ((@IsNull_UpdatedDate = 1 AND [Updat" +
                "edDate] IS NULL) OR ([UpdatedDate] = @Original_UpdatedDate)) AND ((@IsNull_Updat" +
                "edBy = 1 AND [UpdatedBy] IS NULL) OR ([UpdatedBy] = @Original_UpdatedBy)) AND ((" +
                "@IsNull_CreditedOutBy = 1 AND [CreditedOutBy] IS NULL) OR ([CreditedOutBy] = @Or" +
                "iginal_CreditedOutBy)) AND ((@IsNull_StorageCharges = 1 AND [StorageCharges] IS " +
                "NULL) OR ([StorageCharges] = @Original_StorageCharges)) AND ((@IsNull_DATBilling" +
                "ID = 1 AND [DATBillingID] IS NULL) OR ([DATBillingID] = @Original_DATBillingID))" +
                " AND ((@IsNull_DATBillingPercentage = 1 AND [DATBillingPercentage] IS NULL) OR (" +
                "[DATBillingPercentage] = @Original_DATBillingPercentage)));\r\nSELECT BillingID, C" +
                "ustomerID, OutsideCarrierInvoiceInd, OutsideCarrierID, RunID, InvoiceDate, Invoi" +
                "ceNumber, InvoiceType, PaymentMethod, TransportCharges, FuelSurchargeRate, FuelS" +
                "urchargeRateOverrideInd, FuelSurcharge, FuelSurchargeOverrideInd, OtherCharge1, " +
                "OtherCharge1Description, OtherCharge2, OtherCharge2Description, OtherCharge3, Ot" +
                "herCharge3Description, OtherCharge4, OtherCharge4Description, InvoiceAmount, Amo" +
                "untPaid, CreditsIssued, BalanceDue, DueToOutsideCarriers, DueFromOutsideCarriers" +
                ", PaidInFullInd, PaidInFullDate, Comments, InvoiceStatus, PrintedInd, DatePrinte" +
                "d, CreditMemoInd, CreditedOutInd, CreditMemoID, ExportedInd, DateExported, Creat" +
                "ionDate, CreatedBy, UpdatedDate, UpdatedBy, CreditedOutBy, StorageCharges, DATBi" +
                "llingID, DATBillingPercentage FROM Billing WHERE (BillingID = @BillingID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutsideCarrierInvoiceInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutsideCarrierInvoiceInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutsideCarrierID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutsideCarrierID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RunID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RunID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaymentMethod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransportCharges", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "TransportCharges", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FuelSurchargeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "FuelSurchargeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FuelSurchargeRateOverrideInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelSurchargeRateOverrideInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FuelSurcharge", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "FuelSurcharge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FuelSurchargeOverrideInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelSurchargeOverrideInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherCharge1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "OtherCharge1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherCharge1Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge1Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherCharge2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "OtherCharge2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherCharge2Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge2Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherCharge3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "OtherCharge3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherCharge3Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge3Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherCharge4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "OtherCharge4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherCharge4Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge4Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "InvoiceAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AmountPaid", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "AmountPaid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreditsIssued", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "CreditsIssued", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BalanceDue", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "BalanceDue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DueToOutsideCarriers", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "DueToOutsideCarriers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DueFromOutsideCarriers", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "DueFromOutsideCarriers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaidInFullInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaidInFullInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaidInFullDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaidInFullDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comments", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comments", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintedInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DatePrinted", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DatePrinted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreditMemoInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditMemoInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreditedOutInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditedOutInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreditMemoID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditMemoID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExportedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExportedInd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateExported", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateExported", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreditedOutBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditedOutBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StorageCharges", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "StorageCharges", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATBillingID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATBillingID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATBillingPercentage", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "DATBillingPercentage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BillingID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillingID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OutsideCarrierInvoiceInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutsideCarrierInvoiceInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutsideCarrierInvoiceInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutsideCarrierInvoiceInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OutsideCarrierID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutsideCarrierID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutsideCarrierID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutsideCarrierID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RunID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RunID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RunID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RunID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PaymentMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentMethod", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaymentMethod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentMethod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TransportCharges", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransportCharges", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransportCharges", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "TransportCharges", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FuelSurchargeRate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelSurchargeRate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FuelSurchargeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "FuelSurchargeRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FuelSurchargeRateOverrideInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelSurchargeRateOverrideInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FuelSurchargeRateOverrideInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelSurchargeRateOverrideInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FuelSurcharge", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelSurcharge", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FuelSurcharge", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "FuelSurcharge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FuelSurchargeOverrideInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelSurchargeOverrideInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FuelSurchargeOverrideInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelSurchargeOverrideInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherCharge1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherCharge1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "OtherCharge1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherCharge1Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge1Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherCharge1Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge1Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherCharge2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherCharge2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "OtherCharge2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherCharge2Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge2Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherCharge2Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge2Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherCharge3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherCharge3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "OtherCharge3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherCharge3Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge3Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherCharge3Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge3Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherCharge4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherCharge4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "OtherCharge4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherCharge4Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge4Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherCharge4Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherCharge4Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceAmount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceAmount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "InvoiceAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AmountPaid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmountPaid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AmountPaid", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "AmountPaid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreditsIssued", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditsIssued", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreditsIssued", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "CreditsIssued", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BalanceDue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BalanceDue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BalanceDue", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "BalanceDue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DueToOutsideCarriers", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DueToOutsideCarriers", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DueToOutsideCarriers", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "DueToOutsideCarriers", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DueFromOutsideCarriers", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DueFromOutsideCarriers", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DueFromOutsideCarriers", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "DueFromOutsideCarriers", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PaidInFullInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaidInFullInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaidInFullInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaidInFullInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PaidInFullDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaidInFullDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaidInFullDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaidInFullDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Comments", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comments", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comments", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comments", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintedInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrintedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintedInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DatePrinted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DatePrinted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DatePrinted", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DatePrinted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreditMemoInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditMemoInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreditMemoInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditMemoInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreditedOutInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditedOutInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreditedOutInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditedOutInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreditMemoID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditMemoID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreditMemoID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditMemoID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExportedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExportedInd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExportedInd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExportedInd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateExported", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateExported", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateExported", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateExported", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreationDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UpdatedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UpdatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreditedOutBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditedOutBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreditedOutBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreditedOutBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StorageCharges", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StorageCharges", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StorageCharges", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "StorageCharges", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DATBillingID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATBillingID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATBillingID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATBillingID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DATBillingPercentage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATBillingPercentage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATBillingPercentage", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 2, "DATBillingPercentage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillingID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BillingID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutoExport.Properties.Settings.Default.AutoExport_TestConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT BillingID, CustomerID, OutsideCarrierInvoiceInd, OutsideCarrierID, RunID, InvoiceDate, InvoiceNumber, InvoiceType, PaymentMethod, TransportCharges, FuelSurchargeRate, FuelSurchargeRateOverrideInd, FuelSurcharge, FuelSurchargeOverrideInd, OtherCharge1, OtherCharge1Description, OtherCharge2, OtherCharge2Description, OtherCharge3, OtherCharge3Description, OtherCharge4, OtherCharge4Description, InvoiceAmount, AmountPaid, CreditsIssued, BalanceDue, DueToOutsideCarriers, DueFromOutsideCarriers, PaidInFullInd, PaidInFullDate, Comments, InvoiceStatus, PrintedInd, DatePrinted, CreditMemoInd, CreditedOutInd, CreditMemoID, ExportedInd, DateExported, CreationDate, CreatedBy, UpdatedDate, UpdatedBy, CreditedOutBy, StorageCharges, DATBillingID, DATBillingPercentage FROM dbo.Billing";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutoExport_TestDataSet.BillingDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutoExport_TestDataSet.BillingDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutoExport_TestDataSet.BillingDataTable dataTable = new AutoExport_TestDataSet.BillingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoExport_TestDataSet.BillingDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoExport_TestDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Billing");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_BillingID, 
                    global::System.Nullable<int> Original_CustomerID, 
                    global::System.Nullable<int> Original_OutsideCarrierInvoiceInd, 
                    global::System.Nullable<int> Original_OutsideCarrierID, 
                    global::System.Nullable<int> Original_RunID, 
                    global::System.Nullable<global::System.DateTime> Original_InvoiceDate, 
                    string Original_InvoiceNumber, 
                    string Original_InvoiceType, 
                    string Original_PaymentMethod, 
                    global::System.Nullable<decimal> Original_TransportCharges, 
                    global::System.Nullable<decimal> Original_FuelSurchargeRate, 
                    global::System.Nullable<int> Original_FuelSurchargeRateOverrideInd, 
                    global::System.Nullable<decimal> Original_FuelSurcharge, 
                    global::System.Nullable<int> Original_FuelSurchargeOverrideInd, 
                    global::System.Nullable<decimal> Original_OtherCharge1, 
                    string Original_OtherCharge1Description, 
                    global::System.Nullable<decimal> Original_OtherCharge2, 
                    string Original_OtherCharge2Description, 
                    global::System.Nullable<decimal> Original_OtherCharge3, 
                    string Original_OtherCharge3Description, 
                    global::System.Nullable<decimal> Original_OtherCharge4, 
                    string Original_OtherCharge4Description, 
                    global::System.Nullable<decimal> Original_InvoiceAmount, 
                    global::System.Nullable<decimal> Original_AmountPaid, 
                    global::System.Nullable<decimal> Original_CreditsIssued, 
                    global::System.Nullable<decimal> Original_BalanceDue, 
                    global::System.Nullable<decimal> Original_DueToOutsideCarriers, 
                    global::System.Nullable<decimal> Original_DueFromOutsideCarriers, 
                    global::System.Nullable<int> Original_PaidInFullInd, 
                    global::System.Nullable<global::System.DateTime> Original_PaidInFullDate, 
                    string Original_Comments, 
                    string Original_InvoiceStatus, 
                    global::System.Nullable<int> Original_PrintedInd, 
                    global::System.Nullable<global::System.DateTime> Original_DatePrinted, 
                    global::System.Nullable<int> Original_CreditMemoInd, 
                    global::System.Nullable<int> Original_CreditedOutInd, 
                    global::System.Nullable<int> Original_CreditMemoID, 
                    global::System.Nullable<int> Original_ExportedInd, 
                    global::System.Nullable<global::System.DateTime> Original_DateExported, 
                    global::System.Nullable<global::System.DateTime> Original_CreationDate, 
                    string Original_CreatedBy, 
                    global::System.Nullable<global::System.DateTime> Original_UpdatedDate, 
                    string Original_UpdatedBy, 
                    string Original_CreditedOutBy, 
                    global::System.Nullable<decimal> Original_StorageCharges, 
                    global::System.Nullable<int> Original_DATBillingID, 
                    global::System.Nullable<decimal> Original_DATBillingPercentage) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_BillingID));
            if ((Original_CustomerID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_CustomerID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_OutsideCarrierInvoiceInd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_OutsideCarrierInvoiceInd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_OutsideCarrierID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_OutsideCarrierID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_RunID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_RunID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoiceDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_InvoiceDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoiceNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_InvoiceNumber));
            }
            if ((Original_InvoiceType == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_InvoiceType));
            }
            if ((Original_PaymentMethod == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_PaymentMethod));
            }
            if ((Original_TransportCharges.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_TransportCharges.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_FuelSurchargeRate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((decimal)(Original_FuelSurchargeRate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_FuelSurchargeRateOverrideInd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_FuelSurchargeRateOverrideInd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_FuelSurcharge.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((decimal)(Original_FuelSurcharge.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_FuelSurchargeOverrideInd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((int)(Original_FuelSurchargeOverrideInd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_OtherCharge1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((decimal)(Original_OtherCharge1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_OtherCharge1Description == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_OtherCharge1Description));
            }
            if ((Original_OtherCharge2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((decimal)(Original_OtherCharge2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_OtherCharge2Description == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_OtherCharge2Description));
            }
            if ((Original_OtherCharge3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((decimal)(Original_OtherCharge3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_OtherCharge3Description == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_OtherCharge3Description));
            }
            if ((Original_OtherCharge4.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((decimal)(Original_OtherCharge4.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_OtherCharge4Description == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_OtherCharge4Description));
            }
            if ((Original_InvoiceAmount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((decimal)(Original_InvoiceAmount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_AmountPaid.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((decimal)(Original_AmountPaid.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_CreditsIssued.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((decimal)(Original_CreditsIssued.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_BalanceDue.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((decimal)(Original_BalanceDue.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_DueToOutsideCarriers.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((decimal)(Original_DueToOutsideCarriers.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_DueFromOutsideCarriers.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((decimal)(Original_DueFromOutsideCarriers.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_PaidInFullInd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((int)(Original_PaidInFullInd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_PaidInFullDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((System.DateTime)(Original_PaidInFullDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_Comments == null)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((string)(Original_Comments));
            }
            if ((Original_InvoiceStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((string)(Original_InvoiceStatus));
            }
            if ((Original_PrintedInd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((int)(Original_PrintedInd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_DatePrinted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((System.DateTime)(Original_DatePrinted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_CreditMemoInd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((int)(Original_CreditMemoInd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_CreditedOutInd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((int)(Original_CreditedOutInd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_CreditMemoID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((int)(Original_CreditMemoID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_ExportedInd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((int)(Original_ExportedInd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_DateExported.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((System.DateTime)(Original_DateExported.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_CreationDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((System.DateTime)(Original_CreationDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_CreatedBy == null)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((string)(Original_CreatedBy));
            }
            if ((Original_UpdatedDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((System.DateTime)(Original_UpdatedDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_UpdatedBy == null)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((string)(Original_UpdatedBy));
            }
            if ((Original_CreditedOutBy == null)) {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[86].Value = ((string)(Original_CreditedOutBy));
            }
            if ((Original_StorageCharges.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[88].Value = ((decimal)(Original_StorageCharges.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((Original_DATBillingID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[90].Value = ((int)(Original_DATBillingID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((Original_DATBillingPercentage.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[92].Value = ((decimal)(Original_DATBillingPercentage.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<int> CustomerID, 
                    global::System.Nullable<int> OutsideCarrierInvoiceInd, 
                    global::System.Nullable<int> OutsideCarrierID, 
                    global::System.Nullable<int> RunID, 
                    global::System.Nullable<global::System.DateTime> InvoiceDate, 
                    string InvoiceNumber, 
                    string InvoiceType, 
                    string PaymentMethod, 
                    global::System.Nullable<decimal> TransportCharges, 
                    global::System.Nullable<decimal> FuelSurchargeRate, 
                    global::System.Nullable<int> FuelSurchargeRateOverrideInd, 
                    global::System.Nullable<decimal> FuelSurcharge, 
                    global::System.Nullable<int> FuelSurchargeOverrideInd, 
                    global::System.Nullable<decimal> OtherCharge1, 
                    string OtherCharge1Description, 
                    global::System.Nullable<decimal> OtherCharge2, 
                    string OtherCharge2Description, 
                    global::System.Nullable<decimal> OtherCharge3, 
                    string OtherCharge3Description, 
                    global::System.Nullable<decimal> OtherCharge4, 
                    string OtherCharge4Description, 
                    global::System.Nullable<decimal> InvoiceAmount, 
                    global::System.Nullable<decimal> AmountPaid, 
                    global::System.Nullable<decimal> CreditsIssued, 
                    global::System.Nullable<decimal> BalanceDue, 
                    global::System.Nullable<decimal> DueToOutsideCarriers, 
                    global::System.Nullable<decimal> DueFromOutsideCarriers, 
                    global::System.Nullable<int> PaidInFullInd, 
                    global::System.Nullable<global::System.DateTime> PaidInFullDate, 
                    string Comments, 
                    string InvoiceStatus, 
                    global::System.Nullable<int> PrintedInd, 
                    global::System.Nullable<global::System.DateTime> DatePrinted, 
                    global::System.Nullable<int> CreditMemoInd, 
                    global::System.Nullable<int> CreditedOutInd, 
                    global::System.Nullable<int> CreditMemoID, 
                    global::System.Nullable<int> ExportedInd, 
                    global::System.Nullable<global::System.DateTime> DateExported, 
                    global::System.Nullable<global::System.DateTime> CreationDate, 
                    string CreatedBy, 
                    global::System.Nullable<global::System.DateTime> UpdatedDate, 
                    string UpdatedBy, 
                    string CreditedOutBy, 
                    global::System.Nullable<decimal> StorageCharges, 
                    global::System.Nullable<int> DATBillingID, 
                    global::System.Nullable<decimal> DATBillingPercentage) {
            if ((CustomerID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(CustomerID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((OutsideCarrierInvoiceInd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(OutsideCarrierInvoiceInd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((OutsideCarrierID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(OutsideCarrierID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((RunID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(RunID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((InvoiceDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(InvoiceDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((InvoiceNumber == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(InvoiceNumber));
            }
            if ((InvoiceType == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(InvoiceType));
            }
            if ((PaymentMethod == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(PaymentMethod));
            }
            if ((TransportCharges.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(TransportCharges.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((FuelSurchargeRate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(FuelSurchargeRate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((FuelSurchargeRateOverrideInd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(FuelSurchargeRateOverrideInd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((FuelSurcharge.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(FuelSurcharge.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((FuelSurchargeOverrideInd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(FuelSurchargeOverrideInd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((OtherCharge1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(OtherCharge1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((OtherCharge1Description == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(OtherCharge1Description));
            }
            if ((OtherCharge2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(OtherCharge2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((OtherCharge2Description == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(OtherCharge2Description));
            }
            if ((OtherCharge3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(OtherCharge3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((OtherCharge3Description == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(OtherCharge3Description));
            }
            if ((OtherCharge4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(OtherCharge4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((OtherCharge4Description == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(OtherCharge4Description));
            }
            if ((InvoiceAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(InvoiceAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((AmountPaid.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(AmountPaid.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((CreditsIssued.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(CreditsIssued.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((BalanceDue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(BalanceDue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((DueToOutsideCarriers.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(DueToOutsideCarriers.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((DueFromOutsideCarriers.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(DueFromOutsideCarriers.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((PaidInFullInd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((int)(PaidInFullInd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((PaidInFullDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((System.DateTime)(PaidInFullDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Comments == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(Comments));
            }
            if ((InvoiceStatus == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(InvoiceStatus));
            }
            if ((PrintedInd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((int)(PrintedInd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((DatePrinted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((System.DateTime)(DatePrinted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((CreditMemoInd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((int)(CreditMemoInd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((CreditedOutInd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((int)(CreditedOutInd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((CreditMemoID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((int)(CreditMemoID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((ExportedInd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((int)(ExportedInd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((DateExported.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((System.DateTime)(DateExported.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((CreationDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((System.DateTime)(CreationDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((CreatedBy == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(CreatedBy));
            }
            if ((UpdatedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((System.DateTime)(UpdatedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((UpdatedBy == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(UpdatedBy));
            }
            if ((CreditedOutBy == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(CreditedOutBy));
            }
            if ((StorageCharges.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((decimal)(StorageCharges.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((DATBillingID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((int)(DATBillingID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((DATBillingPercentage.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((decimal)(DATBillingPercentage.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> CustomerID, 
                    global::System.Nullable<int> OutsideCarrierInvoiceInd, 
                    global::System.Nullable<int> OutsideCarrierID, 
                    global::System.Nullable<int> RunID, 
                    global::System.Nullable<global::System.DateTime> InvoiceDate, 
                    string InvoiceNumber, 
                    string InvoiceType, 
                    string PaymentMethod, 
                    global::System.Nullable<decimal> TransportCharges, 
                    global::System.Nullable<decimal> FuelSurchargeRate, 
                    global::System.Nullable<int> FuelSurchargeRateOverrideInd, 
                    global::System.Nullable<decimal> FuelSurcharge, 
                    global::System.Nullable<int> FuelSurchargeOverrideInd, 
                    global::System.Nullable<decimal> OtherCharge1, 
                    string OtherCharge1Description, 
                    global::System.Nullable<decimal> OtherCharge2, 
                    string OtherCharge2Description, 
                    global::System.Nullable<decimal> OtherCharge3, 
                    string OtherCharge3Description, 
                    global::System.Nullable<decimal> OtherCharge4, 
                    string OtherCharge4Description, 
                    global::System.Nullable<decimal> InvoiceAmount, 
                    global::System.Nullable<decimal> AmountPaid, 
                    global::System.Nullable<decimal> CreditsIssued, 
                    global::System.Nullable<decimal> BalanceDue, 
                    global::System.Nullable<decimal> DueToOutsideCarriers, 
                    global::System.Nullable<decimal> DueFromOutsideCarriers, 
                    global::System.Nullable<int> PaidInFullInd, 
                    global::System.Nullable<global::System.DateTime> PaidInFullDate, 
                    string Comments, 
                    string InvoiceStatus, 
                    global::System.Nullable<int> PrintedInd, 
                    global::System.Nullable<global::System.DateTime> DatePrinted, 
                    global::System.Nullable<int> CreditMemoInd, 
                    global::System.Nullable<int> CreditedOutInd, 
                    global::System.Nullable<int> CreditMemoID, 
                    global::System.Nullable<int> ExportedInd, 
                    global::System.Nullable<global::System.DateTime> DateExported, 
                    global::System.Nullable<global::System.DateTime> CreationDate, 
                    string CreatedBy, 
                    global::System.Nullable<global::System.DateTime> UpdatedDate, 
                    string UpdatedBy, 
                    string CreditedOutBy, 
                    global::System.Nullable<decimal> StorageCharges, 
                    global::System.Nullable<int> DATBillingID, 
                    global::System.Nullable<decimal> DATBillingPercentage, 
                    int Original_BillingID, 
                    global::System.Nullable<int> Original_CustomerID, 
                    global::System.Nullable<int> Original_OutsideCarrierInvoiceInd, 
                    global::System.Nullable<int> Original_OutsideCarrierID, 
                    global::System.Nullable<int> Original_RunID, 
                    global::System.Nullable<global::System.DateTime> Original_InvoiceDate, 
                    string Original_InvoiceNumber, 
                    string Original_InvoiceType, 
                    string Original_PaymentMethod, 
                    global::System.Nullable<decimal> Original_TransportCharges, 
                    global::System.Nullable<decimal> Original_FuelSurchargeRate, 
                    global::System.Nullable<int> Original_FuelSurchargeRateOverrideInd, 
                    global::System.Nullable<decimal> Original_FuelSurcharge, 
                    global::System.Nullable<int> Original_FuelSurchargeOverrideInd, 
                    global::System.Nullable<decimal> Original_OtherCharge1, 
                    string Original_OtherCharge1Description, 
                    global::System.Nullable<decimal> Original_OtherCharge2, 
                    string Original_OtherCharge2Description, 
                    global::System.Nullable<decimal> Original_OtherCharge3, 
                    string Original_OtherCharge3Description, 
                    global::System.Nullable<decimal> Original_OtherCharge4, 
                    string Original_OtherCharge4Description, 
                    global::System.Nullable<decimal> Original_InvoiceAmount, 
                    global::System.Nullable<decimal> Original_AmountPaid, 
                    global::System.Nullable<decimal> Original_CreditsIssued, 
                    global::System.Nullable<decimal> Original_BalanceDue, 
                    global::System.Nullable<decimal> Original_DueToOutsideCarriers, 
                    global::System.Nullable<decimal> Original_DueFromOutsideCarriers, 
                    global::System.Nullable<int> Original_PaidInFullInd, 
                    global::System.Nullable<global::System.DateTime> Original_PaidInFullDate, 
                    string Original_Comments, 
                    string Original_InvoiceStatus, 
                    global::System.Nullable<int> Original_PrintedInd, 
                    global::System.Nullable<global::System.DateTime> Original_DatePrinted, 
                    global::System.Nullable<int> Original_CreditMemoInd, 
                    global::System.Nullable<int> Original_CreditedOutInd, 
                    global::System.Nullable<int> Original_CreditMemoID, 
                    global::System.Nullable<int> Original_ExportedInd, 
                    global::System.Nullable<global::System.DateTime> Original_DateExported, 
                    global::System.Nullable<global::System.DateTime> Original_CreationDate, 
                    string Original_CreatedBy, 
                    global::System.Nullable<global::System.DateTime> Original_UpdatedDate, 
                    string Original_UpdatedBy, 
                    string Original_CreditedOutBy, 
                    global::System.Nullable<decimal> Original_StorageCharges, 
                    global::System.Nullable<int> Original_DATBillingID, 
                    global::System.Nullable<decimal> Original_DATBillingPercentage, 
                    int BillingID) {
            if ((CustomerID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(CustomerID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((OutsideCarrierInvoiceInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(OutsideCarrierInvoiceInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((OutsideCarrierID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(OutsideCarrierID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((RunID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(RunID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((InvoiceDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(InvoiceDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((InvoiceNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(InvoiceNumber));
            }
            if ((InvoiceType == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(InvoiceType));
            }
            if ((PaymentMethod == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(PaymentMethod));
            }
            if ((TransportCharges.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(TransportCharges.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((FuelSurchargeRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(FuelSurchargeRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((FuelSurchargeRateOverrideInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(FuelSurchargeRateOverrideInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((FuelSurcharge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(FuelSurcharge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((FuelSurchargeOverrideInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(FuelSurchargeOverrideInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((OtherCharge1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(OtherCharge1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((OtherCharge1Description == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(OtherCharge1Description));
            }
            if ((OtherCharge2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(OtherCharge2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((OtherCharge2Description == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(OtherCharge2Description));
            }
            if ((OtherCharge3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(OtherCharge3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((OtherCharge3Description == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(OtherCharge3Description));
            }
            if ((OtherCharge4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(OtherCharge4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((OtherCharge4Description == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(OtherCharge4Description));
            }
            if ((InvoiceAmount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(InvoiceAmount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((AmountPaid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(AmountPaid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((CreditsIssued.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(CreditsIssued.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((BalanceDue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(BalanceDue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((DueToOutsideCarriers.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(DueToOutsideCarriers.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((DueFromOutsideCarriers.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(DueFromOutsideCarriers.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((PaidInFullInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(PaidInFullInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((PaidInFullDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(PaidInFullDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Comments == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Comments));
            }
            if ((InvoiceStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(InvoiceStatus));
            }
            if ((PrintedInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(PrintedInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((DatePrinted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(DatePrinted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((CreditMemoInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(CreditMemoInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((CreditedOutInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(CreditedOutInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((CreditMemoID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(CreditMemoID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((ExportedInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(ExportedInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((DateExported.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(DateExported.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((CreationDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((System.DateTime)(CreationDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((CreatedBy == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(CreatedBy));
            }
            if ((UpdatedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(UpdatedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((UpdatedBy == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(UpdatedBy));
            }
            if ((CreditedOutBy == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(CreditedOutBy));
            }
            if ((StorageCharges.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(StorageCharges.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((DATBillingID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(DATBillingID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((DATBillingPercentage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(DATBillingPercentage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(Original_BillingID));
            if ((Original_CustomerID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((int)(Original_CustomerID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_OutsideCarrierInvoiceInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((int)(Original_OutsideCarrierInvoiceInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_OutsideCarrierID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((int)(Original_OutsideCarrierID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_RunID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((int)(Original_RunID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoiceDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((System.DateTime)(Original_InvoiceDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoiceNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_InvoiceNumber));
            }
            if ((Original_InvoiceType == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_InvoiceType));
            }
            if ((Original_PaymentMethod == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_PaymentMethod));
            }
            if ((Original_TransportCharges.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((decimal)(Original_TransportCharges.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_FuelSurchargeRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((decimal)(Original_FuelSurchargeRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_FuelSurchargeRateOverrideInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(Original_FuelSurchargeRateOverrideInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_FuelSurcharge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((decimal)(Original_FuelSurcharge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_FuelSurchargeOverrideInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((int)(Original_FuelSurchargeOverrideInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_OtherCharge1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((decimal)(Original_OtherCharge1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_OtherCharge1Description == null)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(Original_OtherCharge1Description));
            }
            if ((Original_OtherCharge2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[78].Value = ((decimal)(Original_OtherCharge2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_OtherCharge2Description == null)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(Original_OtherCharge2Description));
            }
            if ((Original_OtherCharge3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((decimal)(Original_OtherCharge3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_OtherCharge3Description == null)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((string)(Original_OtherCharge3Description));
            }
            if ((Original_OtherCharge4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((decimal)(Original_OtherCharge4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((Original_OtherCharge4Description == null)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[88].Value = ((string)(Original_OtherCharge4Description));
            }
            if ((Original_InvoiceAmount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[90].Value = ((decimal)(Original_InvoiceAmount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((Original_AmountPaid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[92].Value = ((decimal)(Original_AmountPaid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((Original_CreditsIssued.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((decimal)(Original_CreditsIssued.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((Original_BalanceDue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[96].Value = ((decimal)(Original_BalanceDue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((Original_DueToOutsideCarriers.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[98].Value = ((decimal)(Original_DueToOutsideCarriers.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((Original_DueFromOutsideCarriers.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[100].Value = ((decimal)(Original_DueFromOutsideCarriers.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((Original_PaidInFullInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[102].Value = ((int)(Original_PaidInFullInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((Original_PaidInFullDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[104].Value = ((System.DateTime)(Original_PaidInFullDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((Original_Comments == null)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(Original_Comments));
            }
            if ((Original_InvoiceStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[108].Value = ((string)(Original_InvoiceStatus));
            }
            if ((Original_PrintedInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[110].Value = ((int)(Original_PrintedInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            if ((Original_DatePrinted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[112].Value = ((System.DateTime)(Original_DatePrinted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((Original_CreditMemoInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[114].Value = ((int)(Original_CreditMemoInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((Original_CreditedOutInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[116].Value = ((int)(Original_CreditedOutInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            if ((Original_CreditMemoID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[118].Value = ((int)(Original_CreditMemoID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            if ((Original_ExportedInd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[120].Value = ((int)(Original_ExportedInd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            if ((Original_DateExported.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[122].Value = ((System.DateTime)(Original_DateExported.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            if ((Original_CreationDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[124].Value = ((System.DateTime)(Original_CreationDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            if ((Original_CreatedBy == null)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[126].Value = ((string)(Original_CreatedBy));
            }
            if ((Original_UpdatedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[128].Value = ((System.DateTime)(Original_UpdatedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            if ((Original_UpdatedBy == null)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[130].Value = ((string)(Original_UpdatedBy));
            }
            if ((Original_CreditedOutBy == null)) {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[132].Value = ((string)(Original_CreditedOutBy));
            }
            if ((Original_StorageCharges.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[134].Value = ((decimal)(Original_StorageCharges.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            if ((Original_DATBillingID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[136].Value = ((int)(Original_DATBillingID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            if ((Original_DATBillingPercentage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[138].Value = ((decimal)(Original_DATBillingPercentage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[139].Value = ((int)(BillingID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> CustomerID, 
                    global::System.Nullable<int> OutsideCarrierInvoiceInd, 
                    global::System.Nullable<int> OutsideCarrierID, 
                    global::System.Nullable<int> RunID, 
                    global::System.Nullable<global::System.DateTime> InvoiceDate, 
                    string InvoiceNumber, 
                    string InvoiceType, 
                    string PaymentMethod, 
                    global::System.Nullable<decimal> TransportCharges, 
                    global::System.Nullable<decimal> FuelSurchargeRate, 
                    global::System.Nullable<int> FuelSurchargeRateOverrideInd, 
                    global::System.Nullable<decimal> FuelSurcharge, 
                    global::System.Nullable<int> FuelSurchargeOverrideInd, 
                    global::System.Nullable<decimal> OtherCharge1, 
                    string OtherCharge1Description, 
                    global::System.Nullable<decimal> OtherCharge2, 
                    string OtherCharge2Description, 
                    global::System.Nullable<decimal> OtherCharge3, 
                    string OtherCharge3Description, 
                    global::System.Nullable<decimal> OtherCharge4, 
                    string OtherCharge4Description, 
                    global::System.Nullable<decimal> InvoiceAmount, 
                    global::System.Nullable<decimal> AmountPaid, 
                    global::System.Nullable<decimal> CreditsIssued, 
                    global::System.Nullable<decimal> BalanceDue, 
                    global::System.Nullable<decimal> DueToOutsideCarriers, 
                    global::System.Nullable<decimal> DueFromOutsideCarriers, 
                    global::System.Nullable<int> PaidInFullInd, 
                    global::System.Nullable<global::System.DateTime> PaidInFullDate, 
                    string Comments, 
                    string InvoiceStatus, 
                    global::System.Nullable<int> PrintedInd, 
                    global::System.Nullable<global::System.DateTime> DatePrinted, 
                    global::System.Nullable<int> CreditMemoInd, 
                    global::System.Nullable<int> CreditedOutInd, 
                    global::System.Nullable<int> CreditMemoID, 
                    global::System.Nullable<int> ExportedInd, 
                    global::System.Nullable<global::System.DateTime> DateExported, 
                    global::System.Nullable<global::System.DateTime> CreationDate, 
                    string CreatedBy, 
                    global::System.Nullable<global::System.DateTime> UpdatedDate, 
                    string UpdatedBy, 
                    string CreditedOutBy, 
                    global::System.Nullable<decimal> StorageCharges, 
                    global::System.Nullable<int> DATBillingID, 
                    global::System.Nullable<decimal> DATBillingPercentage, 
                    int Original_BillingID, 
                    global::System.Nullable<int> Original_CustomerID, 
                    global::System.Nullable<int> Original_OutsideCarrierInvoiceInd, 
                    global::System.Nullable<int> Original_OutsideCarrierID, 
                    global::System.Nullable<int> Original_RunID, 
                    global::System.Nullable<global::System.DateTime> Original_InvoiceDate, 
                    string Original_InvoiceNumber, 
                    string Original_InvoiceType, 
                    string Original_PaymentMethod, 
                    global::System.Nullable<decimal> Original_TransportCharges, 
                    global::System.Nullable<decimal> Original_FuelSurchargeRate, 
                    global::System.Nullable<int> Original_FuelSurchargeRateOverrideInd, 
                    global::System.Nullable<decimal> Original_FuelSurcharge, 
                    global::System.Nullable<int> Original_FuelSurchargeOverrideInd, 
                    global::System.Nullable<decimal> Original_OtherCharge1, 
                    string Original_OtherCharge1Description, 
                    global::System.Nullable<decimal> Original_OtherCharge2, 
                    string Original_OtherCharge2Description, 
                    global::System.Nullable<decimal> Original_OtherCharge3, 
                    string Original_OtherCharge3Description, 
                    global::System.Nullable<decimal> Original_OtherCharge4, 
                    string Original_OtherCharge4Description, 
                    global::System.Nullable<decimal> Original_InvoiceAmount, 
                    global::System.Nullable<decimal> Original_AmountPaid, 
                    global::System.Nullable<decimal> Original_CreditsIssued, 
                    global::System.Nullable<decimal> Original_BalanceDue, 
                    global::System.Nullable<decimal> Original_DueToOutsideCarriers, 
                    global::System.Nullable<decimal> Original_DueFromOutsideCarriers, 
                    global::System.Nullable<int> Original_PaidInFullInd, 
                    global::System.Nullable<global::System.DateTime> Original_PaidInFullDate, 
                    string Original_Comments, 
                    string Original_InvoiceStatus, 
                    global::System.Nullable<int> Original_PrintedInd, 
                    global::System.Nullable<global::System.DateTime> Original_DatePrinted, 
                    global::System.Nullable<int> Original_CreditMemoInd, 
                    global::System.Nullable<int> Original_CreditedOutInd, 
                    global::System.Nullable<int> Original_CreditMemoID, 
                    global::System.Nullable<int> Original_ExportedInd, 
                    global::System.Nullable<global::System.DateTime> Original_DateExported, 
                    global::System.Nullable<global::System.DateTime> Original_CreationDate, 
                    string Original_CreatedBy, 
                    global::System.Nullable<global::System.DateTime> Original_UpdatedDate, 
                    string Original_UpdatedBy, 
                    string Original_CreditedOutBy, 
                    global::System.Nullable<decimal> Original_StorageCharges, 
                    global::System.Nullable<int> Original_DATBillingID, 
                    global::System.Nullable<decimal> Original_DATBillingPercentage) {
            return this.Update(CustomerID, OutsideCarrierInvoiceInd, OutsideCarrierID, RunID, InvoiceDate, InvoiceNumber, InvoiceType, PaymentMethod, TransportCharges, FuelSurchargeRate, FuelSurchargeRateOverrideInd, FuelSurcharge, FuelSurchargeOverrideInd, OtherCharge1, OtherCharge1Description, OtherCharge2, OtherCharge2Description, OtherCharge3, OtherCharge3Description, OtherCharge4, OtherCharge4Description, InvoiceAmount, AmountPaid, CreditsIssued, BalanceDue, DueToOutsideCarriers, DueFromOutsideCarriers, PaidInFullInd, PaidInFullDate, Comments, InvoiceStatus, PrintedInd, DatePrinted, CreditMemoInd, CreditedOutInd, CreditMemoID, ExportedInd, DateExported, CreationDate, CreatedBy, UpdatedDate, UpdatedBy, CreditedOutBy, StorageCharges, DATBillingID, DATBillingPercentage, Original_BillingID, Original_CustomerID, Original_OutsideCarrierInvoiceInd, Original_OutsideCarrierID, Original_RunID, Original_InvoiceDate, Original_InvoiceNumber, Original_InvoiceType, Original_PaymentMethod, Original_TransportCharges, Original_FuelSurchargeRate, Original_FuelSurchargeRateOverrideInd, Original_FuelSurcharge, Original_FuelSurchargeOverrideInd, Original_OtherCharge1, Original_OtherCharge1Description, Original_OtherCharge2, Original_OtherCharge2Description, Original_OtherCharge3, Original_OtherCharge3Description, Original_OtherCharge4, Original_OtherCharge4Description, Original_InvoiceAmount, Original_AmountPaid, Original_CreditsIssued, Original_BalanceDue, Original_DueToOutsideCarriers, Original_DueFromOutsideCarriers, Original_PaidInFullInd, Original_PaidInFullDate, Original_Comments, Original_InvoiceStatus, Original_PrintedInd, Original_DatePrinted, Original_CreditMemoInd, Original_CreditedOutInd, Original_CreditMemoID, Original_ExportedInd, Original_DateExported, Original_CreationDate, Original_CreatedBy, Original_UpdatedDate, Original_UpdatedBy, Original_CreditedOutBy, Original_StorageCharges, Original_DATBillingID, Original_DATBillingPercentage, Original_BillingID);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private AEExporterTableAdapter _aEExporterTableAdapter;
        
        private AutoportExportVehiclesTableAdapter _autoportExportVehiclesTableAdapter;
        
        private BillingTableAdapter _billingTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public AEExporterTableAdapter AEExporterTableAdapter {
            get {
                return this._aEExporterTableAdapter;
            }
            set {
                this._aEExporterTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public AutoportExportVehiclesTableAdapter AutoportExportVehiclesTableAdapter {
            get {
                return this._autoportExportVehiclesTableAdapter;
            }
            set {
                this._autoportExportVehiclesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BillingTableAdapter BillingTableAdapter {
            get {
                return this._billingTableAdapter;
            }
            set {
                this._billingTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._aEExporterTableAdapter != null) 
                            && (this._aEExporterTableAdapter.Connection != null))) {
                    return this._aEExporterTableAdapter.Connection;
                }
                if (((this._autoportExportVehiclesTableAdapter != null) 
                            && (this._autoportExportVehiclesTableAdapter.Connection != null))) {
                    return this._autoportExportVehiclesTableAdapter.Connection;
                }
                if (((this._billingTableAdapter != null) 
                            && (this._billingTableAdapter.Connection != null))) {
                    return this._billingTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._aEExporterTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._autoportExportVehiclesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._billingTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(AutoExport_TestDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._aEExporterTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.AEExporter.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._aEExporterTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._autoportExportVehiclesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.AutoportExportVehicles.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._autoportExportVehiclesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._billingTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Billing.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._billingTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(AutoExport_TestDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._aEExporterTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.AEExporter.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._aEExporterTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._autoportExportVehiclesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.AutoportExportVehicles.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._autoportExportVehiclesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._billingTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Billing.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._billingTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(AutoExport_TestDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._billingTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Billing.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._billingTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._autoportExportVehiclesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.AutoportExportVehicles.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._autoportExportVehiclesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._aEExporterTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.AEExporter.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._aEExporterTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(AutoExport_TestDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._aEExporterTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aEExporterTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._autoportExportVehiclesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._autoportExportVehiclesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._billingTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._billingTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._aEExporterTableAdapter != null)) {
                    revertConnections.Add(this._aEExporterTableAdapter, this._aEExporterTableAdapter.Connection);
                    this._aEExporterTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._aEExporterTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._aEExporterTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aEExporterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aEExporterTableAdapter.Adapter);
                    }
                }
                if ((this._autoportExportVehiclesTableAdapter != null)) {
                    revertConnections.Add(this._autoportExportVehiclesTableAdapter, this._autoportExportVehiclesTableAdapter.Connection);
                    this._autoportExportVehiclesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._autoportExportVehiclesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._autoportExportVehiclesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._autoportExportVehiclesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._autoportExportVehiclesTableAdapter.Adapter);
                    }
                }
                if ((this._billingTableAdapter != null)) {
                    revertConnections.Add(this._billingTableAdapter, this._billingTableAdapter.Connection);
                    this._billingTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._billingTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._billingTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._billingTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._billingTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._aEExporterTableAdapter != null)) {
                    this._aEExporterTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._aEExporterTableAdapter]));
                    this._aEExporterTableAdapter.Transaction = null;
                }
                if ((this._autoportExportVehiclesTableAdapter != null)) {
                    this._autoportExportVehiclesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._autoportExportVehiclesTableAdapter]));
                    this._autoportExportVehiclesTableAdapter.Transaction = null;
                }
                if ((this._billingTableAdapter != null)) {
                    this._billingTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._billingTableAdapter]));
                    this._billingTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591